// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package accessors

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/thetatoken/thetasubchain/eth"
	"github.com/thetatoken/thetasubchain/eth/abi"
	"github.com/thetatoken/thetasubchain/eth/abi/bind"
	"github.com/thetatoken/theta/common"
	"github.com/thetatoken/thetasubchain/eth/core/types"
	"github.com/thetatoken/thetasubchain/eth/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// ChainRegistrarOnMainchainSubchainMetadata is an auto generated low-level Go binding around an user-defined struct.
type ChainRegistrarOnMainchainSubchainMetadata struct {
	Guarantor          common.Address
	CollateralAmount   *big.Int
	GovernanceToken    common.Address
	GenesisHash        string
	RegistrationHeight *big.Int
	Exists             bool
}

// ValidatorStakeManagerStake is an auto generated low-level Go binding around an user-defined struct.
type ValidatorStakeManagerStake struct {
	Validator   common.Address
	ShareAmount *big.Int
}

// ValidatorStakeManagerStakeSnapshot is an auto generated low-level Go binding around an user-defined struct.
type ValidatorStakeManagerStakeSnapshot struct {
	Height *big.Int
	Stakes []ValidatorStakeManagerStake
}

// WithdrawalQueueWithdrawalRequest is an auto generated low-level Go binding around an user-defined struct.
type WithdrawalQueueWithdrawalRequest struct {
	Receiver     common.Address
	Amount       *big.Int
	ReturnHeight *big.Int
}

// ChainRegistrarOnMainchainMetaData contains all meta data concerning the ChainRegistrarOnMainchain contract.
var ChainRegistrarOnMainchainMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wTheta_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"superAdmin_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"governor_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numBlocksPerDynasty_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalPendingPeriodInBlocks_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"crossChainFee_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialFeeRequired_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fallbackReceiver_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slashAmount\",\"type\":\"uint256\"}],\"name\":\"SlashChainCollateral\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slashAmount\",\"type\":\"uint256\"}],\"name\":\"SlashValidatorCollateral\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"crossChainFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fallbackReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialFeeRequired\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minChainCollateralAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numBlocksPerDynasty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"subchainIDs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"subchainMetadataMap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"guarantor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"contractSubchainGovernanceToken\",\"name\":\"governanceToken\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"genesisHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"registrationHeight\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"superAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vcm\",\"outputs\":[{\"internalType\":\"contractValidatorCollateralManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vsm\",\"outputs\":[{\"internalType\":\"contractValidatorStakeManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wTheta\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawalPendingPeriodInBlocks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"governanceToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"genesisHash\",\"type\":\"string\"}],\"name\":\"registerSubchain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"additionalCollateral\",\"type\":\"uint256\"}],\"name\":\"addSubchainCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"}],\"name\":\"deregisterSubchain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"validatorCandidate\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"depositCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"validatorCandidate\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"}],\"name\":\"claimCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"govTokenAmount\",\"type\":\"uint256\"}],\"name\":\"depositStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shareAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"}],\"name\":\"claimStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slashAmount\",\"type\":\"uint256\"}],\"name\":\"slashChainCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"guarantor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slashAmount\",\"type\":\"uint256\"}],\"name\":\"slashValidatorCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newSuperAdmin\",\"type\":\"address\"}],\"name\":\"updateSuperAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"updateAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newGovernor\",\"type\":\"address\"}],\"name\":\"updateGovernor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"updateMinChainCollateralAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"updateMinValidatorCollateralAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"updateVCMOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"updateVSMOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newCrossChainFee\",\"type\":\"uint256\"}],\"name\":\"updateCrossChainFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newFallbackReceiver\",\"type\":\"address\"}],\"name\":\"updateFallbackReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDynasty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"dynasty\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCrossChainFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFallbackReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllSubchainIDs\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"}],\"name\":\"isARegisteredSubchain\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"}],\"name\":\"getSubchainMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"guarantor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"contractSubchainGovernanceToken\",\"name\":\"governanceToken\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"genesisHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"registrationHeight\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"internalType\":\"structChainRegistrarOnMainchain.SubchainMetadata\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"}],\"name\":\"getSubchainRegistrationHeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"}],\"name\":\"getStakeSnapshotHeights\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumBlocksPerDynasty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockHeight\",\"type\":\"uint256\"}],\"name\":\"getStakeSnapshot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"targetSnapshotHeight\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"height\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shareAmount\",\"type\":\"uint256\"}],\"internalType\":\"structValidatorStakeManager.Stake[]\",\"name\":\"stakes\",\"type\":\"tuple[]\"}],\"internalType\":\"structValidatorStakeManager.StakeSnapshot\",\"name\":\"targetStakeSnapshot\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dynasty\",\"type\":\"uint256\"}],\"name\":\"getValidatorSet\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"validators\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shareAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dynasty\",\"type\":\"uint256\"}],\"name\":\"getTotalValidatorShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockHeight\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"}],\"name\":\"getValidatorShares\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isAValidator\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"shareAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"}],\"name\":\"getValidatorGuarantorsWithPendingWithdrawals\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"guarantor\",\"type\":\"address\"}],\"name\":\"getPendingValidatorCollateralWithdrawals\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"returnHeight\",\"type\":\"uint256\"}],\"internalType\":\"structWithdrawalQueue.WithdrawalRequest[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"}],\"name\":\"getStakersWithPendingWithdrawals\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"getPendingStakeWithdrawals\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"returnHeight\",\"type\":\"uint256\"}],\"internalType\":\"structWithdrawalQueue.WithdrawalRequest[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]",
	Bin: "",
}

// ChainRegistrarOnMainchainABI is the input ABI used to generate the binding from.
// Deprecated: Use ChainRegistrarOnMainchainMetaData.ABI instead.
var ChainRegistrarOnMainchainABI = ChainRegistrarOnMainchainMetaData.ABI

// ChainRegistrarOnMainchainBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ChainRegistrarOnMainchainMetaData.Bin instead.
var ChainRegistrarOnMainchainBin = ChainRegistrarOnMainchainMetaData.Bin

// DeployChainRegistrarOnMainchain deploys a new Ethereum contract, binding an instance of ChainRegistrarOnMainchain to it.
func DeployChainRegistrarOnMainchain(auth *bind.TransactOpts, backend bind.ContractBackend, wTheta_ common.Address, superAdmin_ common.Address, admin_ common.Address, governor_ common.Address, numBlocksPerDynasty_ *big.Int, withdrawalPendingPeriodInBlocks_ *big.Int, crossChainFee_ *big.Int, initialFeeRequired_ *big.Int, fallbackReceiver_ common.Address) (common.Address, *types.Transaction, *ChainRegistrarOnMainchain, error) {
	parsed, err := ChainRegistrarOnMainchainMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ChainRegistrarOnMainchainBin), backend, wTheta_, superAdmin_, admin_, governor_, numBlocksPerDynasty_, withdrawalPendingPeriodInBlocks_, crossChainFee_, initialFeeRequired_, fallbackReceiver_)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &ChainRegistrarOnMainchain{ChainRegistrarOnMainchainCaller: ChainRegistrarOnMainchainCaller{contract: contract}, ChainRegistrarOnMainchainTransactor: ChainRegistrarOnMainchainTransactor{contract: contract}, ChainRegistrarOnMainchainFilterer: ChainRegistrarOnMainchainFilterer{contract: contract}}, nil
}

// ChainRegistrarOnMainchain is an auto generated Go binding around an Ethereum contract.
type ChainRegistrarOnMainchain struct {
	ChainRegistrarOnMainchainCaller     // Read-only binding to the contract
	ChainRegistrarOnMainchainTransactor // Write-only binding to the contract
	ChainRegistrarOnMainchainFilterer   // Log filterer for contract events
}

// ChainRegistrarOnMainchainCaller is an auto generated read-only Go binding around an Ethereum contract.
type ChainRegistrarOnMainchainCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ChainRegistrarOnMainchainTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ChainRegistrarOnMainchainTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ChainRegistrarOnMainchainFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ChainRegistrarOnMainchainFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ChainRegistrarOnMainchainSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ChainRegistrarOnMainchainSession struct {
	Contract     *ChainRegistrarOnMainchain // Generic contract binding to set the session for
	CallOpts     bind.CallOpts              // Call options to use throughout this session
	TransactOpts bind.TransactOpts          // Transaction auth options to use throughout this session
}

// ChainRegistrarOnMainchainCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ChainRegistrarOnMainchainCallerSession struct {
	Contract *ChainRegistrarOnMainchainCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts                    // Call options to use throughout this session
}

// ChainRegistrarOnMainchainTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ChainRegistrarOnMainchainTransactorSession struct {
	Contract     *ChainRegistrarOnMainchainTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts                    // Transaction auth options to use throughout this session
}

// ChainRegistrarOnMainchainRaw is an auto generated low-level Go binding around an Ethereum contract.
type ChainRegistrarOnMainchainRaw struct {
	Contract *ChainRegistrarOnMainchain // Generic contract binding to access the raw methods on
}

// ChainRegistrarOnMainchainCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ChainRegistrarOnMainchainCallerRaw struct {
	Contract *ChainRegistrarOnMainchainCaller // Generic read-only contract binding to access the raw methods on
}

// ChainRegistrarOnMainchainTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ChainRegistrarOnMainchainTransactorRaw struct {
	Contract *ChainRegistrarOnMainchainTransactor // Generic write-only contract binding to access the raw methods on
}

// NewChainRegistrarOnMainchain creates a new instance of ChainRegistrarOnMainchain, bound to a specific deployed contract.
func NewChainRegistrarOnMainchain(address common.Address, backend bind.ContractBackend) (*ChainRegistrarOnMainchain, error) {
	contract, err := bindChainRegistrarOnMainchain(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &ChainRegistrarOnMainchain{ChainRegistrarOnMainchainCaller: ChainRegistrarOnMainchainCaller{contract: contract}, ChainRegistrarOnMainchainTransactor: ChainRegistrarOnMainchainTransactor{contract: contract}, ChainRegistrarOnMainchainFilterer: ChainRegistrarOnMainchainFilterer{contract: contract}}, nil
}

// NewChainRegistrarOnMainchainCaller creates a new read-only instance of ChainRegistrarOnMainchain, bound to a specific deployed contract.
func NewChainRegistrarOnMainchainCaller(address common.Address, caller bind.ContractCaller) (*ChainRegistrarOnMainchainCaller, error) {
	contract, err := bindChainRegistrarOnMainchain(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ChainRegistrarOnMainchainCaller{contract: contract}, nil
}

// NewChainRegistrarOnMainchainTransactor creates a new write-only instance of ChainRegistrarOnMainchain, bound to a specific deployed contract.
func NewChainRegistrarOnMainchainTransactor(address common.Address, transactor bind.ContractTransactor) (*ChainRegistrarOnMainchainTransactor, error) {
	contract, err := bindChainRegistrarOnMainchain(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ChainRegistrarOnMainchainTransactor{contract: contract}, nil
}

// NewChainRegistrarOnMainchainFilterer creates a new log filterer instance of ChainRegistrarOnMainchain, bound to a specific deployed contract.
func NewChainRegistrarOnMainchainFilterer(address common.Address, filterer bind.ContractFilterer) (*ChainRegistrarOnMainchainFilterer, error) {
	contract, err := bindChainRegistrarOnMainchain(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ChainRegistrarOnMainchainFilterer{contract: contract}, nil
}

// bindChainRegistrarOnMainchain binds a generic wrapper to an already deployed contract.
func bindChainRegistrarOnMainchain(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(ChainRegistrarOnMainchainABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ChainRegistrarOnMainchain.Contract.ChainRegistrarOnMainchainCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.Contract.ChainRegistrarOnMainchainTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.Contract.ChainRegistrarOnMainchainTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ChainRegistrarOnMainchain.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.Contract.contract.Transact(opts, method, params...)
}

// Admin is a free data retrieval call binding the contract method 0xf851a440.
//
// Solidity: function admin() view returns(address)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCaller) Admin(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ChainRegistrarOnMainchain.contract.Call(opts, &out, "admin")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Admin is a free data retrieval call binding the contract method 0xf851a440.
//
// Solidity: function admin() view returns(address)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) Admin() (common.Address, error) {
	return _ChainRegistrarOnMainchain.Contract.Admin(&_ChainRegistrarOnMainchain.CallOpts)
}

// Admin is a free data retrieval call binding the contract method 0xf851a440.
//
// Solidity: function admin() view returns(address)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCallerSession) Admin() (common.Address, error) {
	return _ChainRegistrarOnMainchain.Contract.Admin(&_ChainRegistrarOnMainchain.CallOpts)
}

// CrossChainFee is a free data retrieval call binding the contract method 0x164d29f6.
//
// Solidity: function crossChainFee() view returns(uint256)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCaller) CrossChainFee(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ChainRegistrarOnMainchain.contract.Call(opts, &out, "crossChainFee")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// CrossChainFee is a free data retrieval call binding the contract method 0x164d29f6.
//
// Solidity: function crossChainFee() view returns(uint256)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) CrossChainFee() (*big.Int, error) {
	return _ChainRegistrarOnMainchain.Contract.CrossChainFee(&_ChainRegistrarOnMainchain.CallOpts)
}

// CrossChainFee is a free data retrieval call binding the contract method 0x164d29f6.
//
// Solidity: function crossChainFee() view returns(uint256)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCallerSession) CrossChainFee() (*big.Int, error) {
	return _ChainRegistrarOnMainchain.Contract.CrossChainFee(&_ChainRegistrarOnMainchain.CallOpts)
}

// FallbackReceiver is a free data retrieval call binding the contract method 0xf2269521.
//
// Solidity: function fallbackReceiver() view returns(address)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCaller) FallbackReceiver(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ChainRegistrarOnMainchain.contract.Call(opts, &out, "fallbackReceiver")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// FallbackReceiver is a free data retrieval call binding the contract method 0xf2269521.
//
// Solidity: function fallbackReceiver() view returns(address)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) FallbackReceiver() (common.Address, error) {
	return _ChainRegistrarOnMainchain.Contract.FallbackReceiver(&_ChainRegistrarOnMainchain.CallOpts)
}

// FallbackReceiver is a free data retrieval call binding the contract method 0xf2269521.
//
// Solidity: function fallbackReceiver() view returns(address)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCallerSession) FallbackReceiver() (common.Address, error) {
	return _ChainRegistrarOnMainchain.Contract.FallbackReceiver(&_ChainRegistrarOnMainchain.CallOpts)
}

// GetAllSubchainIDs is a free data retrieval call binding the contract method 0x13b38499.
//
// Solidity: function getAllSubchainIDs() view returns(uint256[])
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCaller) GetAllSubchainIDs(opts *bind.CallOpts) ([]*big.Int, error) {
	var out []interface{}
	err := _ChainRegistrarOnMainchain.contract.Call(opts, &out, "getAllSubchainIDs")

	if err != nil {
		return *new([]*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new([]*big.Int)).(*[]*big.Int)

	return out0, err

}

// GetAllSubchainIDs is a free data retrieval call binding the contract method 0x13b38499.
//
// Solidity: function getAllSubchainIDs() view returns(uint256[])
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) GetAllSubchainIDs() ([]*big.Int, error) {
	return _ChainRegistrarOnMainchain.Contract.GetAllSubchainIDs(&_ChainRegistrarOnMainchain.CallOpts)
}

// GetAllSubchainIDs is a free data retrieval call binding the contract method 0x13b38499.
//
// Solidity: function getAllSubchainIDs() view returns(uint256[])
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCallerSession) GetAllSubchainIDs() ([]*big.Int, error) {
	return _ChainRegistrarOnMainchain.Contract.GetAllSubchainIDs(&_ChainRegistrarOnMainchain.CallOpts)
}

// GetCrossChainFee is a free data retrieval call binding the contract method 0x9bbb690a.
//
// Solidity: function getCrossChainFee() view returns(uint256)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCaller) GetCrossChainFee(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ChainRegistrarOnMainchain.contract.Call(opts, &out, "getCrossChainFee")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetCrossChainFee is a free data retrieval call binding the contract method 0x9bbb690a.
//
// Solidity: function getCrossChainFee() view returns(uint256)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) GetCrossChainFee() (*big.Int, error) {
	return _ChainRegistrarOnMainchain.Contract.GetCrossChainFee(&_ChainRegistrarOnMainchain.CallOpts)
}

// GetCrossChainFee is a free data retrieval call binding the contract method 0x9bbb690a.
//
// Solidity: function getCrossChainFee() view returns(uint256)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCallerSession) GetCrossChainFee() (*big.Int, error) {
	return _ChainRegistrarOnMainchain.Contract.GetCrossChainFee(&_ChainRegistrarOnMainchain.CallOpts)
}

// GetDynasty is a free data retrieval call binding the contract method 0xdba9de6b.
//
// Solidity: function getDynasty() view returns(uint256 dynasty, bool success)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCaller) GetDynasty(opts *bind.CallOpts) (struct {
	Dynasty *big.Int
	Success bool
}, error) {
	var out []interface{}
	err := _ChainRegistrarOnMainchain.contract.Call(opts, &out, "getDynasty")

	outstruct := new(struct {
		Dynasty *big.Int
		Success bool
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Dynasty = *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	outstruct.Success = *abi.ConvertType(out[1], new(bool)).(*bool)

	return *outstruct, err

}

// GetDynasty is a free data retrieval call binding the contract method 0xdba9de6b.
//
// Solidity: function getDynasty() view returns(uint256 dynasty, bool success)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) GetDynasty() (struct {
	Dynasty *big.Int
	Success bool
}, error) {
	return _ChainRegistrarOnMainchain.Contract.GetDynasty(&_ChainRegistrarOnMainchain.CallOpts)
}

// GetDynasty is a free data retrieval call binding the contract method 0xdba9de6b.
//
// Solidity: function getDynasty() view returns(uint256 dynasty, bool success)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCallerSession) GetDynasty() (struct {
	Dynasty *big.Int
	Success bool
}, error) {
	return _ChainRegistrarOnMainchain.Contract.GetDynasty(&_ChainRegistrarOnMainchain.CallOpts)
}

// GetFallbackReceiver is a free data retrieval call binding the contract method 0xc2ae68f4.
//
// Solidity: function getFallbackReceiver() view returns(address)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCaller) GetFallbackReceiver(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ChainRegistrarOnMainchain.contract.Call(opts, &out, "getFallbackReceiver")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetFallbackReceiver is a free data retrieval call binding the contract method 0xc2ae68f4.
//
// Solidity: function getFallbackReceiver() view returns(address)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) GetFallbackReceiver() (common.Address, error) {
	return _ChainRegistrarOnMainchain.Contract.GetFallbackReceiver(&_ChainRegistrarOnMainchain.CallOpts)
}

// GetFallbackReceiver is a free data retrieval call binding the contract method 0xc2ae68f4.
//
// Solidity: function getFallbackReceiver() view returns(address)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCallerSession) GetFallbackReceiver() (common.Address, error) {
	return _ChainRegistrarOnMainchain.Contract.GetFallbackReceiver(&_ChainRegistrarOnMainchain.CallOpts)
}

// GetNumBlocksPerDynasty is a free data retrieval call binding the contract method 0xa7464b12.
//
// Solidity: function getNumBlocksPerDynasty() view returns(uint256)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCaller) GetNumBlocksPerDynasty(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ChainRegistrarOnMainchain.contract.Call(opts, &out, "getNumBlocksPerDynasty")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetNumBlocksPerDynasty is a free data retrieval call binding the contract method 0xa7464b12.
//
// Solidity: function getNumBlocksPerDynasty() view returns(uint256)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) GetNumBlocksPerDynasty() (*big.Int, error) {
	return _ChainRegistrarOnMainchain.Contract.GetNumBlocksPerDynasty(&_ChainRegistrarOnMainchain.CallOpts)
}

// GetNumBlocksPerDynasty is a free data retrieval call binding the contract method 0xa7464b12.
//
// Solidity: function getNumBlocksPerDynasty() view returns(uint256)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCallerSession) GetNumBlocksPerDynasty() (*big.Int, error) {
	return _ChainRegistrarOnMainchain.Contract.GetNumBlocksPerDynasty(&_ChainRegistrarOnMainchain.CallOpts)
}

// GetPendingStakeWithdrawals is a free data retrieval call binding the contract method 0x1be47778.
//
// Solidity: function getPendingStakeWithdrawals(uint256 subchainID, address staker) view returns((address,uint256,uint256)[])
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCaller) GetPendingStakeWithdrawals(opts *bind.CallOpts, subchainID *big.Int, staker common.Address) ([]WithdrawalQueueWithdrawalRequest, error) {
	var out []interface{}
	err := _ChainRegistrarOnMainchain.contract.Call(opts, &out, "getPendingStakeWithdrawals", subchainID, staker)

	if err != nil {
		return *new([]WithdrawalQueueWithdrawalRequest), err
	}

	out0 := *abi.ConvertType(out[0], new([]WithdrawalQueueWithdrawalRequest)).(*[]WithdrawalQueueWithdrawalRequest)

	return out0, err

}

// GetPendingStakeWithdrawals is a free data retrieval call binding the contract method 0x1be47778.
//
// Solidity: function getPendingStakeWithdrawals(uint256 subchainID, address staker) view returns((address,uint256,uint256)[])
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) GetPendingStakeWithdrawals(subchainID *big.Int, staker common.Address) ([]WithdrawalQueueWithdrawalRequest, error) {
	return _ChainRegistrarOnMainchain.Contract.GetPendingStakeWithdrawals(&_ChainRegistrarOnMainchain.CallOpts, subchainID, staker)
}

// GetPendingStakeWithdrawals is a free data retrieval call binding the contract method 0x1be47778.
//
// Solidity: function getPendingStakeWithdrawals(uint256 subchainID, address staker) view returns((address,uint256,uint256)[])
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCallerSession) GetPendingStakeWithdrawals(subchainID *big.Int, staker common.Address) ([]WithdrawalQueueWithdrawalRequest, error) {
	return _ChainRegistrarOnMainchain.Contract.GetPendingStakeWithdrawals(&_ChainRegistrarOnMainchain.CallOpts, subchainID, staker)
}

// GetPendingValidatorCollateralWithdrawals is a free data retrieval call binding the contract method 0x464fa557.
//
// Solidity: function getPendingValidatorCollateralWithdrawals(uint256 subchainID, address guarantor) view returns((address,uint256,uint256)[])
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCaller) GetPendingValidatorCollateralWithdrawals(opts *bind.CallOpts, subchainID *big.Int, guarantor common.Address) ([]WithdrawalQueueWithdrawalRequest, error) {
	var out []interface{}
	err := _ChainRegistrarOnMainchain.contract.Call(opts, &out, "getPendingValidatorCollateralWithdrawals", subchainID, guarantor)

	if err != nil {
		return *new([]WithdrawalQueueWithdrawalRequest), err
	}

	out0 := *abi.ConvertType(out[0], new([]WithdrawalQueueWithdrawalRequest)).(*[]WithdrawalQueueWithdrawalRequest)

	return out0, err

}

// GetPendingValidatorCollateralWithdrawals is a free data retrieval call binding the contract method 0x464fa557.
//
// Solidity: function getPendingValidatorCollateralWithdrawals(uint256 subchainID, address guarantor) view returns((address,uint256,uint256)[])
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) GetPendingValidatorCollateralWithdrawals(subchainID *big.Int, guarantor common.Address) ([]WithdrawalQueueWithdrawalRequest, error) {
	return _ChainRegistrarOnMainchain.Contract.GetPendingValidatorCollateralWithdrawals(&_ChainRegistrarOnMainchain.CallOpts, subchainID, guarantor)
}

// GetPendingValidatorCollateralWithdrawals is a free data retrieval call binding the contract method 0x464fa557.
//
// Solidity: function getPendingValidatorCollateralWithdrawals(uint256 subchainID, address guarantor) view returns((address,uint256,uint256)[])
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCallerSession) GetPendingValidatorCollateralWithdrawals(subchainID *big.Int, guarantor common.Address) ([]WithdrawalQueueWithdrawalRequest, error) {
	return _ChainRegistrarOnMainchain.Contract.GetPendingValidatorCollateralWithdrawals(&_ChainRegistrarOnMainchain.CallOpts, subchainID, guarantor)
}

// GetStakeSnapshot is a free data retrieval call binding the contract method 0x44669c03.
//
// Solidity: function getStakeSnapshot(uint256 subchainID, uint256 blockHeight) view returns(bool exists, uint256 targetSnapshotHeight, (uint256,(address,uint256)[]) targetStakeSnapshot)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCaller) GetStakeSnapshot(opts *bind.CallOpts, subchainID *big.Int, blockHeight *big.Int) (struct {
	Exists               bool
	TargetSnapshotHeight *big.Int
	TargetStakeSnapshot  ValidatorStakeManagerStakeSnapshot
}, error) {
	var out []interface{}
	err := _ChainRegistrarOnMainchain.contract.Call(opts, &out, "getStakeSnapshot", subchainID, blockHeight)

	outstruct := new(struct {
		Exists               bool
		TargetSnapshotHeight *big.Int
		TargetStakeSnapshot  ValidatorStakeManagerStakeSnapshot
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Exists = *abi.ConvertType(out[0], new(bool)).(*bool)
	outstruct.TargetSnapshotHeight = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	outstruct.TargetStakeSnapshot = *abi.ConvertType(out[2], new(ValidatorStakeManagerStakeSnapshot)).(*ValidatorStakeManagerStakeSnapshot)

	return *outstruct, err

}

// GetStakeSnapshot is a free data retrieval call binding the contract method 0x44669c03.
//
// Solidity: function getStakeSnapshot(uint256 subchainID, uint256 blockHeight) view returns(bool exists, uint256 targetSnapshotHeight, (uint256,(address,uint256)[]) targetStakeSnapshot)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) GetStakeSnapshot(subchainID *big.Int, blockHeight *big.Int) (struct {
	Exists               bool
	TargetSnapshotHeight *big.Int
	TargetStakeSnapshot  ValidatorStakeManagerStakeSnapshot
}, error) {
	return _ChainRegistrarOnMainchain.Contract.GetStakeSnapshot(&_ChainRegistrarOnMainchain.CallOpts, subchainID, blockHeight)
}

// GetStakeSnapshot is a free data retrieval call binding the contract method 0x44669c03.
//
// Solidity: function getStakeSnapshot(uint256 subchainID, uint256 blockHeight) view returns(bool exists, uint256 targetSnapshotHeight, (uint256,(address,uint256)[]) targetStakeSnapshot)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCallerSession) GetStakeSnapshot(subchainID *big.Int, blockHeight *big.Int) (struct {
	Exists               bool
	TargetSnapshotHeight *big.Int
	TargetStakeSnapshot  ValidatorStakeManagerStakeSnapshot
}, error) {
	return _ChainRegistrarOnMainchain.Contract.GetStakeSnapshot(&_ChainRegistrarOnMainchain.CallOpts, subchainID, blockHeight)
}

// GetStakeSnapshotHeights is a free data retrieval call binding the contract method 0x331515bc.
//
// Solidity: function getStakeSnapshotHeights(uint256 subchainID) view returns(uint256[])
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCaller) GetStakeSnapshotHeights(opts *bind.CallOpts, subchainID *big.Int) ([]*big.Int, error) {
	var out []interface{}
	err := _ChainRegistrarOnMainchain.contract.Call(opts, &out, "getStakeSnapshotHeights", subchainID)

	if err != nil {
		return *new([]*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new([]*big.Int)).(*[]*big.Int)

	return out0, err

}

// GetStakeSnapshotHeights is a free data retrieval call binding the contract method 0x331515bc.
//
// Solidity: function getStakeSnapshotHeights(uint256 subchainID) view returns(uint256[])
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) GetStakeSnapshotHeights(subchainID *big.Int) ([]*big.Int, error) {
	return _ChainRegistrarOnMainchain.Contract.GetStakeSnapshotHeights(&_ChainRegistrarOnMainchain.CallOpts, subchainID)
}

// GetStakeSnapshotHeights is a free data retrieval call binding the contract method 0x331515bc.
//
// Solidity: function getStakeSnapshotHeights(uint256 subchainID) view returns(uint256[])
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCallerSession) GetStakeSnapshotHeights(subchainID *big.Int) ([]*big.Int, error) {
	return _ChainRegistrarOnMainchain.Contract.GetStakeSnapshotHeights(&_ChainRegistrarOnMainchain.CallOpts, subchainID)
}

// GetStakersWithPendingWithdrawals is a free data retrieval call binding the contract method 0x7744f6d4.
//
// Solidity: function getStakersWithPendingWithdrawals(uint256 subchainID) view returns(address[])
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCaller) GetStakersWithPendingWithdrawals(opts *bind.CallOpts, subchainID *big.Int) ([]common.Address, error) {
	var out []interface{}
	err := _ChainRegistrarOnMainchain.contract.Call(opts, &out, "getStakersWithPendingWithdrawals", subchainID)

	if err != nil {
		return *new([]common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)

	return out0, err

}

// GetStakersWithPendingWithdrawals is a free data retrieval call binding the contract method 0x7744f6d4.
//
// Solidity: function getStakersWithPendingWithdrawals(uint256 subchainID) view returns(address[])
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) GetStakersWithPendingWithdrawals(subchainID *big.Int) ([]common.Address, error) {
	return _ChainRegistrarOnMainchain.Contract.GetStakersWithPendingWithdrawals(&_ChainRegistrarOnMainchain.CallOpts, subchainID)
}

// GetStakersWithPendingWithdrawals is a free data retrieval call binding the contract method 0x7744f6d4.
//
// Solidity: function getStakersWithPendingWithdrawals(uint256 subchainID) view returns(address[])
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCallerSession) GetStakersWithPendingWithdrawals(subchainID *big.Int) ([]common.Address, error) {
	return _ChainRegistrarOnMainchain.Contract.GetStakersWithPendingWithdrawals(&_ChainRegistrarOnMainchain.CallOpts, subchainID)
}

// GetSubchainMetadata is a free data retrieval call binding the contract method 0x78154cf7.
//
// Solidity: function getSubchainMetadata(uint256 subchainID) view returns((address,uint256,address,string,uint256,bool))
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCaller) GetSubchainMetadata(opts *bind.CallOpts, subchainID *big.Int) (ChainRegistrarOnMainchainSubchainMetadata, error) {
	var out []interface{}
	err := _ChainRegistrarOnMainchain.contract.Call(opts, &out, "getSubchainMetadata", subchainID)

	if err != nil {
		return *new(ChainRegistrarOnMainchainSubchainMetadata), err
	}

	out0 := *abi.ConvertType(out[0], new(ChainRegistrarOnMainchainSubchainMetadata)).(*ChainRegistrarOnMainchainSubchainMetadata)

	return out0, err

}

// GetSubchainMetadata is a free data retrieval call binding the contract method 0x78154cf7.
//
// Solidity: function getSubchainMetadata(uint256 subchainID) view returns((address,uint256,address,string,uint256,bool))
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) GetSubchainMetadata(subchainID *big.Int) (ChainRegistrarOnMainchainSubchainMetadata, error) {
	return _ChainRegistrarOnMainchain.Contract.GetSubchainMetadata(&_ChainRegistrarOnMainchain.CallOpts, subchainID)
}

// GetSubchainMetadata is a free data retrieval call binding the contract method 0x78154cf7.
//
// Solidity: function getSubchainMetadata(uint256 subchainID) view returns((address,uint256,address,string,uint256,bool))
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCallerSession) GetSubchainMetadata(subchainID *big.Int) (ChainRegistrarOnMainchainSubchainMetadata, error) {
	return _ChainRegistrarOnMainchain.Contract.GetSubchainMetadata(&_ChainRegistrarOnMainchain.CallOpts, subchainID)
}

// GetSubchainRegistrationHeight is a free data retrieval call binding the contract method 0x2f2c13b5.
//
// Solidity: function getSubchainRegistrationHeight(uint256 subchainID) view returns(uint256, bool)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCaller) GetSubchainRegistrationHeight(opts *bind.CallOpts, subchainID *big.Int) (*big.Int, bool, error) {
	var out []interface{}
	err := _ChainRegistrarOnMainchain.contract.Call(opts, &out, "getSubchainRegistrationHeight", subchainID)

	if err != nil {
		return *new(*big.Int), *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	out1 := *abi.ConvertType(out[1], new(bool)).(*bool)

	return out0, out1, err

}

// GetSubchainRegistrationHeight is a free data retrieval call binding the contract method 0x2f2c13b5.
//
// Solidity: function getSubchainRegistrationHeight(uint256 subchainID) view returns(uint256, bool)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) GetSubchainRegistrationHeight(subchainID *big.Int) (*big.Int, bool, error) {
	return _ChainRegistrarOnMainchain.Contract.GetSubchainRegistrationHeight(&_ChainRegistrarOnMainchain.CallOpts, subchainID)
}

// GetSubchainRegistrationHeight is a free data retrieval call binding the contract method 0x2f2c13b5.
//
// Solidity: function getSubchainRegistrationHeight(uint256 subchainID) view returns(uint256, bool)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCallerSession) GetSubchainRegistrationHeight(subchainID *big.Int) (*big.Int, bool, error) {
	return _ChainRegistrarOnMainchain.Contract.GetSubchainRegistrationHeight(&_ChainRegistrarOnMainchain.CallOpts, subchainID)
}

// GetTotalValidatorShares is a free data retrieval call binding the contract method 0x7e0c6253.
//
// Solidity: function getTotalValidatorShares(uint256 subchainID, uint256 dynasty) view returns(uint256)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCaller) GetTotalValidatorShares(opts *bind.CallOpts, subchainID *big.Int, dynasty *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _ChainRegistrarOnMainchain.contract.Call(opts, &out, "getTotalValidatorShares", subchainID, dynasty)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetTotalValidatorShares is a free data retrieval call binding the contract method 0x7e0c6253.
//
// Solidity: function getTotalValidatorShares(uint256 subchainID, uint256 dynasty) view returns(uint256)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) GetTotalValidatorShares(subchainID *big.Int, dynasty *big.Int) (*big.Int, error) {
	return _ChainRegistrarOnMainchain.Contract.GetTotalValidatorShares(&_ChainRegistrarOnMainchain.CallOpts, subchainID, dynasty)
}

// GetTotalValidatorShares is a free data retrieval call binding the contract method 0x7e0c6253.
//
// Solidity: function getTotalValidatorShares(uint256 subchainID, uint256 dynasty) view returns(uint256)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCallerSession) GetTotalValidatorShares(subchainID *big.Int, dynasty *big.Int) (*big.Int, error) {
	return _ChainRegistrarOnMainchain.Contract.GetTotalValidatorShares(&_ChainRegistrarOnMainchain.CallOpts, subchainID, dynasty)
}

// GetValidatorGuarantorsWithPendingWithdrawals is a free data retrieval call binding the contract method 0xe6eaaa81.
//
// Solidity: function getValidatorGuarantorsWithPendingWithdrawals(uint256 subchainID) view returns(address[])
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCaller) GetValidatorGuarantorsWithPendingWithdrawals(opts *bind.CallOpts, subchainID *big.Int) ([]common.Address, error) {
	var out []interface{}
	err := _ChainRegistrarOnMainchain.contract.Call(opts, &out, "getValidatorGuarantorsWithPendingWithdrawals", subchainID)

	if err != nil {
		return *new([]common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)

	return out0, err

}

// GetValidatorGuarantorsWithPendingWithdrawals is a free data retrieval call binding the contract method 0xe6eaaa81.
//
// Solidity: function getValidatorGuarantorsWithPendingWithdrawals(uint256 subchainID) view returns(address[])
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) GetValidatorGuarantorsWithPendingWithdrawals(subchainID *big.Int) ([]common.Address, error) {
	return _ChainRegistrarOnMainchain.Contract.GetValidatorGuarantorsWithPendingWithdrawals(&_ChainRegistrarOnMainchain.CallOpts, subchainID)
}

// GetValidatorGuarantorsWithPendingWithdrawals is a free data retrieval call binding the contract method 0xe6eaaa81.
//
// Solidity: function getValidatorGuarantorsWithPendingWithdrawals(uint256 subchainID) view returns(address[])
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCallerSession) GetValidatorGuarantorsWithPendingWithdrawals(subchainID *big.Int) ([]common.Address, error) {
	return _ChainRegistrarOnMainchain.Contract.GetValidatorGuarantorsWithPendingWithdrawals(&_ChainRegistrarOnMainchain.CallOpts, subchainID)
}

// GetValidatorSet is a free data retrieval call binding the contract method 0x43f27e45.
//
// Solidity: function getValidatorSet(uint256 subchainID, uint256 dynasty) view returns(address[] validators, uint256[] shareAmounts)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCaller) GetValidatorSet(opts *bind.CallOpts, subchainID *big.Int, dynasty *big.Int) (struct {
	Validators   []common.Address
	ShareAmounts []*big.Int
}, error) {
	var out []interface{}
	err := _ChainRegistrarOnMainchain.contract.Call(opts, &out, "getValidatorSet", subchainID, dynasty)

	outstruct := new(struct {
		Validators   []common.Address
		ShareAmounts []*big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Validators = *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)
	outstruct.ShareAmounts = *abi.ConvertType(out[1], new([]*big.Int)).(*[]*big.Int)

	return *outstruct, err

}

// GetValidatorSet is a free data retrieval call binding the contract method 0x43f27e45.
//
// Solidity: function getValidatorSet(uint256 subchainID, uint256 dynasty) view returns(address[] validators, uint256[] shareAmounts)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) GetValidatorSet(subchainID *big.Int, dynasty *big.Int) (struct {
	Validators   []common.Address
	ShareAmounts []*big.Int
}, error) {
	return _ChainRegistrarOnMainchain.Contract.GetValidatorSet(&_ChainRegistrarOnMainchain.CallOpts, subchainID, dynasty)
}

// GetValidatorSet is a free data retrieval call binding the contract method 0x43f27e45.
//
// Solidity: function getValidatorSet(uint256 subchainID, uint256 dynasty) view returns(address[] validators, uint256[] shareAmounts)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCallerSession) GetValidatorSet(subchainID *big.Int, dynasty *big.Int) (struct {
	Validators   []common.Address
	ShareAmounts []*big.Int
}, error) {
	return _ChainRegistrarOnMainchain.Contract.GetValidatorSet(&_ChainRegistrarOnMainchain.CallOpts, subchainID, dynasty)
}

// GetValidatorShares is a free data retrieval call binding the contract method 0x3f216374.
//
// Solidity: function getValidatorShares(uint256 subchainID, uint256 blockHeight, address validator) view returns(bool isAValidator, uint256 shareAmount)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCaller) GetValidatorShares(opts *bind.CallOpts, subchainID *big.Int, blockHeight *big.Int, validator common.Address) (struct {
	IsAValidator bool
	ShareAmount  *big.Int
}, error) {
	var out []interface{}
	err := _ChainRegistrarOnMainchain.contract.Call(opts, &out, "getValidatorShares", subchainID, blockHeight, validator)

	outstruct := new(struct {
		IsAValidator bool
		ShareAmount  *big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.IsAValidator = *abi.ConvertType(out[0], new(bool)).(*bool)
	outstruct.ShareAmount = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)

	return *outstruct, err

}

// GetValidatorShares is a free data retrieval call binding the contract method 0x3f216374.
//
// Solidity: function getValidatorShares(uint256 subchainID, uint256 blockHeight, address validator) view returns(bool isAValidator, uint256 shareAmount)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) GetValidatorShares(subchainID *big.Int, blockHeight *big.Int, validator common.Address) (struct {
	IsAValidator bool
	ShareAmount  *big.Int
}, error) {
	return _ChainRegistrarOnMainchain.Contract.GetValidatorShares(&_ChainRegistrarOnMainchain.CallOpts, subchainID, blockHeight, validator)
}

// GetValidatorShares is a free data retrieval call binding the contract method 0x3f216374.
//
// Solidity: function getValidatorShares(uint256 subchainID, uint256 blockHeight, address validator) view returns(bool isAValidator, uint256 shareAmount)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCallerSession) GetValidatorShares(subchainID *big.Int, blockHeight *big.Int, validator common.Address) (struct {
	IsAValidator bool
	ShareAmount  *big.Int
}, error) {
	return _ChainRegistrarOnMainchain.Contract.GetValidatorShares(&_ChainRegistrarOnMainchain.CallOpts, subchainID, blockHeight, validator)
}

// Governor is a free data retrieval call binding the contract method 0x0c340a24.
//
// Solidity: function governor() view returns(address)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCaller) Governor(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ChainRegistrarOnMainchain.contract.Call(opts, &out, "governor")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Governor is a free data retrieval call binding the contract method 0x0c340a24.
//
// Solidity: function governor() view returns(address)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) Governor() (common.Address, error) {
	return _ChainRegistrarOnMainchain.Contract.Governor(&_ChainRegistrarOnMainchain.CallOpts)
}

// Governor is a free data retrieval call binding the contract method 0x0c340a24.
//
// Solidity: function governor() view returns(address)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCallerSession) Governor() (common.Address, error) {
	return _ChainRegistrarOnMainchain.Contract.Governor(&_ChainRegistrarOnMainchain.CallOpts)
}

// InitialFeeRequired is a free data retrieval call binding the contract method 0x2e31ac1e.
//
// Solidity: function initialFeeRequired() view returns(uint256)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCaller) InitialFeeRequired(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ChainRegistrarOnMainchain.contract.Call(opts, &out, "initialFeeRequired")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// InitialFeeRequired is a free data retrieval call binding the contract method 0x2e31ac1e.
//
// Solidity: function initialFeeRequired() view returns(uint256)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) InitialFeeRequired() (*big.Int, error) {
	return _ChainRegistrarOnMainchain.Contract.InitialFeeRequired(&_ChainRegistrarOnMainchain.CallOpts)
}

// InitialFeeRequired is a free data retrieval call binding the contract method 0x2e31ac1e.
//
// Solidity: function initialFeeRequired() view returns(uint256)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCallerSession) InitialFeeRequired() (*big.Int, error) {
	return _ChainRegistrarOnMainchain.Contract.InitialFeeRequired(&_ChainRegistrarOnMainchain.CallOpts)
}

// IsARegisteredSubchain is a free data retrieval call binding the contract method 0x43b71f05.
//
// Solidity: function isARegisteredSubchain(uint256 subchainID) view returns(bool)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCaller) IsARegisteredSubchain(opts *bind.CallOpts, subchainID *big.Int) (bool, error) {
	var out []interface{}
	err := _ChainRegistrarOnMainchain.contract.Call(opts, &out, "isARegisteredSubchain", subchainID)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsARegisteredSubchain is a free data retrieval call binding the contract method 0x43b71f05.
//
// Solidity: function isARegisteredSubchain(uint256 subchainID) view returns(bool)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) IsARegisteredSubchain(subchainID *big.Int) (bool, error) {
	return _ChainRegistrarOnMainchain.Contract.IsARegisteredSubchain(&_ChainRegistrarOnMainchain.CallOpts, subchainID)
}

// IsARegisteredSubchain is a free data retrieval call binding the contract method 0x43b71f05.
//
// Solidity: function isARegisteredSubchain(uint256 subchainID) view returns(bool)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCallerSession) IsARegisteredSubchain(subchainID *big.Int) (bool, error) {
	return _ChainRegistrarOnMainchain.Contract.IsARegisteredSubchain(&_ChainRegistrarOnMainchain.CallOpts, subchainID)
}

// MinChainCollateralAmount is a free data retrieval call binding the contract method 0xeae243f8.
//
// Solidity: function minChainCollateralAmount() view returns(uint256)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCaller) MinChainCollateralAmount(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ChainRegistrarOnMainchain.contract.Call(opts, &out, "minChainCollateralAmount")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MinChainCollateralAmount is a free data retrieval call binding the contract method 0xeae243f8.
//
// Solidity: function minChainCollateralAmount() view returns(uint256)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) MinChainCollateralAmount() (*big.Int, error) {
	return _ChainRegistrarOnMainchain.Contract.MinChainCollateralAmount(&_ChainRegistrarOnMainchain.CallOpts)
}

// MinChainCollateralAmount is a free data retrieval call binding the contract method 0xeae243f8.
//
// Solidity: function minChainCollateralAmount() view returns(uint256)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCallerSession) MinChainCollateralAmount() (*big.Int, error) {
	return _ChainRegistrarOnMainchain.Contract.MinChainCollateralAmount(&_ChainRegistrarOnMainchain.CallOpts)
}

// NumBlocksPerDynasty is a free data retrieval call binding the contract method 0x67016090.
//
// Solidity: function numBlocksPerDynasty() view returns(uint256)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCaller) NumBlocksPerDynasty(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ChainRegistrarOnMainchain.contract.Call(opts, &out, "numBlocksPerDynasty")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// NumBlocksPerDynasty is a free data retrieval call binding the contract method 0x67016090.
//
// Solidity: function numBlocksPerDynasty() view returns(uint256)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) NumBlocksPerDynasty() (*big.Int, error) {
	return _ChainRegistrarOnMainchain.Contract.NumBlocksPerDynasty(&_ChainRegistrarOnMainchain.CallOpts)
}

// NumBlocksPerDynasty is a free data retrieval call binding the contract method 0x67016090.
//
// Solidity: function numBlocksPerDynasty() view returns(uint256)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCallerSession) NumBlocksPerDynasty() (*big.Int, error) {
	return _ChainRegistrarOnMainchain.Contract.NumBlocksPerDynasty(&_ChainRegistrarOnMainchain.CallOpts)
}

// SubchainIDs is a free data retrieval call binding the contract method 0xd77a6e66.
//
// Solidity: function subchainIDs(uint256 ) view returns(uint256)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCaller) SubchainIDs(opts *bind.CallOpts, arg0 *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _ChainRegistrarOnMainchain.contract.Call(opts, &out, "subchainIDs", arg0)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// SubchainIDs is a free data retrieval call binding the contract method 0xd77a6e66.
//
// Solidity: function subchainIDs(uint256 ) view returns(uint256)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) SubchainIDs(arg0 *big.Int) (*big.Int, error) {
	return _ChainRegistrarOnMainchain.Contract.SubchainIDs(&_ChainRegistrarOnMainchain.CallOpts, arg0)
}

// SubchainIDs is a free data retrieval call binding the contract method 0xd77a6e66.
//
// Solidity: function subchainIDs(uint256 ) view returns(uint256)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCallerSession) SubchainIDs(arg0 *big.Int) (*big.Int, error) {
	return _ChainRegistrarOnMainchain.Contract.SubchainIDs(&_ChainRegistrarOnMainchain.CallOpts, arg0)
}

// SubchainMetadataMap is a free data retrieval call binding the contract method 0xec090302.
//
// Solidity: function subchainMetadataMap(uint256 ) view returns(address guarantor, uint256 collateralAmount, address governanceToken, string genesisHash, uint256 registrationHeight, bool exists)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCaller) SubchainMetadataMap(opts *bind.CallOpts, arg0 *big.Int) (struct {
	Guarantor          common.Address
	CollateralAmount   *big.Int
	GovernanceToken    common.Address
	GenesisHash        string
	RegistrationHeight *big.Int
	Exists             bool
}, error) {
	var out []interface{}
	err := _ChainRegistrarOnMainchain.contract.Call(opts, &out, "subchainMetadataMap", arg0)

	outstruct := new(struct {
		Guarantor          common.Address
		CollateralAmount   *big.Int
		GovernanceToken    common.Address
		GenesisHash        string
		RegistrationHeight *big.Int
		Exists             bool
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Guarantor = *abi.ConvertType(out[0], new(common.Address)).(*common.Address)
	outstruct.CollateralAmount = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	outstruct.GovernanceToken = *abi.ConvertType(out[2], new(common.Address)).(*common.Address)
	outstruct.GenesisHash = *abi.ConvertType(out[3], new(string)).(*string)
	outstruct.RegistrationHeight = *abi.ConvertType(out[4], new(*big.Int)).(**big.Int)
	outstruct.Exists = *abi.ConvertType(out[5], new(bool)).(*bool)

	return *outstruct, err

}

// SubchainMetadataMap is a free data retrieval call binding the contract method 0xec090302.
//
// Solidity: function subchainMetadataMap(uint256 ) view returns(address guarantor, uint256 collateralAmount, address governanceToken, string genesisHash, uint256 registrationHeight, bool exists)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) SubchainMetadataMap(arg0 *big.Int) (struct {
	Guarantor          common.Address
	CollateralAmount   *big.Int
	GovernanceToken    common.Address
	GenesisHash        string
	RegistrationHeight *big.Int
	Exists             bool
}, error) {
	return _ChainRegistrarOnMainchain.Contract.SubchainMetadataMap(&_ChainRegistrarOnMainchain.CallOpts, arg0)
}

// SubchainMetadataMap is a free data retrieval call binding the contract method 0xec090302.
//
// Solidity: function subchainMetadataMap(uint256 ) view returns(address guarantor, uint256 collateralAmount, address governanceToken, string genesisHash, uint256 registrationHeight, bool exists)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCallerSession) SubchainMetadataMap(arg0 *big.Int) (struct {
	Guarantor          common.Address
	CollateralAmount   *big.Int
	GovernanceToken    common.Address
	GenesisHash        string
	RegistrationHeight *big.Int
	Exists             bool
}, error) {
	return _ChainRegistrarOnMainchain.Contract.SubchainMetadataMap(&_ChainRegistrarOnMainchain.CallOpts, arg0)
}

// SuperAdmin is a free data retrieval call binding the contract method 0x29575f6a.
//
// Solidity: function superAdmin() view returns(address)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCaller) SuperAdmin(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ChainRegistrarOnMainchain.contract.Call(opts, &out, "superAdmin")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// SuperAdmin is a free data retrieval call binding the contract method 0x29575f6a.
//
// Solidity: function superAdmin() view returns(address)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) SuperAdmin() (common.Address, error) {
	return _ChainRegistrarOnMainchain.Contract.SuperAdmin(&_ChainRegistrarOnMainchain.CallOpts)
}

// SuperAdmin is a free data retrieval call binding the contract method 0x29575f6a.
//
// Solidity: function superAdmin() view returns(address)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCallerSession) SuperAdmin() (common.Address, error) {
	return _ChainRegistrarOnMainchain.Contract.SuperAdmin(&_ChainRegistrarOnMainchain.CallOpts)
}

// Vcm is a free data retrieval call binding the contract method 0xdc1e8263.
//
// Solidity: function vcm() view returns(address)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCaller) Vcm(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ChainRegistrarOnMainchain.contract.Call(opts, &out, "vcm")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Vcm is a free data retrieval call binding the contract method 0xdc1e8263.
//
// Solidity: function vcm() view returns(address)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) Vcm() (common.Address, error) {
	return _ChainRegistrarOnMainchain.Contract.Vcm(&_ChainRegistrarOnMainchain.CallOpts)
}

// Vcm is a free data retrieval call binding the contract method 0xdc1e8263.
//
// Solidity: function vcm() view returns(address)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCallerSession) Vcm() (common.Address, error) {
	return _ChainRegistrarOnMainchain.Contract.Vcm(&_ChainRegistrarOnMainchain.CallOpts)
}

// Vsm is a free data retrieval call binding the contract method 0x07ddf6bc.
//
// Solidity: function vsm() view returns(address)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCaller) Vsm(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ChainRegistrarOnMainchain.contract.Call(opts, &out, "vsm")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Vsm is a free data retrieval call binding the contract method 0x07ddf6bc.
//
// Solidity: function vsm() view returns(address)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) Vsm() (common.Address, error) {
	return _ChainRegistrarOnMainchain.Contract.Vsm(&_ChainRegistrarOnMainchain.CallOpts)
}

// Vsm is a free data retrieval call binding the contract method 0x07ddf6bc.
//
// Solidity: function vsm() view returns(address)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCallerSession) Vsm() (common.Address, error) {
	return _ChainRegistrarOnMainchain.Contract.Vsm(&_ChainRegistrarOnMainchain.CallOpts)
}

// WTheta is a free data retrieval call binding the contract method 0xfc80ade3.
//
// Solidity: function wTheta() view returns(address)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCaller) WTheta(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ChainRegistrarOnMainchain.contract.Call(opts, &out, "wTheta")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// WTheta is a free data retrieval call binding the contract method 0xfc80ade3.
//
// Solidity: function wTheta() view returns(address)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) WTheta() (common.Address, error) {
	return _ChainRegistrarOnMainchain.Contract.WTheta(&_ChainRegistrarOnMainchain.CallOpts)
}

// WTheta is a free data retrieval call binding the contract method 0xfc80ade3.
//
// Solidity: function wTheta() view returns(address)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCallerSession) WTheta() (common.Address, error) {
	return _ChainRegistrarOnMainchain.Contract.WTheta(&_ChainRegistrarOnMainchain.CallOpts)
}

// WithdrawalPendingPeriodInBlocks is a free data retrieval call binding the contract method 0x336c7308.
//
// Solidity: function withdrawalPendingPeriodInBlocks() view returns(uint256)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCaller) WithdrawalPendingPeriodInBlocks(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ChainRegistrarOnMainchain.contract.Call(opts, &out, "withdrawalPendingPeriodInBlocks")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// WithdrawalPendingPeriodInBlocks is a free data retrieval call binding the contract method 0x336c7308.
//
// Solidity: function withdrawalPendingPeriodInBlocks() view returns(uint256)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) WithdrawalPendingPeriodInBlocks() (*big.Int, error) {
	return _ChainRegistrarOnMainchain.Contract.WithdrawalPendingPeriodInBlocks(&_ChainRegistrarOnMainchain.CallOpts)
}

// WithdrawalPendingPeriodInBlocks is a free data retrieval call binding the contract method 0x336c7308.
//
// Solidity: function withdrawalPendingPeriodInBlocks() view returns(uint256)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainCallerSession) WithdrawalPendingPeriodInBlocks() (*big.Int, error) {
	return _ChainRegistrarOnMainchain.Contract.WithdrawalPendingPeriodInBlocks(&_ChainRegistrarOnMainchain.CallOpts)
}

// AddSubchainCollateral is a paid mutator transaction binding the contract method 0x1911ee41.
//
// Solidity: function addSubchainCollateral(uint256 subchainID, uint256 additionalCollateral) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainTransactor) AddSubchainCollateral(opts *bind.TransactOpts, subchainID *big.Int, additionalCollateral *big.Int) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.contract.Transact(opts, "addSubchainCollateral", subchainID, additionalCollateral)
}

// AddSubchainCollateral is a paid mutator transaction binding the contract method 0x1911ee41.
//
// Solidity: function addSubchainCollateral(uint256 subchainID, uint256 additionalCollateral) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) AddSubchainCollateral(subchainID *big.Int, additionalCollateral *big.Int) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.Contract.AddSubchainCollateral(&_ChainRegistrarOnMainchain.TransactOpts, subchainID, additionalCollateral)
}

// AddSubchainCollateral is a paid mutator transaction binding the contract method 0x1911ee41.
//
// Solidity: function addSubchainCollateral(uint256 subchainID, uint256 additionalCollateral) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainTransactorSession) AddSubchainCollateral(subchainID *big.Int, additionalCollateral *big.Int) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.Contract.AddSubchainCollateral(&_ChainRegistrarOnMainchain.TransactOpts, subchainID, additionalCollateral)
}

// ClaimCollateral is a paid mutator transaction binding the contract method 0xc49785b4.
//
// Solidity: function claimCollateral(uint256 subchainID) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainTransactor) ClaimCollateral(opts *bind.TransactOpts, subchainID *big.Int) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.contract.Transact(opts, "claimCollateral", subchainID)
}

// ClaimCollateral is a paid mutator transaction binding the contract method 0xc49785b4.
//
// Solidity: function claimCollateral(uint256 subchainID) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) ClaimCollateral(subchainID *big.Int) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.Contract.ClaimCollateral(&_ChainRegistrarOnMainchain.TransactOpts, subchainID)
}

// ClaimCollateral is a paid mutator transaction binding the contract method 0xc49785b4.
//
// Solidity: function claimCollateral(uint256 subchainID) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainTransactorSession) ClaimCollateral(subchainID *big.Int) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.Contract.ClaimCollateral(&_ChainRegistrarOnMainchain.TransactOpts, subchainID)
}

// ClaimStake is a paid mutator transaction binding the contract method 0x44c7d6ef.
//
// Solidity: function claimStake(uint256 subchainID) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainTransactor) ClaimStake(opts *bind.TransactOpts, subchainID *big.Int) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.contract.Transact(opts, "claimStake", subchainID)
}

// ClaimStake is a paid mutator transaction binding the contract method 0x44c7d6ef.
//
// Solidity: function claimStake(uint256 subchainID) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) ClaimStake(subchainID *big.Int) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.Contract.ClaimStake(&_ChainRegistrarOnMainchain.TransactOpts, subchainID)
}

// ClaimStake is a paid mutator transaction binding the contract method 0x44c7d6ef.
//
// Solidity: function claimStake(uint256 subchainID) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainTransactorSession) ClaimStake(subchainID *big.Int) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.Contract.ClaimStake(&_ChainRegistrarOnMainchain.TransactOpts, subchainID)
}

// DepositCollateral is a paid mutator transaction binding the contract method 0xebea51b4.
//
// Solidity: function depositCollateral(uint256 subchainID, address validatorCandidate, uint256 collateralAmount) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainTransactor) DepositCollateral(opts *bind.TransactOpts, subchainID *big.Int, validatorCandidate common.Address, collateralAmount *big.Int) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.contract.Transact(opts, "depositCollateral", subchainID, validatorCandidate, collateralAmount)
}

// DepositCollateral is a paid mutator transaction binding the contract method 0xebea51b4.
//
// Solidity: function depositCollateral(uint256 subchainID, address validatorCandidate, uint256 collateralAmount) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) DepositCollateral(subchainID *big.Int, validatorCandidate common.Address, collateralAmount *big.Int) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.Contract.DepositCollateral(&_ChainRegistrarOnMainchain.TransactOpts, subchainID, validatorCandidate, collateralAmount)
}

// DepositCollateral is a paid mutator transaction binding the contract method 0xebea51b4.
//
// Solidity: function depositCollateral(uint256 subchainID, address validatorCandidate, uint256 collateralAmount) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainTransactorSession) DepositCollateral(subchainID *big.Int, validatorCandidate common.Address, collateralAmount *big.Int) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.Contract.DepositCollateral(&_ChainRegistrarOnMainchain.TransactOpts, subchainID, validatorCandidate, collateralAmount)
}

// DepositStake is a paid mutator transaction binding the contract method 0xaace2957.
//
// Solidity: function depositStake(uint256 subchainID, address validator, uint256 govTokenAmount) payable returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainTransactor) DepositStake(opts *bind.TransactOpts, subchainID *big.Int, validator common.Address, govTokenAmount *big.Int) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.contract.Transact(opts, "depositStake", subchainID, validator, govTokenAmount)
}

// DepositStake is a paid mutator transaction binding the contract method 0xaace2957.
//
// Solidity: function depositStake(uint256 subchainID, address validator, uint256 govTokenAmount) payable returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) DepositStake(subchainID *big.Int, validator common.Address, govTokenAmount *big.Int) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.Contract.DepositStake(&_ChainRegistrarOnMainchain.TransactOpts, subchainID, validator, govTokenAmount)
}

// DepositStake is a paid mutator transaction binding the contract method 0xaace2957.
//
// Solidity: function depositStake(uint256 subchainID, address validator, uint256 govTokenAmount) payable returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainTransactorSession) DepositStake(subchainID *big.Int, validator common.Address, govTokenAmount *big.Int) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.Contract.DepositStake(&_ChainRegistrarOnMainchain.TransactOpts, subchainID, validator, govTokenAmount)
}

// DeregisterSubchain is a paid mutator transaction binding the contract method 0xe6e5e0aa.
//
// Solidity: function deregisterSubchain(uint256 subchainID) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainTransactor) DeregisterSubchain(opts *bind.TransactOpts, subchainID *big.Int) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.contract.Transact(opts, "deregisterSubchain", subchainID)
}

// DeregisterSubchain is a paid mutator transaction binding the contract method 0xe6e5e0aa.
//
// Solidity: function deregisterSubchain(uint256 subchainID) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) DeregisterSubchain(subchainID *big.Int) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.Contract.DeregisterSubchain(&_ChainRegistrarOnMainchain.TransactOpts, subchainID)
}

// DeregisterSubchain is a paid mutator transaction binding the contract method 0xe6e5e0aa.
//
// Solidity: function deregisterSubchain(uint256 subchainID) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainTransactorSession) DeregisterSubchain(subchainID *big.Int) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.Contract.DeregisterSubchain(&_ChainRegistrarOnMainchain.TransactOpts, subchainID)
}

// RegisterSubchain is a paid mutator transaction binding the contract method 0xc74fba44.
//
// Solidity: function registerSubchain(uint256 subchainID, address governanceToken, uint256 collateralAmount, string genesisHash) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainTransactor) RegisterSubchain(opts *bind.TransactOpts, subchainID *big.Int, governanceToken common.Address, collateralAmount *big.Int, genesisHash string) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.contract.Transact(opts, "registerSubchain", subchainID, governanceToken, collateralAmount, genesisHash)
}

// RegisterSubchain is a paid mutator transaction binding the contract method 0xc74fba44.
//
// Solidity: function registerSubchain(uint256 subchainID, address governanceToken, uint256 collateralAmount, string genesisHash) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) RegisterSubchain(subchainID *big.Int, governanceToken common.Address, collateralAmount *big.Int, genesisHash string) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.Contract.RegisterSubchain(&_ChainRegistrarOnMainchain.TransactOpts, subchainID, governanceToken, collateralAmount, genesisHash)
}

// RegisterSubchain is a paid mutator transaction binding the contract method 0xc74fba44.
//
// Solidity: function registerSubchain(uint256 subchainID, address governanceToken, uint256 collateralAmount, string genesisHash) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainTransactorSession) RegisterSubchain(subchainID *big.Int, governanceToken common.Address, collateralAmount *big.Int, genesisHash string) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.Contract.RegisterSubchain(&_ChainRegistrarOnMainchain.TransactOpts, subchainID, governanceToken, collateralAmount, genesisHash)
}

// SlashChainCollateral is a paid mutator transaction binding the contract method 0xecda8779.
//
// Solidity: function slashChainCollateral(uint256 subchainID, uint256 slashAmount) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainTransactor) SlashChainCollateral(opts *bind.TransactOpts, subchainID *big.Int, slashAmount *big.Int) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.contract.Transact(opts, "slashChainCollateral", subchainID, slashAmount)
}

// SlashChainCollateral is a paid mutator transaction binding the contract method 0xecda8779.
//
// Solidity: function slashChainCollateral(uint256 subchainID, uint256 slashAmount) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) SlashChainCollateral(subchainID *big.Int, slashAmount *big.Int) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.Contract.SlashChainCollateral(&_ChainRegistrarOnMainchain.TransactOpts, subchainID, slashAmount)
}

// SlashChainCollateral is a paid mutator transaction binding the contract method 0xecda8779.
//
// Solidity: function slashChainCollateral(uint256 subchainID, uint256 slashAmount) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainTransactorSession) SlashChainCollateral(subchainID *big.Int, slashAmount *big.Int) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.Contract.SlashChainCollateral(&_ChainRegistrarOnMainchain.TransactOpts, subchainID, slashAmount)
}

// SlashValidatorCollateral is a paid mutator transaction binding the contract method 0xda078386.
//
// Solidity: function slashValidatorCollateral(uint256 subchainID, address validator, address guarantor, uint256 slashAmount) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainTransactor) SlashValidatorCollateral(opts *bind.TransactOpts, subchainID *big.Int, validator common.Address, guarantor common.Address, slashAmount *big.Int) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.contract.Transact(opts, "slashValidatorCollateral", subchainID, validator, guarantor, slashAmount)
}

// SlashValidatorCollateral is a paid mutator transaction binding the contract method 0xda078386.
//
// Solidity: function slashValidatorCollateral(uint256 subchainID, address validator, address guarantor, uint256 slashAmount) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) SlashValidatorCollateral(subchainID *big.Int, validator common.Address, guarantor common.Address, slashAmount *big.Int) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.Contract.SlashValidatorCollateral(&_ChainRegistrarOnMainchain.TransactOpts, subchainID, validator, guarantor, slashAmount)
}

// SlashValidatorCollateral is a paid mutator transaction binding the contract method 0xda078386.
//
// Solidity: function slashValidatorCollateral(uint256 subchainID, address validator, address guarantor, uint256 slashAmount) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainTransactorSession) SlashValidatorCollateral(subchainID *big.Int, validator common.Address, guarantor common.Address, slashAmount *big.Int) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.Contract.SlashValidatorCollateral(&_ChainRegistrarOnMainchain.TransactOpts, subchainID, validator, guarantor, slashAmount)
}

// UpdateAdmin is a paid mutator transaction binding the contract method 0xe2f273bd.
//
// Solidity: function updateAdmin(address newAdmin) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainTransactor) UpdateAdmin(opts *bind.TransactOpts, newAdmin common.Address) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.contract.Transact(opts, "updateAdmin", newAdmin)
}

// UpdateAdmin is a paid mutator transaction binding the contract method 0xe2f273bd.
//
// Solidity: function updateAdmin(address newAdmin) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) UpdateAdmin(newAdmin common.Address) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.Contract.UpdateAdmin(&_ChainRegistrarOnMainchain.TransactOpts, newAdmin)
}

// UpdateAdmin is a paid mutator transaction binding the contract method 0xe2f273bd.
//
// Solidity: function updateAdmin(address newAdmin) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainTransactorSession) UpdateAdmin(newAdmin common.Address) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.Contract.UpdateAdmin(&_ChainRegistrarOnMainchain.TransactOpts, newAdmin)
}

// UpdateCrossChainFee is a paid mutator transaction binding the contract method 0x9886ddbc.
//
// Solidity: function updateCrossChainFee(uint256 newCrossChainFee) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainTransactor) UpdateCrossChainFee(opts *bind.TransactOpts, newCrossChainFee *big.Int) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.contract.Transact(opts, "updateCrossChainFee", newCrossChainFee)
}

// UpdateCrossChainFee is a paid mutator transaction binding the contract method 0x9886ddbc.
//
// Solidity: function updateCrossChainFee(uint256 newCrossChainFee) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) UpdateCrossChainFee(newCrossChainFee *big.Int) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.Contract.UpdateCrossChainFee(&_ChainRegistrarOnMainchain.TransactOpts, newCrossChainFee)
}

// UpdateCrossChainFee is a paid mutator transaction binding the contract method 0x9886ddbc.
//
// Solidity: function updateCrossChainFee(uint256 newCrossChainFee) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainTransactorSession) UpdateCrossChainFee(newCrossChainFee *big.Int) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.Contract.UpdateCrossChainFee(&_ChainRegistrarOnMainchain.TransactOpts, newCrossChainFee)
}

// UpdateFallbackReceiver is a paid mutator transaction binding the contract method 0xb3f99975.
//
// Solidity: function updateFallbackReceiver(address newFallbackReceiver) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainTransactor) UpdateFallbackReceiver(opts *bind.TransactOpts, newFallbackReceiver common.Address) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.contract.Transact(opts, "updateFallbackReceiver", newFallbackReceiver)
}

// UpdateFallbackReceiver is a paid mutator transaction binding the contract method 0xb3f99975.
//
// Solidity: function updateFallbackReceiver(address newFallbackReceiver) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) UpdateFallbackReceiver(newFallbackReceiver common.Address) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.Contract.UpdateFallbackReceiver(&_ChainRegistrarOnMainchain.TransactOpts, newFallbackReceiver)
}

// UpdateFallbackReceiver is a paid mutator transaction binding the contract method 0xb3f99975.
//
// Solidity: function updateFallbackReceiver(address newFallbackReceiver) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainTransactorSession) UpdateFallbackReceiver(newFallbackReceiver common.Address) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.Contract.UpdateFallbackReceiver(&_ChainRegistrarOnMainchain.TransactOpts, newFallbackReceiver)
}

// UpdateGovernor is a paid mutator transaction binding the contract method 0x62f384ad.
//
// Solidity: function updateGovernor(address newGovernor) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainTransactor) UpdateGovernor(opts *bind.TransactOpts, newGovernor common.Address) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.contract.Transact(opts, "updateGovernor", newGovernor)
}

// UpdateGovernor is a paid mutator transaction binding the contract method 0x62f384ad.
//
// Solidity: function updateGovernor(address newGovernor) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) UpdateGovernor(newGovernor common.Address) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.Contract.UpdateGovernor(&_ChainRegistrarOnMainchain.TransactOpts, newGovernor)
}

// UpdateGovernor is a paid mutator transaction binding the contract method 0x62f384ad.
//
// Solidity: function updateGovernor(address newGovernor) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainTransactorSession) UpdateGovernor(newGovernor common.Address) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.Contract.UpdateGovernor(&_ChainRegistrarOnMainchain.TransactOpts, newGovernor)
}

// UpdateMinChainCollateralAmount is a paid mutator transaction binding the contract method 0xcec9c6e1.
//
// Solidity: function updateMinChainCollateralAmount(uint256 amount) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainTransactor) UpdateMinChainCollateralAmount(opts *bind.TransactOpts, amount *big.Int) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.contract.Transact(opts, "updateMinChainCollateralAmount", amount)
}

// UpdateMinChainCollateralAmount is a paid mutator transaction binding the contract method 0xcec9c6e1.
//
// Solidity: function updateMinChainCollateralAmount(uint256 amount) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) UpdateMinChainCollateralAmount(amount *big.Int) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.Contract.UpdateMinChainCollateralAmount(&_ChainRegistrarOnMainchain.TransactOpts, amount)
}

// UpdateMinChainCollateralAmount is a paid mutator transaction binding the contract method 0xcec9c6e1.
//
// Solidity: function updateMinChainCollateralAmount(uint256 amount) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainTransactorSession) UpdateMinChainCollateralAmount(amount *big.Int) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.Contract.UpdateMinChainCollateralAmount(&_ChainRegistrarOnMainchain.TransactOpts, amount)
}

// UpdateMinValidatorCollateralAmount is a paid mutator transaction binding the contract method 0x1ead7deb.
//
// Solidity: function updateMinValidatorCollateralAmount(uint256 amount) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainTransactor) UpdateMinValidatorCollateralAmount(opts *bind.TransactOpts, amount *big.Int) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.contract.Transact(opts, "updateMinValidatorCollateralAmount", amount)
}

// UpdateMinValidatorCollateralAmount is a paid mutator transaction binding the contract method 0x1ead7deb.
//
// Solidity: function updateMinValidatorCollateralAmount(uint256 amount) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) UpdateMinValidatorCollateralAmount(amount *big.Int) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.Contract.UpdateMinValidatorCollateralAmount(&_ChainRegistrarOnMainchain.TransactOpts, amount)
}

// UpdateMinValidatorCollateralAmount is a paid mutator transaction binding the contract method 0x1ead7deb.
//
// Solidity: function updateMinValidatorCollateralAmount(uint256 amount) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainTransactorSession) UpdateMinValidatorCollateralAmount(amount *big.Int) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.Contract.UpdateMinValidatorCollateralAmount(&_ChainRegistrarOnMainchain.TransactOpts, amount)
}

// UpdateSuperAdmin is a paid mutator transaction binding the contract method 0xcae43fd8.
//
// Solidity: function updateSuperAdmin(address newSuperAdmin) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainTransactor) UpdateSuperAdmin(opts *bind.TransactOpts, newSuperAdmin common.Address) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.contract.Transact(opts, "updateSuperAdmin", newSuperAdmin)
}

// UpdateSuperAdmin is a paid mutator transaction binding the contract method 0xcae43fd8.
//
// Solidity: function updateSuperAdmin(address newSuperAdmin) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) UpdateSuperAdmin(newSuperAdmin common.Address) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.Contract.UpdateSuperAdmin(&_ChainRegistrarOnMainchain.TransactOpts, newSuperAdmin)
}

// UpdateSuperAdmin is a paid mutator transaction binding the contract method 0xcae43fd8.
//
// Solidity: function updateSuperAdmin(address newSuperAdmin) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainTransactorSession) UpdateSuperAdmin(newSuperAdmin common.Address) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.Contract.UpdateSuperAdmin(&_ChainRegistrarOnMainchain.TransactOpts, newSuperAdmin)
}

// UpdateVCMOwner is a paid mutator transaction binding the contract method 0xa74c83b7.
//
// Solidity: function updateVCMOwner(address newOwner) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainTransactor) UpdateVCMOwner(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.contract.Transact(opts, "updateVCMOwner", newOwner)
}

// UpdateVCMOwner is a paid mutator transaction binding the contract method 0xa74c83b7.
//
// Solidity: function updateVCMOwner(address newOwner) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) UpdateVCMOwner(newOwner common.Address) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.Contract.UpdateVCMOwner(&_ChainRegistrarOnMainchain.TransactOpts, newOwner)
}

// UpdateVCMOwner is a paid mutator transaction binding the contract method 0xa74c83b7.
//
// Solidity: function updateVCMOwner(address newOwner) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainTransactorSession) UpdateVCMOwner(newOwner common.Address) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.Contract.UpdateVCMOwner(&_ChainRegistrarOnMainchain.TransactOpts, newOwner)
}

// UpdateVSMOwner is a paid mutator transaction binding the contract method 0xc21d72bf.
//
// Solidity: function updateVSMOwner(address newOwner) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainTransactor) UpdateVSMOwner(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.contract.Transact(opts, "updateVSMOwner", newOwner)
}

// UpdateVSMOwner is a paid mutator transaction binding the contract method 0xc21d72bf.
//
// Solidity: function updateVSMOwner(address newOwner) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) UpdateVSMOwner(newOwner common.Address) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.Contract.UpdateVSMOwner(&_ChainRegistrarOnMainchain.TransactOpts, newOwner)
}

// UpdateVSMOwner is a paid mutator transaction binding the contract method 0xc21d72bf.
//
// Solidity: function updateVSMOwner(address newOwner) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainTransactorSession) UpdateVSMOwner(newOwner common.Address) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.Contract.UpdateVSMOwner(&_ChainRegistrarOnMainchain.TransactOpts, newOwner)
}

// WithdrawCollateral is a paid mutator transaction binding the contract method 0x99ea56b0.
//
// Solidity: function withdrawCollateral(uint256 subchainID, address validatorCandidate, uint256 collateralAmount) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainTransactor) WithdrawCollateral(opts *bind.TransactOpts, subchainID *big.Int, validatorCandidate common.Address, collateralAmount *big.Int) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.contract.Transact(opts, "withdrawCollateral", subchainID, validatorCandidate, collateralAmount)
}

// WithdrawCollateral is a paid mutator transaction binding the contract method 0x99ea56b0.
//
// Solidity: function withdrawCollateral(uint256 subchainID, address validatorCandidate, uint256 collateralAmount) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) WithdrawCollateral(subchainID *big.Int, validatorCandidate common.Address, collateralAmount *big.Int) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.Contract.WithdrawCollateral(&_ChainRegistrarOnMainchain.TransactOpts, subchainID, validatorCandidate, collateralAmount)
}

// WithdrawCollateral is a paid mutator transaction binding the contract method 0x99ea56b0.
//
// Solidity: function withdrawCollateral(uint256 subchainID, address validatorCandidate, uint256 collateralAmount) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainTransactorSession) WithdrawCollateral(subchainID *big.Int, validatorCandidate common.Address, collateralAmount *big.Int) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.Contract.WithdrawCollateral(&_ChainRegistrarOnMainchain.TransactOpts, subchainID, validatorCandidate, collateralAmount)
}

// WithdrawStake is a paid mutator transaction binding the contract method 0x9f9106cf.
//
// Solidity: function withdrawStake(uint256 subchainID, address validator, uint256 shareAmount) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainTransactor) WithdrawStake(opts *bind.TransactOpts, subchainID *big.Int, validator common.Address, shareAmount *big.Int) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.contract.Transact(opts, "withdrawStake", subchainID, validator, shareAmount)
}

// WithdrawStake is a paid mutator transaction binding the contract method 0x9f9106cf.
//
// Solidity: function withdrawStake(uint256 subchainID, address validator, uint256 shareAmount) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainSession) WithdrawStake(subchainID *big.Int, validator common.Address, shareAmount *big.Int) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.Contract.WithdrawStake(&_ChainRegistrarOnMainchain.TransactOpts, subchainID, validator, shareAmount)
}

// WithdrawStake is a paid mutator transaction binding the contract method 0x9f9106cf.
//
// Solidity: function withdrawStake(uint256 subchainID, address validator, uint256 shareAmount) returns()
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainTransactorSession) WithdrawStake(subchainID *big.Int, validator common.Address, shareAmount *big.Int) (*types.Transaction, error) {
	return _ChainRegistrarOnMainchain.Contract.WithdrawStake(&_ChainRegistrarOnMainchain.TransactOpts, subchainID, validator, shareAmount)
}

// ChainRegistrarOnMainchainSlashChainCollateralIterator is returned from FilterSlashChainCollateral and is used to iterate over the raw logs and unpacked data for SlashChainCollateral events raised by the ChainRegistrarOnMainchain contract.
type ChainRegistrarOnMainchainSlashChainCollateralIterator struct {
	Event *ChainRegistrarOnMainchainSlashChainCollateral // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ChainRegistrarOnMainchainSlashChainCollateralIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ChainRegistrarOnMainchainSlashChainCollateral)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ChainRegistrarOnMainchainSlashChainCollateral)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ChainRegistrarOnMainchainSlashChainCollateralIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ChainRegistrarOnMainchainSlashChainCollateralIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ChainRegistrarOnMainchainSlashChainCollateral represents a SlashChainCollateral event raised by the ChainRegistrarOnMainchain contract.
type ChainRegistrarOnMainchainSlashChainCollateral struct {
	SubchainID  *big.Int
	SlashAmount *big.Int
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterSlashChainCollateral is a free log retrieval operation binding the contract event 0x75396b0e74e738b367e9c25e4168aa3b5e00d2ef5650b014c45a338ebedc5834.
//
// Solidity: event SlashChainCollateral(uint256 subchainID, uint256 slashAmount)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainFilterer) FilterSlashChainCollateral(opts *bind.FilterOpts) (*ChainRegistrarOnMainchainSlashChainCollateralIterator, error) {

	logs, sub, err := _ChainRegistrarOnMainchain.contract.FilterLogs(opts, "SlashChainCollateral")
	if err != nil {
		return nil, err
	}
	return &ChainRegistrarOnMainchainSlashChainCollateralIterator{contract: _ChainRegistrarOnMainchain.contract, event: "SlashChainCollateral", logs: logs, sub: sub}, nil
}

// WatchSlashChainCollateral is a free log subscription operation binding the contract event 0x75396b0e74e738b367e9c25e4168aa3b5e00d2ef5650b014c45a338ebedc5834.
//
// Solidity: event SlashChainCollateral(uint256 subchainID, uint256 slashAmount)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainFilterer) WatchSlashChainCollateral(opts *bind.WatchOpts, sink chan<- *ChainRegistrarOnMainchainSlashChainCollateral) (event.Subscription, error) {

	logs, sub, err := _ChainRegistrarOnMainchain.contract.WatchLogs(opts, "SlashChainCollateral")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ChainRegistrarOnMainchainSlashChainCollateral)
				if err := _ChainRegistrarOnMainchain.contract.UnpackLog(event, "SlashChainCollateral", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseSlashChainCollateral is a log parse operation binding the contract event 0x75396b0e74e738b367e9c25e4168aa3b5e00d2ef5650b014c45a338ebedc5834.
//
// Solidity: event SlashChainCollateral(uint256 subchainID, uint256 slashAmount)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainFilterer) ParseSlashChainCollateral(log types.Log) (*ChainRegistrarOnMainchainSlashChainCollateral, error) {
	event := new(ChainRegistrarOnMainchainSlashChainCollateral)
	if err := _ChainRegistrarOnMainchain.contract.UnpackLog(event, "SlashChainCollateral", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ChainRegistrarOnMainchainSlashValidatorCollateralIterator is returned from FilterSlashValidatorCollateral and is used to iterate over the raw logs and unpacked data for SlashValidatorCollateral events raised by the ChainRegistrarOnMainchain contract.
type ChainRegistrarOnMainchainSlashValidatorCollateralIterator struct {
	Event *ChainRegistrarOnMainchainSlashValidatorCollateral // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ChainRegistrarOnMainchainSlashValidatorCollateralIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ChainRegistrarOnMainchainSlashValidatorCollateral)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ChainRegistrarOnMainchainSlashValidatorCollateral)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ChainRegistrarOnMainchainSlashValidatorCollateralIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ChainRegistrarOnMainchainSlashValidatorCollateralIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ChainRegistrarOnMainchainSlashValidatorCollateral represents a SlashValidatorCollateral event raised by the ChainRegistrarOnMainchain contract.
type ChainRegistrarOnMainchainSlashValidatorCollateral struct {
	SubchainID  *big.Int
	Validator   common.Address
	SlashAmount *big.Int
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterSlashValidatorCollateral is a free log retrieval operation binding the contract event 0xe2a8ae04d4ec6bb054075413f558e5fafc46db8be734d1f0232d36dc2b906d22.
//
// Solidity: event SlashValidatorCollateral(uint256 subchainID, address validator, uint256 slashAmount)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainFilterer) FilterSlashValidatorCollateral(opts *bind.FilterOpts) (*ChainRegistrarOnMainchainSlashValidatorCollateralIterator, error) {

	logs, sub, err := _ChainRegistrarOnMainchain.contract.FilterLogs(opts, "SlashValidatorCollateral")
	if err != nil {
		return nil, err
	}
	return &ChainRegistrarOnMainchainSlashValidatorCollateralIterator{contract: _ChainRegistrarOnMainchain.contract, event: "SlashValidatorCollateral", logs: logs, sub: sub}, nil
}

// WatchSlashValidatorCollateral is a free log subscription operation binding the contract event 0xe2a8ae04d4ec6bb054075413f558e5fafc46db8be734d1f0232d36dc2b906d22.
//
// Solidity: event SlashValidatorCollateral(uint256 subchainID, address validator, uint256 slashAmount)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainFilterer) WatchSlashValidatorCollateral(opts *bind.WatchOpts, sink chan<- *ChainRegistrarOnMainchainSlashValidatorCollateral) (event.Subscription, error) {

	logs, sub, err := _ChainRegistrarOnMainchain.contract.WatchLogs(opts, "SlashValidatorCollateral")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ChainRegistrarOnMainchainSlashValidatorCollateral)
				if err := _ChainRegistrarOnMainchain.contract.UnpackLog(event, "SlashValidatorCollateral", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseSlashValidatorCollateral is a log parse operation binding the contract event 0xe2a8ae04d4ec6bb054075413f558e5fafc46db8be734d1f0232d36dc2b906d22.
//
// Solidity: event SlashValidatorCollateral(uint256 subchainID, address validator, uint256 slashAmount)
func (_ChainRegistrarOnMainchain *ChainRegistrarOnMainchainFilterer) ParseSlashValidatorCollateral(log types.Log) (*ChainRegistrarOnMainchainSlashValidatorCollateral, error) {
	event := new(ChainRegistrarOnMainchainSlashValidatorCollateral)
	if err := _ChainRegistrarOnMainchain.contract.UnpackLog(event, "SlashValidatorCollateral", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
