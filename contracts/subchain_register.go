// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contracts

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/thetatoken/thetasubchain/eth"
	"github.com/thetatoken/thetasubchain/eth/abi"
	"github.com/thetatoken/thetasubchain/eth/abi/bind"
	"github.com/thetatoken/thetasubchain/eth/core/types"
	"github.com/thetatoken/thetasubchain/eth/event"

	"github.com/thetatoken/theta/common"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// SubchainValidatorRegistrarSubchainCheckpoint is an auto generated low-level Go binding around an user-defined struct.
type SubchainValidatorRegistrarSubchainCheckpoint struct {
	BlockHeight                    *big.Int
	Amount                         *big.Int
	LegalValidatorCandidateCounter *big.Int
}

// SubchainValidatorRegistrarSubchainRegisterInfo is an auto generated low-level Go binding around an user-defined struct.
type SubchainValidatorRegistrarSubchainRegisterInfo struct {
	SubchainID       *big.Int
	OwnerAddress     common.Address
	RegisterPrice    *big.Int
	ERC20Address     common.Address
	Erc20            common.Address
	GenesisBlockHash string
	State            uint8
}

// SubchainValidatorRegistrarSubchainValidatorCandidateCheckpoint is an auto generated low-level Go binding around an user-defined struct.
type SubchainValidatorRegistrarSubchainValidatorCandidateCheckpoint struct {
	BlockHeight *big.Int
	Amount      *big.Int
}

// SubchainRegisterMetaData contains all meta data concerning the SubchainRegister contract.
var SubchainRegisterMetaData = &bind.MetaData{
	ABI: "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_destination\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_eventNonce\",\"type\":\"uint256\"}],\"name\":\"SendToSubchainEvent\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_CHAIN_ID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_CHAIN_ID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_COLLATERAL_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_NUM_VALIDATORS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_PERSONAL_COLLATERAL_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"publisher\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"state_lastEventNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"subchainHistory\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockHeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"legalValidatorCandidateCounter\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"subchainRegisterInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"ownerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"registerPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"ERC20Address\",\"type\":\"address\"},{\"internalType\":\"contractERC20\",\"name\":\"erc20\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"genesisBlockHash\",\"type\":\"string\"},{\"internalType\":\"enumSubchainValidatorRegistrar.SubchainState\",\"name\":\"state\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"validatorSetHistory\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockHeight\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"updateMinCollateralAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"updateMinMinNumValidators\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"updateMinPersonalCollateralAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"ERC20Address\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"genesisBlockHash\",\"type\":\"string\"}],\"name\":\"registerSubchainID\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"validatorCandidate\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"}],\"name\":\"depositCollateral\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"validatorCandidate\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockHeight\",\"type\":\"uint256\"}],\"name\":\"isSubchainActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"validatorCandidateAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockHeight\",\"type\":\"uint256\"}],\"name\":\"isSubchainValidatorCandidateActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockHeight\",\"type\":\"uint256\"}],\"name\":\"getValidatorAndStakeSetWithBlockHeight\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_destination\",\"type\":\"string\"}],\"name\":\"sendToSubchain\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"}],\"name\":\"getLegalValidators\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"validatorCandidate\",\"type\":\"address\"}],\"name\":\"getValidatorCheckpoint\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"blockHeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"structSubchainValidatorRegistrar.SubchainValidatorCandidateCheckpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"validatorCandidate\",\"type\":\"address\"}],\"name\":\"getValidatorCheckpointNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"}],\"name\":\"getSubchainCheckpoint\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"blockHeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"legalValidatorCandidateCounter\",\"type\":\"uint256\"}],\"internalType\":\"structSubchainValidatorRegistrar.SubchainCheckpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"}],\"name\":\"getSubchainInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"ownerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"registerPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"ERC20Address\",\"type\":\"address\"},{\"internalType\":\"contractERC20\",\"name\":\"erc20\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"genesisBlockHash\",\"type\":\"string\"},{\"internalType\":\"enumSubchainValidatorRegistrar.SubchainState\",\"name\":\"state\",\"type\":\"uint8\"}],\"internalType\":\"structSubchainValidatorRegistrar.SubchainRegisterInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromaddress\",\"type\":\"address\"}],\"name\":\"getSubchainTokenAtAddresss\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"}],\"name\":\"getERCValidator\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]",
	Bin: "0x60806040526103e860065560646007556002600855600160095534801561002557600080fd5b5060016000819055506150eb8061003d6000396000f3fe60806040526004361061019c5760003560e01c8063912d40ad116100ec578063c8248b5f1161008a578063dd4d452f11610064578063dd4d452f14610608578063e25f37eb14610645578063f6fbe6f014610682578063fc809864146106ab5761019c565b8063c8248b5f1461054a578063d3b16eaf14610588578063d7b35658146105cb5761019c565b8063a5d5db0c116100c6578063a5d5db0c146104aa578063b309bb3b146104c6578063b8b3b66b146104f1578063c598d4ce1461050d5761019c565b8063912d40ad1461040557806391be4d41146104425780639c9ec4e51461046d5761019c565b80635bc105c0116101595780636da486ec116101335780636da486ec1461036a57806373b20547146103865780638289518d146103b15780638c72c54e146103da5761019c565b80635bc105c0146102d95780635ce70ecc146103045780636c671b14146103415761019c565b806304fee065146101a15780630df8f622146101e0578063377ea4d61461020b57806339b913ee146102485780633d3a066f146102855780635adc039e146102ae575b600080fd5b3480156101ad57600080fd5b506101c860048036038101906101c39190613b89565b6106e8565b6040516101d793929190613bd8565b60405180910390f35b3480156101ec57600080fd5b506101f561071f565b6040516102029190613c0f565b60405180910390f35b34801561021757600080fd5b50610232600480360381019061022d9190613c2a565b610726565b60405161023f9190613d47565b60405180910390f35b34801561025457600080fd5b5061026f600480360381019061026a9190613b89565b6107d9565b60405161027c9190613d84565b60405180910390f35b34801561029157600080fd5b506102ac60048036038101906102a79190613dcb565b610960565b005b3480156102ba57600080fd5b506102c3610b59565b6040516102d09190613c0f565b60405180910390f35b3480156102e557600080fd5b506102ee610b5f565b6040516102fb9190613c0f565b60405180910390f35b34801561031057600080fd5b5061032b60048036038101906103269190613c2a565b610b66565b6040516103389190613e6f565b60405180910390f35b34801561034d57600080fd5b5061036860048036038101906103639190613c2a565b610bed565b005b610384600480360381019061037f9190613fd0565b610c87565b005b34801561039257600080fd5b5061039b610ed9565b6040516103a89190613c0f565b60405180910390f35b3480156103bd57600080fd5b506103d860048036038101906103d39190613c2a565b610edf565b005b3480156103e657600080fd5b506103ef610f79565b6040516103fc919061404e565b60405180910390f35b34801561041157600080fd5b5061042c60048036038101906104279190614069565b610f9f565b60405161043991906140d8565b60405180910390f35b34801561044e57600080fd5b50610457611097565b6040516104649190613c0f565b60405180910390f35b34801561047957600080fd5b50610494600480360381019061048f9190613c2a565b61109d565b6040516104a191906142ed565b60405180910390f35b6104c460048036038101906104bf919061430f565b6112ad565b005b3480156104d257600080fd5b506104db6113d2565b6040516104e89190613c0f565b60405180910390f35b61050b600480360381019061050691906143af565b6113d8565b005b34801561051957600080fd5b50610534600480360381019061052f9190614069565b6114b5565b6040516105419190613c0f565b60405180910390f35b34801561055657600080fd5b50610571600480360381019061056c9190613b89565b61156f565b60405161057f9291906144be565b60405180910390f35b34801561059457600080fd5b506105af60048036038101906105aa9190613c2a565b611a55565b6040516105c2979695949392919061455d565b60405180910390f35b3480156105d757600080fd5b506105f260048036038101906105ed9190613c2a565b611b8c565b6040516105ff9190613d47565b60405180910390f35b34801561061457600080fd5b5061062f600480360381019061062a91906145d3565b611cea565b60405161063c9190613d84565b60405180910390f35b34801561065157600080fd5b5061066c60048036038101906106679190613b89565b61213a565b6040516106799190613c0f565b60405180910390f35b34801561068e57600080fd5b506106a960048036038101906106a49190613c2a565b612165565b005b3480156106b757600080fd5b506106d260048036038101906106cd9190614069565b6121ff565b6040516106df9190613c0f565b60405180910390f35b600e602052816000526040600020602052806000526040600020600091509150508060000154908060010154908060020154905083565b6237159081565b60606012600083815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663473d12ba6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156107a9573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906107d291906146fe565b9050919050565b60006237159083101580156107f1575062373c9f8311155b610830576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082790614793565b60405180910390fd5b60006012600085815260200190815260200160002060000154141561088a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610881906147ff565b60405180910390fd5b4382106108cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c39061486b565b60405180910390fd5b6000806108d9858561156f565b91509150600854825110156108f35760009250505061095a565b6000805b825181101561093b578281815181106109135761091261488b565b5b60200260200101518261092691906148e9565b915080806109339061493f565b9150506108f7565b50600654811015610952576000935050505061095a565b600193505050505b92915050565b623715908210158015610976575062373c9f8211155b6109b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ac90614793565b60405180910390fd5b600060126000848152602001908152602001600020600001541415610a0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a06906147ff565b60405180910390fd5b6000600b600084815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415610ae0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad7906149d4565b60405180910390fd5b60003390506000829050610af6858583856122f4565b610b01858583612623565b610b0b8482612a6e565b8173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610b51573d6000803e3d6000fd5b505050505050565b60085481565b62373c9f81565b610b6e613946565b6000600f60008481526020019081526020016000205490506000600e60008581526020019081526020016000206000600184610baa91906149f4565b8152602001908152602001600020604051806060016040529081600082015481526020016001820154815260200160028201548152505090508092505050919050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7490614a74565b60405180910390fd5b8060088190555050565b623715908310158015610c9d575062373c9f8311155b610cdc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd390614793565b60405180910390fd5b6000601260008581526020019081526020016000206000015414610d35576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2c90614ae0565b60405180910390fd5b826012600085815260200190815260200160002060000181905550336012600085815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016012600085815260200190815260200160002060060160006101000a81548160ff02191690836003811115610ddf57610dde6141da565b5b0217905550346012600085815260200190815260200160002060020181905550816012600085815260200190815260200160002060030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816012600085815260200190815260200160002060040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080601260008581526020019081526020016000206005019080519060200190610ed3929190613967565b50505050565b60095481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6690614a74565b60405180910390fd5b8060078190555050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610fa76139ed565b6000600d600085815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600c600086815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060018461105d91906149f4565b8152602001908152602001600020604051806040016040529081600082015481526020016001820154815250509050809250505092915050565b60065481565b6110a5613a07565b601260008381526020019081526020016000206040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820180546111e990614b2f565b80601f016020809104026020016040519081016040528092919081815260200182805461121590614b2f565b80156112625780601f1061123757610100808354040283529160200191611262565b820191906000526020600020905b81548152906001019060200180831161124557829003601f168201915b505050505081526020016006820160009054906101000a900460ff1660038111156112905761128f6141da565b5b60038111156112a2576112a16141da565b5b815250509050919050565b6237159081101580156112c3575062373c9f8111155b611302576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112f990614793565b60405180910390fd5b60006012600083815260200190815260200160002060000154141561135c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611353906147ff565b60405180910390fd5b6007543410156113a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161139890614bad565b60405180910390fd5b600033905060003490506113b784848385612c11565b6113c2848483612eed565b6113cc8382613330565b50505050565b60075481565b6002600054141561141e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141590614c19565b60405180910390fd5b6002600081905550600160095461143591906148e9565b6009819055503373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167ffcaf9544852e1f0902dbcf8a118d2ae8235ed282692bbb5dc2aff212e4888a418484346009546040516114a09493929190614c66565b60405180910390a36001600081905550505050565b60006012600084815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f8b2cb4f836040518263ffffffff1660e01b8152600401611526919061404e565b602060405180830381865afa158015611543573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115679190614cbb565b905092915050565b6060804383106115b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115ab90614d34565b60405180910390fd5b60006012600086815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000808273ffffffffffffffffffffffffffffffffffffffff166318c471ba876040518263ffffffff1660e01b815260040161162b9190613c0f565b600060405180830381865afa158015611648573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906116719190614e17565b9150915060006011600089815260200190815260200160002054905060608060008314156116aa57818197509750505050505050611a4e565b88601060008c815260200190815260200160002060006001866116cd91906149f4565b815260200190815260200160002060000154116117c5576117a585601060008d8152602001908152602001600020600060018761170a91906149f4565b815260200190815260200160002060010180548060200260200160405190810160405280929190818152602001828054801561179b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611751575b50505050506134c7565b91506117b28286866136ad565b9050818197509750505050505050611a4e565b88601060008c8152602001908152602001600020600080815260200190815260200160002060000154111561180557818197509750505050505050611a4e565b60008060018561181591906149f4565b90505b8181111561197b5760006002838361183091906149f4565b61183a9190614ebe565b8261184591906149f4565b90506000601060008f81526020019081526020016000206000838152602001908152602001600020604051806040016040529081600082015481526020016001820180548060200260200160405190810160405280929190818152602001828054801561190757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116118bd575b50505050508152505090508c816000015114156119505761192c8982602001516134c7565b9550611939868a8a6136ad565b945085859b509b5050505050505050505050611a4e565b8c8160000151101561196457819350611974565b60018261197191906149f4565b92505b5050611818565b611a3087601060008f81526020019081526020016000206000858152602001908152602001600020600101805480602002602001604051908101604052809291908181526020018280548015611a2657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116119dc575b50505050506134c7565b9350611a3d8488886136ad565b925083839950995050505050505050505b9250929050565b60126020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806005018054611af690614b2f565b80601f0160208091040260200160405190810160405280929190818152602001828054611b2290614b2f565b8015611b6f5780601f10611b4457610100808354040283529160200191611b6f565b820191906000526020600020905b815481529060010190602001808311611b5257829003601f168201915b5050505050908060060160009054906101000a900460ff16905087565b606060006012600084815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff1663473d12ba6040518163ffffffff1660e01b8152600401600060405180830381865afa158015611c16573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190611c3f91906146fe565b905060006013600086815260200190815260200160002073__IterableMapping_______________________63b3d15a3e90916040518263ffffffff1660e01b8152600401611c8e9190614ef6565b600060405180830381865af4158015611cab573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190611cd491906146fe565b9050611ce082826134c7565b9350505050919050565b6000623715908410158015611d02575062373c9f8411155b611d41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d3890614793565b60405180910390fd5b600060126000868152602001908152602001600020600001541415611d9b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d92906147ff565b60405180910390fd5b438210611ddd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dd490614d34565b60405180910390fd5b6000600d600086815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811415611e45576000915050612133565b82600c600087815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600184611ea591906149f4565b81526020019081526020016000206000015411611f3a57600754600c600087815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600184611f1e91906149f4565b8152602001908152602001600020600101541015915050612133565b82600c600087815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000808152602001908152602001600020600001541115611fb0576000915050612133565b600080600183611fc091906149f4565b90505b818111156120c357600060028383611fdb91906149f4565b611fe59190614ebe565b82611ff091906149f4565b90506000600c60008a815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206040518060400160405290816000820154815260200160018201548152505090508681600001511415612098576007548160200151101595505050505050612133565b86816000015110156120ac578193506120bc565b6001826120b991906149f4565b92505b5050611fc3565b600754600c600089815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060010154101593505050505b9392505050565b6010602052816000526040600020602052806000526040600020600091509150508060000154905081565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146121f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121ec90614a74565b60405180910390fd5b8060068190555050565b600080600d600085815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600c600086815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001846122b691906149f4565b815260200190815260200160002060405180604001604052908160008201548152602001600182015481525050905080602001519250505092915050565b6000600b600085815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600a600086815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060018461242491906149f4565b8152602001908152602001600020604051806040016040529081600082015481526020016001820154815250509050838160200151101561249a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161249190614f5d565b60405180910390fd5b60006124aa82602001518661378c565b905060006001846124bb91906148e9565b9050604051806040016040528043815260200183815250600a600089815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868152602001908152602001600020600082015181600001556020820151816001015590505080600b600089815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050505050505050565b6000600d600084815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600c600085815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001846126d991906149f4565b8152602001908152602001600020604051806040016040529081600082015481526020016001820154815250509050600061271882602001518561378c565b905060016013600087815260200190815260200160002073__IterableMapping_______________________63732a2ccf9091896040518363ffffffff1660e01b8152600401612769929190614f8c565b602060405180830381865af4158015612786573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127aa9190614cbb565b1480156127b8575060075481105b15612972576013600086815260200190815260200160002073__IterableMapping_______________________634c60db9c9091886040518363ffffffff1660e01b815260040161280a929190614f8c565b60006040518083038186803b15801561282257600080fd5b505af4158015612836573d6000803e3d6000fd5b5050505060006011600087815260200190815260200160002054905060405180604001604052804381526020016013600089815260200190815260200160002073__IterableMapping_______________________63b3d15a3e90916040518263ffffffff1660e01b81526004016128ae9190614ef6565b600060405180830381865af41580156128cb573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906128f491906146fe565b815250601060008881526020019081526020016000206000838152602001908152602001600020600082015181600001556020820151816001019080519060200190612941929190613a98565b50905050600160116000888152602001908152602001600020600082825461296991906148e9565b92505081905550505b600060018461298191906148e9565b9050604051806040016040528043815260200183815250600c600088815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868152602001908152602001600020600082015181600001556020820151816001015590505080600d600088815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505050505050565b6000600f60008481526020019081526020016000205490506000600e60008581526020019081526020016000206000600184612aaa91906149f4565b8152602001908152602001600020604051806060016040529081600082015481526020016001820154815260200160028201548152505090506000612af382602001518561378c565b90506000600184612b0491906148e9565b905060405180606001604052804381526020018381526020016013600089815260200190815260200160002073__IterableMapping_______________________63deb3d89690916040518263ffffffff1660e01b8152600401612b689190614ef6565b602060405180830381865af4158015612b85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ba99190614cbb565b815250600e6000888152602001908152602001600020600086815260200190815260200160002060008201518160000155602082015181600101556040820151816002015590505080600f600088815260200190815260200160002081905550505050505050565b6000600b600085815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600a600086815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206040518060400160405290816000820154815260200160018201548152505090506000612d748260200151866137d6565b90506000600184612d8591906148e9565b9050604051806040016040528043815260200183815250600a600089815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868152602001908152602001600020600082015181600001556020820151816001015590505080600b600089815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050505050505050565b6000600d600084815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600c600085815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206040518060400160405290816000820154815260200160018201548152505090506000612fd68260200151856137d6565b905060006013600087815260200190815260200160002073__IterableMapping_______________________63732a2ccf9091896040518363ffffffff1660e01b8152600401613027929190614f8c565b602060405180830381865af4158015613044573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130689190614cbb565b14801561307757506007548110155b15613234576013600086815260200190815260200160002073__IterableMapping_______________________63bc2b405c90918860016040518463ffffffff1660e01b81526004016130cc93929190614ff0565b60006040518083038186803b1580156130e457600080fd5b505af41580156130f8573d6000803e3d6000fd5b5050505060006011600087815260200190815260200160002054905060405180604001604052804381526020016013600089815260200190815260200160002073__IterableMapping_______________________63b3d15a3e90916040518263ffffffff1660e01b81526004016131709190614ef6565b600060405180830381865af415801561318d573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906131b691906146fe565b815250601060008881526020019081526020016000206000838152602001908152602001600020600082015181600001556020820151816001019080519060200190613203929190613a98565b50905050600160116000888152602001908152602001600020600082825461322b91906148e9565b92505081905550505b600060018461324391906148e9565b9050604051806040016040528043815260200183815250600c600088815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868152602001908152602001600020600082015181600001556020820151816001015590505080600d600088815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505050505050565b6000600f60008481526020019081526020016000205490506000600e600085815260200190815260200160002060008381526020019081526020016000206040518060600160405290816000820154815260200160018201548152602001600282015481525050905060006133a98260200151856137d6565b905060006001846133ba91906148e9565b905060405180606001604052804381526020018381526020016013600089815260200190815260200160002073__IterableMapping_______________________63deb3d89690916040518263ffffffff1660e01b815260040161341e9190614ef6565b602060405180830381865af415801561343b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061345f9190614cbb565b815250600e6000888152602001908152602001600020600086815260200190815260200160002060008201518160000155602082015181600101556040820151816002015590505080600f600088815260200190815260200160002081905550505050505050565b606060008351905060008167ffffffffffffffff8111156134eb576134ea613ea5565b5b6040519080825280602002602001820160405280156135195781602001602082028036833780820191505090505b5090506000805b8381101561359a5761354c8688838151811061353f5761353e61488b565b5b6020026020010151613834565b156135875760018382815181106135665761356561488b565b5b60200260200101901515908115158152505081806135839061493f565b9250505b80806135929061493f565b915050613520565b5060008167ffffffffffffffff8111156135b7576135b6613ea5565b5b6040519080825280602002602001820160405280156135e55781602001602082028036833780820191505090505b5090506000805b8581101561369e578481815181106136075761360661488b565b5b60200260200101511561368b578881815181106136275761362661488b565b5b60200260200101518383815181106136425761364161488b565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505081806136879061493f565b9250505b80806136969061493f565b9150506135ec565b50819550505050505092915050565b60606000845167ffffffffffffffff8111156136cc576136cb613ea5565b5b6040519080825280602002602001820160405280156136fa5781602001602082028036833780820191505090505b50905060005b855181101561378057600061372f868884815181106137225761372161488b565b5b602002602001015161384e565b5090508481815181106137455761374461488b565b5b60200260200101518383815181106137605761375f61488b565b5b6020026020010181815250505080806137789061493f565b915050613700565b50809150509392505050565b60006137ce83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506138e2565b905092915050565b60008082846137e591906148e9565b90508381101561382a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161382190615073565b60405180910390fd5b8091505092915050565b600080613841848461384e565b9150508091505092915050565b60008060008451905060005b818110156138d1578473ffffffffffffffffffffffffffffffffffffffff1686828151811061388c5761388b61488b565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1614156138be578060019350935050506138db565b80806138c99061493f565b91505061385a565b5060008092509250505b9250929050565b600083831115829061392a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016139219190615093565b60405180910390fd5b506000838561393991906149f4565b9050809150509392505050565b60405180606001604052806000815260200160008152602001600081525090565b82805461397390614b2f565b90600052602060002090601f01602090048101928261399557600085556139dc565b82601f106139ae57805160ff19168380011785556139dc565b828001600101855582156139dc579182015b828111156139db5782518255916020019190600101906139c0565b5b5090506139e99190613b22565b5090565b604051806040016040528060008152602001600081525090565b6040518060e0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160006003811115613a9257613a916141da565b5b81525090565b828054828255906000526020600020908101928215613b11579160200282015b82811115613b105782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190613ab8565b5b509050613b1e9190613b22565b5090565b5b80821115613b3b576000816000905550600101613b23565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b613b6681613b53565b8114613b7157600080fd5b50565b600081359050613b8381613b5d565b92915050565b60008060408385031215613ba057613b9f613b49565b5b6000613bae85828601613b74565b9250506020613bbf85828601613b74565b9150509250929050565b613bd281613b53565b82525050565b6000606082019050613bed6000830186613bc9565b613bfa6020830185613bc9565b613c076040830184613bc9565b949350505050565b6000602082019050613c246000830184613bc9565b92915050565b600060208284031215613c4057613c3f613b49565b5b6000613c4e84828501613b74565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000613cae82613c83565b9050919050565b613cbe81613ca3565b82525050565b6000613cd08383613cb5565b60208301905092915050565b6000602082019050919050565b6000613cf482613c57565b613cfe8185613c62565b9350613d0983613c73565b8060005b83811015613d3a578151613d218882613cc4565b9750613d2c83613cdc565b925050600181019050613d0d565b5085935050505092915050565b60006020820190508181036000830152613d618184613ce9565b905092915050565b60008115159050919050565b613d7e81613d69565b82525050565b6000602082019050613d996000830184613d75565b92915050565b613da881613ca3565b8114613db357600080fd5b50565b600081359050613dc581613d9f565b92915050565b600080600060608486031215613de457613de3613b49565b5b6000613df286828701613db6565b9350506020613e0386828701613b74565b9250506040613e1486828701613b74565b9150509250925092565b613e2781613b53565b82525050565b606082016000820151613e436000850182613e1e565b506020820151613e566020850182613e1e565b506040820151613e696040850182613e1e565b50505050565b6000606082019050613e846000830184613e2d565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b613edd82613e94565b810181811067ffffffffffffffff82111715613efc57613efb613ea5565b5b80604052505050565b6000613f0f613b3f565b9050613f1b8282613ed4565b919050565b600067ffffffffffffffff821115613f3b57613f3a613ea5565b5b613f4482613e94565b9050602081019050919050565b82818337600083830152505050565b6000613f73613f6e84613f20565b613f05565b905082815260208101848484011115613f8f57613f8e613e8f565b5b613f9a848285613f51565b509392505050565b600082601f830112613fb757613fb6613e8a565b5b8135613fc7848260208601613f60565b91505092915050565b600080600060608486031215613fe957613fe8613b49565b5b6000613ff786828701613b74565b935050602061400886828701613db6565b925050604084013567ffffffffffffffff81111561402957614028613b4e565b5b61403586828701613fa2565b9150509250925092565b61404881613ca3565b82525050565b6000602082019050614063600083018461403f565b92915050565b600080604083850312156140805761407f613b49565b5b600061408e85828601613b74565b925050602061409f85828601613db6565b9150509250929050565b6040820160008201516140bf6000850182613e1e565b5060208201516140d26020850182613e1e565b50505050565b60006040820190506140ed60008301846140a9565b92915050565b6000819050919050565b600061411861411361410e84613c83565b6140f3565b613c83565b9050919050565b600061412a826140fd565b9050919050565b600061413c8261411f565b9050919050565b61414c81614131565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561418c578082015181840152602081019050614171565b8381111561419b576000848401525b50505050565b60006141ac82614152565b6141b6818561415d565b93506141c681856020860161416e565b6141cf81613e94565b840191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6004811061421a576142196141da565b5b50565b600081905061422b82614209565b919050565b600061423b8261421d565b9050919050565b61424b81614230565b82525050565b600060e0830160008301516142696000860182613e1e565b50602083015161427c6020860182613cb5565b50604083015161428f6040860182613e1e565b5060608301516142a26060860182613cb5565b5060808301516142b56080860182614143565b5060a083015184820360a08601526142cd82826141a1565b91505060c08301516142e260c0860182614242565b508091505092915050565b600060208201905081810360008301526143078184614251565b905092915050565b6000806040838503121561432657614325613b49565b5b600061433485828601613db6565b925050602061434585828601613b74565b9150509250929050565b600080fd5b600080fd5b60008083601f84011261436f5761436e613e8a565b5b8235905067ffffffffffffffff81111561438c5761438b61434f565b5b6020830191508360018202830111156143a8576143a7614354565b5b9250929050565b6000806000604084860312156143c8576143c7613b49565b5b60006143d686828701613db6565b935050602084013567ffffffffffffffff8111156143f7576143f6613b4e565b5b61440386828701614359565b92509250509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006144478383613e1e565b60208301905092915050565b6000602082019050919050565b600061446b8261440f565b614475818561441a565b93506144808361442b565b8060005b838110156144b1578151614498888261443b565b97506144a383614453565b925050600181019050614484565b5085935050505092915050565b600060408201905081810360008301526144d88185613ce9565b905081810360208301526144ec8184614460565b90509392505050565b6144fe81614131565b82525050565b600082825260208201905092915050565b600061452082614152565b61452a8185614504565b935061453a81856020860161416e565b61454381613e94565b840191505092915050565b61455781614230565b82525050565b600060e082019050614572600083018a613bc9565b61457f602083018961403f565b61458c6040830188613bc9565b614599606083018761403f565b6145a660808301866144f5565b81810360a08301526145b88185614515565b90506145c760c083018461454e565b98975050505050505050565b6000806000606084860312156145ec576145eb613b49565b5b60006145fa86828701613b74565b935050602061460b86828701613db6565b925050604061461c86828701613b74565b9150509250925092565b600067ffffffffffffffff82111561464157614640613ea5565b5b602082029050602081019050919050565b60008151905061466181613d9f565b92915050565b600061467a61467584614626565b613f05565b9050808382526020820190506020840283018581111561469d5761469c614354565b5b835b818110156146c657806146b28882614652565b84526020840193505060208101905061469f565b5050509392505050565b600082601f8301126146e5576146e4613e8a565b5b81516146f5848260208601614667565b91505092915050565b60006020828403121561471457614713613b49565b5b600082015167ffffffffffffffff81111561473257614731613b4e565b5b61473e848285016146d0565b91505092915050565b7f496e76616c696420737562636861696e20494400000000000000000000000000600082015250565b600061477d601383614504565b915061478882614747565b602082019050919050565b600060208201905081810360008301526147ac81614770565b9050919050565b7f537562636861696e206973206e6f742072656769737465726564000000000000600082015250565b60006147e9601a83614504565b91506147f4826147b3565b602082019050919050565b60006020820190508181036000830152614818816147dc565b9050919050565b7f5468697320626c6f636b206973206e6f74207965742064657465726d696e6564600082015250565b6000614855602083614504565b91506148608261481f565b602082019050919050565b6000602082019050818103600083015261488481614848565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006148f482613b53565b91506148ff83613b53565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115614934576149336148ba565b5b828201905092915050565b600061494a82613b53565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561497d5761497c6148ba565b5b600182019050919050565b7f4e65766572206465706f73697400000000000000000000000000000000000000600082015250565b60006149be600d83614504565b91506149c982614988565b602082019050919050565b600060208201905081810360008301526149ed816149b1565b9050919050565b60006149ff82613b53565b9150614a0a83613b53565b925082821015614a1d57614a1c6148ba565b5b828203905092915050565b7f4f6e6c79207075626c69736865722063616e2063616c6c20746869732e000000600082015250565b6000614a5e601d83614504565b9150614a6982614a28565b602082019050919050565b60006020820190508181036000830152614a8d81614a51565b9050919050565b7f537562636861696e20494420686173206265656e207265676973746572656421600082015250565b6000614aca602083614504565b9150614ad582614a94565b602082019050919050565b60006020820190508181036000830152614af981614abd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680614b4757607f821691505b60208210811415614b5b57614b5a614b00565b5b50919050565b7f546f6f206c65737320636f6c6c61746572616c20616d6f756e74000000000000600082015250565b6000614b97601a83614504565b9150614ba282614b61565b602082019050919050565b60006020820190508181036000830152614bc681614b8a565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000614c03601f83614504565b9150614c0e82614bcd565b602082019050919050565b60006020820190508181036000830152614c3281614bf6565b9050919050565b6000614c458385614504565b9350614c52838584613f51565b614c5b83613e94565b840190509392505050565b60006060820190508181036000830152614c81818688614c39565b9050614c906020830185613bc9565b614c9d6040830184613bc9565b95945050505050565b600081519050614cb581613b5d565b92915050565b600060208284031215614cd157614cd0613b49565b5b6000614cdf84828501614ca6565b91505092915050565b7f7468697320626c6f636b206973206e6f74207965742064657465726d696e6564600082015250565b6000614d1e602083614504565b9150614d2982614ce8565b602082019050919050565b60006020820190508181036000830152614d4d81614d11565b9050919050565b600067ffffffffffffffff821115614d6f57614d6e613ea5565b5b602082029050602081019050919050565b6000614d93614d8e84614d54565b613f05565b90508083825260208201905060208402830185811115614db657614db5614354565b5b835b81811015614ddf5780614dcb8882614ca6565b845260208401935050602081019050614db8565b5050509392505050565b600082601f830112614dfe57614dfd613e8a565b5b8151614e0e848260208601614d80565b91505092915050565b60008060408385031215614e2e57614e2d613b49565b5b600083015167ffffffffffffffff811115614e4c57614e4b613b4e565b5b614e58858286016146d0565b925050602083015167ffffffffffffffff811115614e7957614e78613b4e565b5b614e8585828601614de9565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000614ec982613b53565b9150614ed483613b53565b925082614ee457614ee3614e8f565b5b828204905092915050565b8082525050565b6000602082019050614f0b6000830184614eef565b92915050565b7f5769746864726177616c20616d6f756e7420746f6f206c617267650000000000600082015250565b6000614f47601b83614504565b9150614f5282614f11565b602082019050919050565b60006020820190508181036000830152614f7681614f3a565b9050919050565b614f8681613ca3565b82525050565b6000604082019050614fa16000830185614eef565b614fae6020830184614f7d565b9392505050565b6000819050919050565b6000614fda614fd5614fd084614fb5565b6140f3565b613b53565b9050919050565b614fea81614fbf565b82525050565b60006060820190506150056000830186614eef565b6150126020830185614f7d565b61501f6040830184614fe1565b949350505050565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b600061505d601b83614504565b915061506882615027565b602082019050919050565b6000602082019050818103600083015261508c81615050565b9050919050565b600060208201905081810360008301526150ad8184614515565b90509291505056fea2646970667358221220a2226dd2ecbf795adcf4b80cfb42bf8039b7edd65378c98079a3f3e2135f2ca964736f6c634300080c0033",
}

// SubchainRegisterABI is the input ABI used to generate the binding from.
// Deprecated: Use SubchainRegisterMetaData.ABI instead.
var SubchainRegisterABI = SubchainRegisterMetaData.ABI

// SubchainRegisterBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use SubchainRegisterMetaData.Bin instead.
var SubchainRegisterBin = SubchainRegisterMetaData.Bin

// DeploySubchainRegister deploys a new Ethereum contract, binding an instance of SubchainRegister to it.
func DeploySubchainRegister(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *SubchainRegister, error) {
	parsed, err := SubchainRegisterMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(SubchainRegisterBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &SubchainRegister{SubchainRegisterCaller: SubchainRegisterCaller{contract: contract}, SubchainRegisterTransactor: SubchainRegisterTransactor{contract: contract}, SubchainRegisterFilterer: SubchainRegisterFilterer{contract: contract}}, nil
}

// SubchainRegister is an auto generated Go binding around an Ethereum contract.
type SubchainRegister struct {
	SubchainRegisterCaller     // Read-only binding to the contract
	SubchainRegisterTransactor // Write-only binding to the contract
	SubchainRegisterFilterer   // Log filterer for contract events
}

// SubchainRegisterCaller is an auto generated read-only Go binding around an Ethereum contract.
type SubchainRegisterCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SubchainRegisterTransactor is an auto generated write-only Go binding around an Ethereum contract.
type SubchainRegisterTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SubchainRegisterFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type SubchainRegisterFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SubchainRegisterSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type SubchainRegisterSession struct {
	Contract     *SubchainRegister // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// SubchainRegisterCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type SubchainRegisterCallerSession struct {
	Contract *SubchainRegisterCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts           // Call options to use throughout this session
}

// SubchainRegisterTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type SubchainRegisterTransactorSession struct {
	Contract     *SubchainRegisterTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts           // Transaction auth options to use throughout this session
}

// SubchainRegisterRaw is an auto generated low-level Go binding around an Ethereum contract.
type SubchainRegisterRaw struct {
	Contract *SubchainRegister // Generic contract binding to access the raw methods on
}

// SubchainRegisterCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type SubchainRegisterCallerRaw struct {
	Contract *SubchainRegisterCaller // Generic read-only contract binding to access the raw methods on
}

// SubchainRegisterTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type SubchainRegisterTransactorRaw struct {
	Contract *SubchainRegisterTransactor // Generic write-only contract binding to access the raw methods on
}

// NewSubchainRegister creates a new instance of SubchainRegister, bound to a specific deployed contract.
func NewSubchainRegister(address common.Address, backend bind.ContractBackend) (*SubchainRegister, error) {
	contract, err := bindSubchainRegister(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &SubchainRegister{SubchainRegisterCaller: SubchainRegisterCaller{contract: contract}, SubchainRegisterTransactor: SubchainRegisterTransactor{contract: contract}, SubchainRegisterFilterer: SubchainRegisterFilterer{contract: contract}}, nil
}

// NewSubchainRegisterCaller creates a new read-only instance of SubchainRegister, bound to a specific deployed contract.
func NewSubchainRegisterCaller(address common.Address, caller bind.ContractCaller) (*SubchainRegisterCaller, error) {
	contract, err := bindSubchainRegister(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &SubchainRegisterCaller{contract: contract}, nil
}

// NewSubchainRegisterTransactor creates a new write-only instance of SubchainRegister, bound to a specific deployed contract.
func NewSubchainRegisterTransactor(address common.Address, transactor bind.ContractTransactor) (*SubchainRegisterTransactor, error) {
	contract, err := bindSubchainRegister(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &SubchainRegisterTransactor{contract: contract}, nil
}

// NewSubchainRegisterFilterer creates a new log filterer instance of SubchainRegister, bound to a specific deployed contract.
func NewSubchainRegisterFilterer(address common.Address, filterer bind.ContractFilterer) (*SubchainRegisterFilterer, error) {
	contract, err := bindSubchainRegister(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &SubchainRegisterFilterer{contract: contract}, nil
}

// bindSubchainRegister binds a generic wrapper to an already deployed contract.
func bindSubchainRegister(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(SubchainRegisterABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_SubchainRegister *SubchainRegisterRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _SubchainRegister.Contract.SubchainRegisterCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_SubchainRegister *SubchainRegisterRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _SubchainRegister.Contract.SubchainRegisterTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_SubchainRegister *SubchainRegisterRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _SubchainRegister.Contract.SubchainRegisterTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_SubchainRegister *SubchainRegisterCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _SubchainRegister.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_SubchainRegister *SubchainRegisterTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _SubchainRegister.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_SubchainRegister *SubchainRegisterTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _SubchainRegister.Contract.contract.Transact(opts, method, params...)
}

// MAXCHAINID is a free data retrieval call binding the contract method 0x5bc105c0.
//
// Solidity: function MAX_CHAIN_ID() view returns(uint256)
func (_SubchainRegister *SubchainRegisterCaller) MAXCHAINID(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "MAX_CHAIN_ID")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MAXCHAINID is a free data retrieval call binding the contract method 0x5bc105c0.
//
// Solidity: function MAX_CHAIN_ID() view returns(uint256)
func (_SubchainRegister *SubchainRegisterSession) MAXCHAINID() (*big.Int, error) {
	return _SubchainRegister.Contract.MAXCHAINID(&_SubchainRegister.CallOpts)
}

// MAXCHAINID is a free data retrieval call binding the contract method 0x5bc105c0.
//
// Solidity: function MAX_CHAIN_ID() view returns(uint256)
func (_SubchainRegister *SubchainRegisterCallerSession) MAXCHAINID() (*big.Int, error) {
	return _SubchainRegister.Contract.MAXCHAINID(&_SubchainRegister.CallOpts)
}

// MINCHAINID is a free data retrieval call binding the contract method 0x0df8f622.
//
// Solidity: function MIN_CHAIN_ID() view returns(uint256)
func (_SubchainRegister *SubchainRegisterCaller) MINCHAINID(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "MIN_CHAIN_ID")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MINCHAINID is a free data retrieval call binding the contract method 0x0df8f622.
//
// Solidity: function MIN_CHAIN_ID() view returns(uint256)
func (_SubchainRegister *SubchainRegisterSession) MINCHAINID() (*big.Int, error) {
	return _SubchainRegister.Contract.MINCHAINID(&_SubchainRegister.CallOpts)
}

// MINCHAINID is a free data retrieval call binding the contract method 0x0df8f622.
//
// Solidity: function MIN_CHAIN_ID() view returns(uint256)
func (_SubchainRegister *SubchainRegisterCallerSession) MINCHAINID() (*big.Int, error) {
	return _SubchainRegister.Contract.MINCHAINID(&_SubchainRegister.CallOpts)
}

// MINCOLLATERALAMOUNT is a free data retrieval call binding the contract method 0x91be4d41.
//
// Solidity: function MIN_COLLATERAL_AMOUNT() view returns(uint256)
func (_SubchainRegister *SubchainRegisterCaller) MINCOLLATERALAMOUNT(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "MIN_COLLATERAL_AMOUNT")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MINCOLLATERALAMOUNT is a free data retrieval call binding the contract method 0x91be4d41.
//
// Solidity: function MIN_COLLATERAL_AMOUNT() view returns(uint256)
func (_SubchainRegister *SubchainRegisterSession) MINCOLLATERALAMOUNT() (*big.Int, error) {
	return _SubchainRegister.Contract.MINCOLLATERALAMOUNT(&_SubchainRegister.CallOpts)
}

// MINCOLLATERALAMOUNT is a free data retrieval call binding the contract method 0x91be4d41.
//
// Solidity: function MIN_COLLATERAL_AMOUNT() view returns(uint256)
func (_SubchainRegister *SubchainRegisterCallerSession) MINCOLLATERALAMOUNT() (*big.Int, error) {
	return _SubchainRegister.Contract.MINCOLLATERALAMOUNT(&_SubchainRegister.CallOpts)
}

// MINNUMVALIDATORS is a free data retrieval call binding the contract method 0x5adc039e.
//
// Solidity: function MIN_NUM_VALIDATORS() view returns(uint256)
func (_SubchainRegister *SubchainRegisterCaller) MINNUMVALIDATORS(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "MIN_NUM_VALIDATORS")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MINNUMVALIDATORS is a free data retrieval call binding the contract method 0x5adc039e.
//
// Solidity: function MIN_NUM_VALIDATORS() view returns(uint256)
func (_SubchainRegister *SubchainRegisterSession) MINNUMVALIDATORS() (*big.Int, error) {
	return _SubchainRegister.Contract.MINNUMVALIDATORS(&_SubchainRegister.CallOpts)
}

// MINNUMVALIDATORS is a free data retrieval call binding the contract method 0x5adc039e.
//
// Solidity: function MIN_NUM_VALIDATORS() view returns(uint256)
func (_SubchainRegister *SubchainRegisterCallerSession) MINNUMVALIDATORS() (*big.Int, error) {
	return _SubchainRegister.Contract.MINNUMVALIDATORS(&_SubchainRegister.CallOpts)
}

// MINPERSONALCOLLATERALAMOUNT is a free data retrieval call binding the contract method 0xb309bb3b.
//
// Solidity: function MIN_PERSONAL_COLLATERAL_AMOUNT() view returns(uint256)
func (_SubchainRegister *SubchainRegisterCaller) MINPERSONALCOLLATERALAMOUNT(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "MIN_PERSONAL_COLLATERAL_AMOUNT")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MINPERSONALCOLLATERALAMOUNT is a free data retrieval call binding the contract method 0xb309bb3b.
//
// Solidity: function MIN_PERSONAL_COLLATERAL_AMOUNT() view returns(uint256)
func (_SubchainRegister *SubchainRegisterSession) MINPERSONALCOLLATERALAMOUNT() (*big.Int, error) {
	return _SubchainRegister.Contract.MINPERSONALCOLLATERALAMOUNT(&_SubchainRegister.CallOpts)
}

// MINPERSONALCOLLATERALAMOUNT is a free data retrieval call binding the contract method 0xb309bb3b.
//
// Solidity: function MIN_PERSONAL_COLLATERAL_AMOUNT() view returns(uint256)
func (_SubchainRegister *SubchainRegisterCallerSession) MINPERSONALCOLLATERALAMOUNT() (*big.Int, error) {
	return _SubchainRegister.Contract.MINPERSONALCOLLATERALAMOUNT(&_SubchainRegister.CallOpts)
}

// GetERCValidator is a free data retrieval call binding the contract method 0x377ea4d6.
//
// Solidity: function getERCValidator(uint256 subchainID) view returns(address[])
func (_SubchainRegister *SubchainRegisterCaller) GetERCValidator(opts *bind.CallOpts, subchainID *big.Int) ([]common.Address, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "getERCValidator", subchainID)

	if err != nil {
		return *new([]common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)

	return out0, err

}

// GetERCValidator is a free data retrieval call binding the contract method 0x377ea4d6.
//
// Solidity: function getERCValidator(uint256 subchainID) view returns(address[])
func (_SubchainRegister *SubchainRegisterSession) GetERCValidator(subchainID *big.Int) ([]common.Address, error) {
	return _SubchainRegister.Contract.GetERCValidator(&_SubchainRegister.CallOpts, subchainID)
}

// GetERCValidator is a free data retrieval call binding the contract method 0x377ea4d6.
//
// Solidity: function getERCValidator(uint256 subchainID) view returns(address[])
func (_SubchainRegister *SubchainRegisterCallerSession) GetERCValidator(subchainID *big.Int) ([]common.Address, error) {
	return _SubchainRegister.Contract.GetERCValidator(&_SubchainRegister.CallOpts, subchainID)
}

// GetLegalValidators is a free data retrieval call binding the contract method 0xd7b35658.
//
// Solidity: function getLegalValidators(uint256 subchainID) view returns(address[])
func (_SubchainRegister *SubchainRegisterCaller) GetLegalValidators(opts *bind.CallOpts, subchainID *big.Int) ([]common.Address, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "getLegalValidators", subchainID)

	if err != nil {
		return *new([]common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)

	return out0, err

}

// GetLegalValidators is a free data retrieval call binding the contract method 0xd7b35658.
//
// Solidity: function getLegalValidators(uint256 subchainID) view returns(address[])
func (_SubchainRegister *SubchainRegisterSession) GetLegalValidators(subchainID *big.Int) ([]common.Address, error) {
	return _SubchainRegister.Contract.GetLegalValidators(&_SubchainRegister.CallOpts, subchainID)
}

// GetLegalValidators is a free data retrieval call binding the contract method 0xd7b35658.
//
// Solidity: function getLegalValidators(uint256 subchainID) view returns(address[])
func (_SubchainRegister *SubchainRegisterCallerSession) GetLegalValidators(subchainID *big.Int) ([]common.Address, error) {
	return _SubchainRegister.Contract.GetLegalValidators(&_SubchainRegister.CallOpts, subchainID)
}

// GetSubchainCheckpoint is a free data retrieval call binding the contract method 0x5ce70ecc.
//
// Solidity: function getSubchainCheckpoint(uint256 subchainID) view returns((uint256,uint256,uint256))
func (_SubchainRegister *SubchainRegisterCaller) GetSubchainCheckpoint(opts *bind.CallOpts, subchainID *big.Int) (SubchainValidatorRegistrarSubchainCheckpoint, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "getSubchainCheckpoint", subchainID)

	if err != nil {
		return *new(SubchainValidatorRegistrarSubchainCheckpoint), err
	}

	out0 := *abi.ConvertType(out[0], new(SubchainValidatorRegistrarSubchainCheckpoint)).(*SubchainValidatorRegistrarSubchainCheckpoint)

	return out0, err

}

// GetSubchainCheckpoint is a free data retrieval call binding the contract method 0x5ce70ecc.
//
// Solidity: function getSubchainCheckpoint(uint256 subchainID) view returns((uint256,uint256,uint256))
func (_SubchainRegister *SubchainRegisterSession) GetSubchainCheckpoint(subchainID *big.Int) (SubchainValidatorRegistrarSubchainCheckpoint, error) {
	return _SubchainRegister.Contract.GetSubchainCheckpoint(&_SubchainRegister.CallOpts, subchainID)
}

// GetSubchainCheckpoint is a free data retrieval call binding the contract method 0x5ce70ecc.
//
// Solidity: function getSubchainCheckpoint(uint256 subchainID) view returns((uint256,uint256,uint256))
func (_SubchainRegister *SubchainRegisterCallerSession) GetSubchainCheckpoint(subchainID *big.Int) (SubchainValidatorRegistrarSubchainCheckpoint, error) {
	return _SubchainRegister.Contract.GetSubchainCheckpoint(&_SubchainRegister.CallOpts, subchainID)
}

// GetSubchainInfo is a free data retrieval call binding the contract method 0x9c9ec4e5.
//
// Solidity: function getSubchainInfo(uint256 subchainID) view returns((uint256,address,uint256,address,address,string,uint8))
func (_SubchainRegister *SubchainRegisterCaller) GetSubchainInfo(opts *bind.CallOpts, subchainID *big.Int) (SubchainValidatorRegistrarSubchainRegisterInfo, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "getSubchainInfo", subchainID)

	if err != nil {
		return *new(SubchainValidatorRegistrarSubchainRegisterInfo), err
	}

	out0 := *abi.ConvertType(out[0], new(SubchainValidatorRegistrarSubchainRegisterInfo)).(*SubchainValidatorRegistrarSubchainRegisterInfo)

	return out0, err

}

// GetSubchainInfo is a free data retrieval call binding the contract method 0x9c9ec4e5.
//
// Solidity: function getSubchainInfo(uint256 subchainID) view returns((uint256,address,uint256,address,address,string,uint8))
func (_SubchainRegister *SubchainRegisterSession) GetSubchainInfo(subchainID *big.Int) (SubchainValidatorRegistrarSubchainRegisterInfo, error) {
	return _SubchainRegister.Contract.GetSubchainInfo(&_SubchainRegister.CallOpts, subchainID)
}

// GetSubchainInfo is a free data retrieval call binding the contract method 0x9c9ec4e5.
//
// Solidity: function getSubchainInfo(uint256 subchainID) view returns((uint256,address,uint256,address,address,string,uint8))
func (_SubchainRegister *SubchainRegisterCallerSession) GetSubchainInfo(subchainID *big.Int) (SubchainValidatorRegistrarSubchainRegisterInfo, error) {
	return _SubchainRegister.Contract.GetSubchainInfo(&_SubchainRegister.CallOpts, subchainID)
}

// GetSubchainTokenAtAddresss is a free data retrieval call binding the contract method 0xc598d4ce.
//
// Solidity: function getSubchainTokenAtAddresss(uint256 subchainID, address fromaddress) view returns(uint256)
func (_SubchainRegister *SubchainRegisterCaller) GetSubchainTokenAtAddresss(opts *bind.CallOpts, subchainID *big.Int, fromaddress common.Address) (*big.Int, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "getSubchainTokenAtAddresss", subchainID, fromaddress)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetSubchainTokenAtAddresss is a free data retrieval call binding the contract method 0xc598d4ce.
//
// Solidity: function getSubchainTokenAtAddresss(uint256 subchainID, address fromaddress) view returns(uint256)
func (_SubchainRegister *SubchainRegisterSession) GetSubchainTokenAtAddresss(subchainID *big.Int, fromaddress common.Address) (*big.Int, error) {
	return _SubchainRegister.Contract.GetSubchainTokenAtAddresss(&_SubchainRegister.CallOpts, subchainID, fromaddress)
}

// GetSubchainTokenAtAddresss is a free data retrieval call binding the contract method 0xc598d4ce.
//
// Solidity: function getSubchainTokenAtAddresss(uint256 subchainID, address fromaddress) view returns(uint256)
func (_SubchainRegister *SubchainRegisterCallerSession) GetSubchainTokenAtAddresss(subchainID *big.Int, fromaddress common.Address) (*big.Int, error) {
	return _SubchainRegister.Contract.GetSubchainTokenAtAddresss(&_SubchainRegister.CallOpts, subchainID, fromaddress)
}

// GetValidatorAndStakeSetWithBlockHeight is a free data retrieval call binding the contract method 0xc8248b5f.
//
// Solidity: function getValidatorAndStakeSetWithBlockHeight(uint256 subchainID, uint256 blockHeight) view returns(address[], uint256[])
func (_SubchainRegister *SubchainRegisterCaller) GetValidatorAndStakeSetWithBlockHeight(opts *bind.CallOpts, subchainID *big.Int, blockHeight *big.Int) ([]common.Address, []*big.Int, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "getValidatorAndStakeSetWithBlockHeight", subchainID, blockHeight)

	if err != nil {
		return *new([]common.Address), *new([]*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)
	out1 := *abi.ConvertType(out[1], new([]*big.Int)).(*[]*big.Int)

	return out0, out1, err

}

// GetValidatorAndStakeSetWithBlockHeight is a free data retrieval call binding the contract method 0xc8248b5f.
//
// Solidity: function getValidatorAndStakeSetWithBlockHeight(uint256 subchainID, uint256 blockHeight) view returns(address[], uint256[])
func (_SubchainRegister *SubchainRegisterSession) GetValidatorAndStakeSetWithBlockHeight(subchainID *big.Int, blockHeight *big.Int) ([]common.Address, []*big.Int, error) {
	return _SubchainRegister.Contract.GetValidatorAndStakeSetWithBlockHeight(&_SubchainRegister.CallOpts, subchainID, blockHeight)
}

// GetValidatorAndStakeSetWithBlockHeight is a free data retrieval call binding the contract method 0xc8248b5f.
//
// Solidity: function getValidatorAndStakeSetWithBlockHeight(uint256 subchainID, uint256 blockHeight) view returns(address[], uint256[])
func (_SubchainRegister *SubchainRegisterCallerSession) GetValidatorAndStakeSetWithBlockHeight(subchainID *big.Int, blockHeight *big.Int) ([]common.Address, []*big.Int, error) {
	return _SubchainRegister.Contract.GetValidatorAndStakeSetWithBlockHeight(&_SubchainRegister.CallOpts, subchainID, blockHeight)
}

// GetValidatorCheckpoint is a free data retrieval call binding the contract method 0x912d40ad.
//
// Solidity: function getValidatorCheckpoint(uint256 subchainID, address validatorCandidate) view returns((uint256,uint256))
func (_SubchainRegister *SubchainRegisterCaller) GetValidatorCheckpoint(opts *bind.CallOpts, subchainID *big.Int, validatorCandidate common.Address) (SubchainValidatorRegistrarSubchainValidatorCandidateCheckpoint, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "getValidatorCheckpoint", subchainID, validatorCandidate)

	if err != nil {
		return *new(SubchainValidatorRegistrarSubchainValidatorCandidateCheckpoint), err
	}

	out0 := *abi.ConvertType(out[0], new(SubchainValidatorRegistrarSubchainValidatorCandidateCheckpoint)).(*SubchainValidatorRegistrarSubchainValidatorCandidateCheckpoint)

	return out0, err

}

// GetValidatorCheckpoint is a free data retrieval call binding the contract method 0x912d40ad.
//
// Solidity: function getValidatorCheckpoint(uint256 subchainID, address validatorCandidate) view returns((uint256,uint256))
func (_SubchainRegister *SubchainRegisterSession) GetValidatorCheckpoint(subchainID *big.Int, validatorCandidate common.Address) (SubchainValidatorRegistrarSubchainValidatorCandidateCheckpoint, error) {
	return _SubchainRegister.Contract.GetValidatorCheckpoint(&_SubchainRegister.CallOpts, subchainID, validatorCandidate)
}

// GetValidatorCheckpoint is a free data retrieval call binding the contract method 0x912d40ad.
//
// Solidity: function getValidatorCheckpoint(uint256 subchainID, address validatorCandidate) view returns((uint256,uint256))
func (_SubchainRegister *SubchainRegisterCallerSession) GetValidatorCheckpoint(subchainID *big.Int, validatorCandidate common.Address) (SubchainValidatorRegistrarSubchainValidatorCandidateCheckpoint, error) {
	return _SubchainRegister.Contract.GetValidatorCheckpoint(&_SubchainRegister.CallOpts, subchainID, validatorCandidate)
}

// GetValidatorCheckpointNumber is a free data retrieval call binding the contract method 0xfc809864.
//
// Solidity: function getValidatorCheckpointNumber(uint256 subchainID, address validatorCandidate) view returns(uint256)
func (_SubchainRegister *SubchainRegisterCaller) GetValidatorCheckpointNumber(opts *bind.CallOpts, subchainID *big.Int, validatorCandidate common.Address) (*big.Int, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "getValidatorCheckpointNumber", subchainID, validatorCandidate)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetValidatorCheckpointNumber is a free data retrieval call binding the contract method 0xfc809864.
//
// Solidity: function getValidatorCheckpointNumber(uint256 subchainID, address validatorCandidate) view returns(uint256)
func (_SubchainRegister *SubchainRegisterSession) GetValidatorCheckpointNumber(subchainID *big.Int, validatorCandidate common.Address) (*big.Int, error) {
	return _SubchainRegister.Contract.GetValidatorCheckpointNumber(&_SubchainRegister.CallOpts, subchainID, validatorCandidate)
}

// GetValidatorCheckpointNumber is a free data retrieval call binding the contract method 0xfc809864.
//
// Solidity: function getValidatorCheckpointNumber(uint256 subchainID, address validatorCandidate) view returns(uint256)
func (_SubchainRegister *SubchainRegisterCallerSession) GetValidatorCheckpointNumber(subchainID *big.Int, validatorCandidate common.Address) (*big.Int, error) {
	return _SubchainRegister.Contract.GetValidatorCheckpointNumber(&_SubchainRegister.CallOpts, subchainID, validatorCandidate)
}

// IsSubchainActive is a free data retrieval call binding the contract method 0x39b913ee.
//
// Solidity: function isSubchainActive(uint256 subchainID, uint256 blockHeight) view returns(bool)
func (_SubchainRegister *SubchainRegisterCaller) IsSubchainActive(opts *bind.CallOpts, subchainID *big.Int, blockHeight *big.Int) (bool, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "isSubchainActive", subchainID, blockHeight)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsSubchainActive is a free data retrieval call binding the contract method 0x39b913ee.
//
// Solidity: function isSubchainActive(uint256 subchainID, uint256 blockHeight) view returns(bool)
func (_SubchainRegister *SubchainRegisterSession) IsSubchainActive(subchainID *big.Int, blockHeight *big.Int) (bool, error) {
	return _SubchainRegister.Contract.IsSubchainActive(&_SubchainRegister.CallOpts, subchainID, blockHeight)
}

// IsSubchainActive is a free data retrieval call binding the contract method 0x39b913ee.
//
// Solidity: function isSubchainActive(uint256 subchainID, uint256 blockHeight) view returns(bool)
func (_SubchainRegister *SubchainRegisterCallerSession) IsSubchainActive(subchainID *big.Int, blockHeight *big.Int) (bool, error) {
	return _SubchainRegister.Contract.IsSubchainActive(&_SubchainRegister.CallOpts, subchainID, blockHeight)
}

// IsSubchainValidatorCandidateActive is a free data retrieval call binding the contract method 0xdd4d452f.
//
// Solidity: function isSubchainValidatorCandidateActive(uint256 subchainID, address validatorCandidateAddress, uint256 blockHeight) view returns(bool)
func (_SubchainRegister *SubchainRegisterCaller) IsSubchainValidatorCandidateActive(opts *bind.CallOpts, subchainID *big.Int, validatorCandidateAddress common.Address, blockHeight *big.Int) (bool, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "isSubchainValidatorCandidateActive", subchainID, validatorCandidateAddress, blockHeight)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsSubchainValidatorCandidateActive is a free data retrieval call binding the contract method 0xdd4d452f.
//
// Solidity: function isSubchainValidatorCandidateActive(uint256 subchainID, address validatorCandidateAddress, uint256 blockHeight) view returns(bool)
func (_SubchainRegister *SubchainRegisterSession) IsSubchainValidatorCandidateActive(subchainID *big.Int, validatorCandidateAddress common.Address, blockHeight *big.Int) (bool, error) {
	return _SubchainRegister.Contract.IsSubchainValidatorCandidateActive(&_SubchainRegister.CallOpts, subchainID, validatorCandidateAddress, blockHeight)
}

// IsSubchainValidatorCandidateActive is a free data retrieval call binding the contract method 0xdd4d452f.
//
// Solidity: function isSubchainValidatorCandidateActive(uint256 subchainID, address validatorCandidateAddress, uint256 blockHeight) view returns(bool)
func (_SubchainRegister *SubchainRegisterCallerSession) IsSubchainValidatorCandidateActive(subchainID *big.Int, validatorCandidateAddress common.Address, blockHeight *big.Int) (bool, error) {
	return _SubchainRegister.Contract.IsSubchainValidatorCandidateActive(&_SubchainRegister.CallOpts, subchainID, validatorCandidateAddress, blockHeight)
}

// Publisher is a free data retrieval call binding the contract method 0x8c72c54e.
//
// Solidity: function publisher() view returns(address)
func (_SubchainRegister *SubchainRegisterCaller) Publisher(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "publisher")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Publisher is a free data retrieval call binding the contract method 0x8c72c54e.
//
// Solidity: function publisher() view returns(address)
func (_SubchainRegister *SubchainRegisterSession) Publisher() (common.Address, error) {
	return _SubchainRegister.Contract.Publisher(&_SubchainRegister.CallOpts)
}

// Publisher is a free data retrieval call binding the contract method 0x8c72c54e.
//
// Solidity: function publisher() view returns(address)
func (_SubchainRegister *SubchainRegisterCallerSession) Publisher() (common.Address, error) {
	return _SubchainRegister.Contract.Publisher(&_SubchainRegister.CallOpts)
}

// StateLastEventNonce is a free data retrieval call binding the contract method 0x73b20547.
//
// Solidity: function state_lastEventNonce() view returns(uint256)
func (_SubchainRegister *SubchainRegisterCaller) StateLastEventNonce(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "state_lastEventNonce")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// StateLastEventNonce is a free data retrieval call binding the contract method 0x73b20547.
//
// Solidity: function state_lastEventNonce() view returns(uint256)
func (_SubchainRegister *SubchainRegisterSession) StateLastEventNonce() (*big.Int, error) {
	return _SubchainRegister.Contract.StateLastEventNonce(&_SubchainRegister.CallOpts)
}

// StateLastEventNonce is a free data retrieval call binding the contract method 0x73b20547.
//
// Solidity: function state_lastEventNonce() view returns(uint256)
func (_SubchainRegister *SubchainRegisterCallerSession) StateLastEventNonce() (*big.Int, error) {
	return _SubchainRegister.Contract.StateLastEventNonce(&_SubchainRegister.CallOpts)
}

// SubchainHistory is a free data retrieval call binding the contract method 0x04fee065.
//
// Solidity: function subchainHistory(uint256 , uint256 ) view returns(uint256 blockHeight, uint256 amount, uint256 legalValidatorCandidateCounter)
func (_SubchainRegister *SubchainRegisterCaller) SubchainHistory(opts *bind.CallOpts, arg0 *big.Int, arg1 *big.Int) (struct {
	BlockHeight                    *big.Int
	Amount                         *big.Int
	LegalValidatorCandidateCounter *big.Int
}, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "subchainHistory", arg0, arg1)

	outstruct := new(struct {
		BlockHeight                    *big.Int
		Amount                         *big.Int
		LegalValidatorCandidateCounter *big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.BlockHeight = *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	outstruct.Amount = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	outstruct.LegalValidatorCandidateCounter = *abi.ConvertType(out[2], new(*big.Int)).(**big.Int)

	return *outstruct, err

}

// SubchainHistory is a free data retrieval call binding the contract method 0x04fee065.
//
// Solidity: function subchainHistory(uint256 , uint256 ) view returns(uint256 blockHeight, uint256 amount, uint256 legalValidatorCandidateCounter)
func (_SubchainRegister *SubchainRegisterSession) SubchainHistory(arg0 *big.Int, arg1 *big.Int) (struct {
	BlockHeight                    *big.Int
	Amount                         *big.Int
	LegalValidatorCandidateCounter *big.Int
}, error) {
	return _SubchainRegister.Contract.SubchainHistory(&_SubchainRegister.CallOpts, arg0, arg1)
}

// SubchainHistory is a free data retrieval call binding the contract method 0x04fee065.
//
// Solidity: function subchainHistory(uint256 , uint256 ) view returns(uint256 blockHeight, uint256 amount, uint256 legalValidatorCandidateCounter)
func (_SubchainRegister *SubchainRegisterCallerSession) SubchainHistory(arg0 *big.Int, arg1 *big.Int) (struct {
	BlockHeight                    *big.Int
	Amount                         *big.Int
	LegalValidatorCandidateCounter *big.Int
}, error) {
	return _SubchainRegister.Contract.SubchainHistory(&_SubchainRegister.CallOpts, arg0, arg1)
}

// SubchainRegisterInfo is a free data retrieval call binding the contract method 0xd3b16eaf.
//
// Solidity: function subchainRegisterInfo(uint256 ) view returns(uint256 subchainID, address ownerAddress, uint256 registerPrice, address ERC20Address, address erc20, string genesisBlockHash, uint8 state)
func (_SubchainRegister *SubchainRegisterCaller) SubchainRegisterInfo(opts *bind.CallOpts, arg0 *big.Int) (struct {
	SubchainID       *big.Int
	OwnerAddress     common.Address
	RegisterPrice    *big.Int
	ERC20Address     common.Address
	Erc20            common.Address
	GenesisBlockHash string
	State            uint8
}, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "subchainRegisterInfo", arg0)

	outstruct := new(struct {
		SubchainID       *big.Int
		OwnerAddress     common.Address
		RegisterPrice    *big.Int
		ERC20Address     common.Address
		Erc20            common.Address
		GenesisBlockHash string
		State            uint8
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.SubchainID = *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	outstruct.OwnerAddress = *abi.ConvertType(out[1], new(common.Address)).(*common.Address)
	outstruct.RegisterPrice = *abi.ConvertType(out[2], new(*big.Int)).(**big.Int)
	outstruct.ERC20Address = *abi.ConvertType(out[3], new(common.Address)).(*common.Address)
	outstruct.Erc20 = *abi.ConvertType(out[4], new(common.Address)).(*common.Address)
	outstruct.GenesisBlockHash = *abi.ConvertType(out[5], new(string)).(*string)
	outstruct.State = *abi.ConvertType(out[6], new(uint8)).(*uint8)

	return *outstruct, err

}

// SubchainRegisterInfo is a free data retrieval call binding the contract method 0xd3b16eaf.
//
// Solidity: function subchainRegisterInfo(uint256 ) view returns(uint256 subchainID, address ownerAddress, uint256 registerPrice, address ERC20Address, address erc20, string genesisBlockHash, uint8 state)
func (_SubchainRegister *SubchainRegisterSession) SubchainRegisterInfo(arg0 *big.Int) (struct {
	SubchainID       *big.Int
	OwnerAddress     common.Address
	RegisterPrice    *big.Int
	ERC20Address     common.Address
	Erc20            common.Address
	GenesisBlockHash string
	State            uint8
}, error) {
	return _SubchainRegister.Contract.SubchainRegisterInfo(&_SubchainRegister.CallOpts, arg0)
}

// SubchainRegisterInfo is a free data retrieval call binding the contract method 0xd3b16eaf.
//
// Solidity: function subchainRegisterInfo(uint256 ) view returns(uint256 subchainID, address ownerAddress, uint256 registerPrice, address ERC20Address, address erc20, string genesisBlockHash, uint8 state)
func (_SubchainRegister *SubchainRegisterCallerSession) SubchainRegisterInfo(arg0 *big.Int) (struct {
	SubchainID       *big.Int
	OwnerAddress     common.Address
	RegisterPrice    *big.Int
	ERC20Address     common.Address
	Erc20            common.Address
	GenesisBlockHash string
	State            uint8
}, error) {
	return _SubchainRegister.Contract.SubchainRegisterInfo(&_SubchainRegister.CallOpts, arg0)
}

// ValidatorSetHistory is a free data retrieval call binding the contract method 0xe25f37eb.
//
// Solidity: function validatorSetHistory(uint256 , uint256 ) view returns(uint256 blockHeight)
func (_SubchainRegister *SubchainRegisterCaller) ValidatorSetHistory(opts *bind.CallOpts, arg0 *big.Int, arg1 *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "validatorSetHistory", arg0, arg1)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// ValidatorSetHistory is a free data retrieval call binding the contract method 0xe25f37eb.
//
// Solidity: function validatorSetHistory(uint256 , uint256 ) view returns(uint256 blockHeight)
func (_SubchainRegister *SubchainRegisterSession) ValidatorSetHistory(arg0 *big.Int, arg1 *big.Int) (*big.Int, error) {
	return _SubchainRegister.Contract.ValidatorSetHistory(&_SubchainRegister.CallOpts, arg0, arg1)
}

// ValidatorSetHistory is a free data retrieval call binding the contract method 0xe25f37eb.
//
// Solidity: function validatorSetHistory(uint256 , uint256 ) view returns(uint256 blockHeight)
func (_SubchainRegister *SubchainRegisterCallerSession) ValidatorSetHistory(arg0 *big.Int, arg1 *big.Int) (*big.Int, error) {
	return _SubchainRegister.Contract.ValidatorSetHistory(&_SubchainRegister.CallOpts, arg0, arg1)
}

// DepositCollateral is a paid mutator transaction binding the contract method 0xa5d5db0c.
//
// Solidity: function depositCollateral(address validatorCandidate, uint256 subchainID) payable returns()
func (_SubchainRegister *SubchainRegisterTransactor) DepositCollateral(opts *bind.TransactOpts, validatorCandidate common.Address, subchainID *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.contract.Transact(opts, "depositCollateral", validatorCandidate, subchainID)
}

// DepositCollateral is a paid mutator transaction binding the contract method 0xa5d5db0c.
//
// Solidity: function depositCollateral(address validatorCandidate, uint256 subchainID) payable returns()
func (_SubchainRegister *SubchainRegisterSession) DepositCollateral(validatorCandidate common.Address, subchainID *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.Contract.DepositCollateral(&_SubchainRegister.TransactOpts, validatorCandidate, subchainID)
}

// DepositCollateral is a paid mutator transaction binding the contract method 0xa5d5db0c.
//
// Solidity: function depositCollateral(address validatorCandidate, uint256 subchainID) payable returns()
func (_SubchainRegister *SubchainRegisterTransactorSession) DepositCollateral(validatorCandidate common.Address, subchainID *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.Contract.DepositCollateral(&_SubchainRegister.TransactOpts, validatorCandidate, subchainID)
}

// RegisterSubchainID is a paid mutator transaction binding the contract method 0x6da486ec.
//
// Solidity: function registerSubchainID(uint256 subchainID, address ERC20Address, string genesisBlockHash) payable returns()
func (_SubchainRegister *SubchainRegisterTransactor) RegisterSubchainID(opts *bind.TransactOpts, subchainID *big.Int, ERC20Address common.Address, genesisBlockHash string) (*types.Transaction, error) {
	return _SubchainRegister.contract.Transact(opts, "registerSubchainID", subchainID, ERC20Address, genesisBlockHash)
}

// RegisterSubchainID is a paid mutator transaction binding the contract method 0x6da486ec.
//
// Solidity: function registerSubchainID(uint256 subchainID, address ERC20Address, string genesisBlockHash) payable returns()
func (_SubchainRegister *SubchainRegisterSession) RegisterSubchainID(subchainID *big.Int, ERC20Address common.Address, genesisBlockHash string) (*types.Transaction, error) {
	return _SubchainRegister.Contract.RegisterSubchainID(&_SubchainRegister.TransactOpts, subchainID, ERC20Address, genesisBlockHash)
}

// RegisterSubchainID is a paid mutator transaction binding the contract method 0x6da486ec.
//
// Solidity: function registerSubchainID(uint256 subchainID, address ERC20Address, string genesisBlockHash) payable returns()
func (_SubchainRegister *SubchainRegisterTransactorSession) RegisterSubchainID(subchainID *big.Int, ERC20Address common.Address, genesisBlockHash string) (*types.Transaction, error) {
	return _SubchainRegister.Contract.RegisterSubchainID(&_SubchainRegister.TransactOpts, subchainID, ERC20Address, genesisBlockHash)
}

// SendToSubchain is a paid mutator transaction binding the contract method 0xb8b3b66b.
//
// Solidity: function sendToSubchain(address _tokenContract, string _destination) payable returns()
func (_SubchainRegister *SubchainRegisterTransactor) SendToSubchain(opts *bind.TransactOpts, _tokenContract common.Address, _destination string) (*types.Transaction, error) {
	return _SubchainRegister.contract.Transact(opts, "sendToSubchain", _tokenContract, _destination)
}

// SendToSubchain is a paid mutator transaction binding the contract method 0xb8b3b66b.
//
// Solidity: function sendToSubchain(address _tokenContract, string _destination) payable returns()
func (_SubchainRegister *SubchainRegisterSession) SendToSubchain(_tokenContract common.Address, _destination string) (*types.Transaction, error) {
	return _SubchainRegister.Contract.SendToSubchain(&_SubchainRegister.TransactOpts, _tokenContract, _destination)
}

// SendToSubchain is a paid mutator transaction binding the contract method 0xb8b3b66b.
//
// Solidity: function sendToSubchain(address _tokenContract, string _destination) payable returns()
func (_SubchainRegister *SubchainRegisterTransactorSession) SendToSubchain(_tokenContract common.Address, _destination string) (*types.Transaction, error) {
	return _SubchainRegister.Contract.SendToSubchain(&_SubchainRegister.TransactOpts, _tokenContract, _destination)
}

// UpdateMinCollateralAmount is a paid mutator transaction binding the contract method 0xf6fbe6f0.
//
// Solidity: function updateMinCollateralAmount(uint256 value) returns()
func (_SubchainRegister *SubchainRegisterTransactor) UpdateMinCollateralAmount(opts *bind.TransactOpts, value *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.contract.Transact(opts, "updateMinCollateralAmount", value)
}

// UpdateMinCollateralAmount is a paid mutator transaction binding the contract method 0xf6fbe6f0.
//
// Solidity: function updateMinCollateralAmount(uint256 value) returns()
func (_SubchainRegister *SubchainRegisterSession) UpdateMinCollateralAmount(value *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.Contract.UpdateMinCollateralAmount(&_SubchainRegister.TransactOpts, value)
}

// UpdateMinCollateralAmount is a paid mutator transaction binding the contract method 0xf6fbe6f0.
//
// Solidity: function updateMinCollateralAmount(uint256 value) returns()
func (_SubchainRegister *SubchainRegisterTransactorSession) UpdateMinCollateralAmount(value *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.Contract.UpdateMinCollateralAmount(&_SubchainRegister.TransactOpts, value)
}

// UpdateMinMinNumValidators is a paid mutator transaction binding the contract method 0x6c671b14.
//
// Solidity: function updateMinMinNumValidators(uint256 value) returns()
func (_SubchainRegister *SubchainRegisterTransactor) UpdateMinMinNumValidators(opts *bind.TransactOpts, value *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.contract.Transact(opts, "updateMinMinNumValidators", value)
}

// UpdateMinMinNumValidators is a paid mutator transaction binding the contract method 0x6c671b14.
//
// Solidity: function updateMinMinNumValidators(uint256 value) returns()
func (_SubchainRegister *SubchainRegisterSession) UpdateMinMinNumValidators(value *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.Contract.UpdateMinMinNumValidators(&_SubchainRegister.TransactOpts, value)
}

// UpdateMinMinNumValidators is a paid mutator transaction binding the contract method 0x6c671b14.
//
// Solidity: function updateMinMinNumValidators(uint256 value) returns()
func (_SubchainRegister *SubchainRegisterTransactorSession) UpdateMinMinNumValidators(value *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.Contract.UpdateMinMinNumValidators(&_SubchainRegister.TransactOpts, value)
}

// UpdateMinPersonalCollateralAmount is a paid mutator transaction binding the contract method 0x8289518d.
//
// Solidity: function updateMinPersonalCollateralAmount(uint256 value) returns()
func (_SubchainRegister *SubchainRegisterTransactor) UpdateMinPersonalCollateralAmount(opts *bind.TransactOpts, value *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.contract.Transact(opts, "updateMinPersonalCollateralAmount", value)
}

// UpdateMinPersonalCollateralAmount is a paid mutator transaction binding the contract method 0x8289518d.
//
// Solidity: function updateMinPersonalCollateralAmount(uint256 value) returns()
func (_SubchainRegister *SubchainRegisterSession) UpdateMinPersonalCollateralAmount(value *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.Contract.UpdateMinPersonalCollateralAmount(&_SubchainRegister.TransactOpts, value)
}

// UpdateMinPersonalCollateralAmount is a paid mutator transaction binding the contract method 0x8289518d.
//
// Solidity: function updateMinPersonalCollateralAmount(uint256 value) returns()
func (_SubchainRegister *SubchainRegisterTransactorSession) UpdateMinPersonalCollateralAmount(value *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.Contract.UpdateMinPersonalCollateralAmount(&_SubchainRegister.TransactOpts, value)
}

// WithdrawCollateral is a paid mutator transaction binding the contract method 0x3d3a066f.
//
// Solidity: function withdrawCollateral(address validatorCandidate, uint256 subchainID, uint256 withdrawalAmount) returns()
func (_SubchainRegister *SubchainRegisterTransactor) WithdrawCollateral(opts *bind.TransactOpts, validatorCandidate common.Address, subchainID *big.Int, withdrawalAmount *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.contract.Transact(opts, "withdrawCollateral", validatorCandidate, subchainID, withdrawalAmount)
}

// WithdrawCollateral is a paid mutator transaction binding the contract method 0x3d3a066f.
//
// Solidity: function withdrawCollateral(address validatorCandidate, uint256 subchainID, uint256 withdrawalAmount) returns()
func (_SubchainRegister *SubchainRegisterSession) WithdrawCollateral(validatorCandidate common.Address, subchainID *big.Int, withdrawalAmount *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.Contract.WithdrawCollateral(&_SubchainRegister.TransactOpts, validatorCandidate, subchainID, withdrawalAmount)
}

// WithdrawCollateral is a paid mutator transaction binding the contract method 0x3d3a066f.
//
// Solidity: function withdrawCollateral(address validatorCandidate, uint256 subchainID, uint256 withdrawalAmount) returns()
func (_SubchainRegister *SubchainRegisterTransactorSession) WithdrawCollateral(validatorCandidate common.Address, subchainID *big.Int, withdrawalAmount *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.Contract.WithdrawCollateral(&_SubchainRegister.TransactOpts, validatorCandidate, subchainID, withdrawalAmount)
}

// SubchainRegisterSendToSubchainEventIterator is returned from FilterSendToSubchainEvent and is used to iterate over the raw logs and unpacked data for SendToSubchainEvent events raised by the SubchainRegister contract.
type SubchainRegisterSendToSubchainEventIterator struct {
	Event *SubchainRegisterSendToSubchainEvent // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *SubchainRegisterSendToSubchainEventIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(SubchainRegisterSendToSubchainEvent)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(SubchainRegisterSendToSubchainEvent)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *SubchainRegisterSendToSubchainEventIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *SubchainRegisterSendToSubchainEventIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// SubchainRegisterSendToSubchainEvent represents a SendToSubchainEvent event raised by the SubchainRegister contract.
type SubchainRegisterSendToSubchainEvent struct {
	TokenContract common.Address
	Sender        common.Address
	Destination   string
	Amount        *big.Int
	EventNonce    *big.Int
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterSendToSubchainEvent is a free log retrieval operation binding the contract event 0xfcaf9544852e1f0902dbcf8a118d2ae8235ed282692bbb5dc2aff212e4888a41.
//
// Solidity: event SendToSubchainEvent(address indexed _tokenContract, address indexed _sender, string _destination, uint256 _amount, uint256 _eventNonce)
func (_SubchainRegister *SubchainRegisterFilterer) FilterSendToSubchainEvent(opts *bind.FilterOpts, _tokenContract []common.Address, _sender []common.Address) (*SubchainRegisterSendToSubchainEventIterator, error) {

	var _tokenContractRule []interface{}
	for _, _tokenContractItem := range _tokenContract {
		_tokenContractRule = append(_tokenContractRule, _tokenContractItem)
	}
	var _senderRule []interface{}
	for _, _senderItem := range _sender {
		_senderRule = append(_senderRule, _senderItem)
	}

	logs, sub, err := _SubchainRegister.contract.FilterLogs(opts, "SendToSubchainEvent", _tokenContractRule, _senderRule)
	if err != nil {
		return nil, err
	}
	return &SubchainRegisterSendToSubchainEventIterator{contract: _SubchainRegister.contract, event: "SendToSubchainEvent", logs: logs, sub: sub}, nil
}

// WatchSendToSubchainEvent is a free log subscription operation binding the contract event 0xfcaf9544852e1f0902dbcf8a118d2ae8235ed282692bbb5dc2aff212e4888a41.
//
// Solidity: event SendToSubchainEvent(address indexed _tokenContract, address indexed _sender, string _destination, uint256 _amount, uint256 _eventNonce)
func (_SubchainRegister *SubchainRegisterFilterer) WatchSendToSubchainEvent(opts *bind.WatchOpts, sink chan<- *SubchainRegisterSendToSubchainEvent, _tokenContract []common.Address, _sender []common.Address) (event.Subscription, error) {

	var _tokenContractRule []interface{}
	for _, _tokenContractItem := range _tokenContract {
		_tokenContractRule = append(_tokenContractRule, _tokenContractItem)
	}
	var _senderRule []interface{}
	for _, _senderItem := range _sender {
		_senderRule = append(_senderRule, _senderItem)
	}

	logs, sub, err := _SubchainRegister.contract.WatchLogs(opts, "SendToSubchainEvent", _tokenContractRule, _senderRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(SubchainRegisterSendToSubchainEvent)
				if err := _SubchainRegister.contract.UnpackLog(event, "SendToSubchainEvent", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseSendToSubchainEvent is a log parse operation binding the contract event 0xfcaf9544852e1f0902dbcf8a118d2ae8235ed282692bbb5dc2aff212e4888a41.
//
// Solidity: event SendToSubchainEvent(address indexed _tokenContract, address indexed _sender, string _destination, uint256 _amount, uint256 _eventNonce)
func (_SubchainRegister *SubchainRegisterFilterer) ParseSendToSubchainEvent(log types.Log) (*SubchainRegisterSendToSubchainEvent, error) {
	event := new(SubchainRegisterSendToSubchainEvent)
	if err := _SubchainRegister.contract.UnpackLog(event, "SendToSubchainEvent", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
