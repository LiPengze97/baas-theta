// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contracts

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/thetatoken/thetasubchain/eth"
	"github.com/thetatoken/thetasubchain/eth/abi"
	"github.com/thetatoken/thetasubchain/eth/abi/bind"
	"github.com/thetatoken/thetasubchain/eth/core/types"
	"github.com/thetatoken/thetasubchain/eth/event"

	"github.com/thetatoken/theta/common"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// SubchainValidatorRegistrarSubchainCheckpoint is an auto generated low-level Go binding around an user-defined struct.
type SubchainValidatorRegistrarSubchainCheckpoint struct {
	BlockHeight                    *big.Int
	Amount                         *big.Int
	LegalValidatorCandidateCounter *big.Int
}

// SubchainValidatorRegistrarSubchainRegisterInfo is an auto generated low-level Go binding around an user-defined struct.
type SubchainValidatorRegistrarSubchainRegisterInfo struct {
	SubchainID       *big.Int
	OwnerAddress     common.Address
	RegisterPrice    *big.Int
	ERC20Address     common.Address
	Erc20            common.Address
	GenesisBlockHash string
	State            uint8
}

// SubchainValidatorRegistrarSubchainValidatorCandidateCheckpoint is an auto generated low-level Go binding around an user-defined struct.
type SubchainValidatorRegistrarSubchainValidatorCandidateCheckpoint struct {
	BlockHeight *big.Int
	Amount      *big.Int
}

// SubchainRegisterMetaData contains all meta data concerning the SubchainRegister contract.
var SubchainRegisterMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[],\"name\":\"MAX_CHAIN_ID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"constant\":true},{\"inputs\":[],\"name\":\"MIN_CHAIN_ID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"constant\":true},{\"inputs\":[],\"name\":\"MIN_COLLATERAL_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"constant\":true},{\"inputs\":[],\"name\":\"MIN_NUM_VALIDATORS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"constant\":true},{\"inputs\":[],\"name\":\"MIN_PERSONAL_COLLATERAL_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"constant\":true},{\"inputs\":[],\"name\":\"publisher\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"constant\":true},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"updateMinCollateralAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"updateMinMinNumValidators\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"updateMinPersonalCollateralAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"ERC20Address\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"genesisBlockHash\",\"type\":\"string\"}],\"name\":\"registerSubchainID\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\",\"payable\":true},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"validatorCandidate\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"}],\"name\":\"depositCollateral\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\",\"payable\":true},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"validatorCandidate\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockHeight\",\"type\":\"uint256\"}],\"name\":\"isSubchainActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"constant\":true},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"validatorCandidateAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockHeight\",\"type\":\"uint256\"}],\"name\":\"isSubchainValidatorCandidateActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"constant\":true},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockHeight\",\"type\":\"uint256\"}],\"name\":\"getValidatorSetWithBlockHeight\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"constant\":true},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"}],\"name\":\"getLegalValidators\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"constant\":true},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"validatorCandidate\",\"type\":\"address\"}],\"name\":\"getValidatorCheckpoint\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"blockHeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"structSubchainValidatorRegistrar.SubchainValidatorCandidateCheckpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"constant\":true},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"validatorCandidate\",\"type\":\"address\"}],\"name\":\"getValidatorCheckpointNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"constant\":true},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"}],\"name\":\"getSubchainCheckpoint\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"blockHeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"legalValidatorCandidateCounter\",\"type\":\"uint256\"}],\"internalType\":\"structSubchainValidatorRegistrar.SubchainCheckpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"constant\":true},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"}],\"name\":\"getSubchainInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"ownerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"registerPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"ERC20Address\",\"type\":\"address\"},{\"internalType\":\"contractERC20\",\"name\":\"erc20\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"genesisBlockHash\",\"type\":\"string\"},{\"internalType\":\"enumSubchainValidatorRegistrar.SubchainState\",\"name\":\"state\",\"type\":\"uint8\"}],\"internalType\":\"structSubchainValidatorRegistrar.SubchainRegisterInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"constant\":true},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"subchainTokenAddress\",\"type\":\"address\"}],\"name\":\"getSubchainTokenAtAddresss\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"constant\":true},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromaddress\",\"type\":\"address\"}],\"name\":\"newGetSubchainTokenAtAddresss\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"constant\":true},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"}],\"name\":\"getERCValidator\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"constant\":true}]",
	Bin: "0x608060405260008060006101000a81548160ff0219169083151502179055506127106006556064600755600a60085534801561003a57600080fd5b506140ba8061004a6000396000f3fe6080604052600436106101405760003560e01c80638c72c54e116100b6578063d7b356581161006f578063d7b3565814610468578063dd4d452f146104a5578063e4b912a4146104e2578063ea901d491461051f578063f6fbe6f01461055c578063fc8098641461058557610140565b80638c72c54e14610351578063912d40ad1461037c57806391be4d41146103b95780639c9ec4e5146103e4578063a5d5db0c14610421578063b309bb3b1461043d57610140565b80635adc039e116101085780635adc039e146102505780635bc105c01461027b5780635ce70ecc146102a65780636c671b14146102e35780636da486ec1461030c5780638289518d1461032857610140565b80630df8f62214610145578063377ea4d61461017057806339b913ee146101ad5780633d3a066f146101ea5780634643cac114610213575b600080fd5b34801561015157600080fd5b5061015a6105c2565b6040516101679190613052565b60405180910390f35b34801561017c57600080fd5b50610197600480360381019061019291906130ad565b6105c9565b6040516101a491906131ca565b60405180910390f35b3480156101b957600080fd5b506101d460048036038101906101cf91906131ec565b61067c565b6040516101e19190613247565b60405180910390f35b3480156101f657600080fd5b50610211600480360381019061020c919061328e565b610940565b005b34801561021f57600080fd5b5061023a600480360381019061023591906132e1565b610d0a565b6040516102479190613052565b60405180910390f35b34801561025c57600080fd5b50610265610dc4565b6040516102729190613052565b60405180910390f35b34801561028757600080fd5b50610290610dca565b60405161029d9190613052565b60405180910390f35b3480156102b257600080fd5b506102cd60048036038101906102c891906130ad565b610dd1565b6040516102da9190613372565b60405180910390f35b3480156102ef57600080fd5b5061030a600480360381019061030591906130ad565b610e58565b005b610326600480360381019061032191906134d3565b610ef2565b005b34801561033457600080fd5b5061034f600480360381019061034a91906130ad565b611144565b005b34801561035d57600080fd5b506103666111de565b6040516103739190613551565b60405180910390f35b34801561038857600080fd5b506103a3600480360381019061039e91906132e1565b611204565b6040516103b0919061359b565b60405180910390f35b3480156103c557600080fd5b506103ce6112fc565b6040516103db9190613052565b60405180910390f35b3480156103f057600080fd5b5061040b600480360381019061040691906130ad565b611302565b60405161041891906137b0565b60405180910390f35b61043b600480360381019061043691906137d2565b611512565b005b34801561044957600080fd5b50610452611637565b60405161045f9190613052565b60405180910390f35b34801561047457600080fd5b5061048f600480360381019061048a91906130ad565b61163d565b60405161049c91906131ca565b60405180910390f35b3480156104b157600080fd5b506104cc60048036038101906104c79190613812565b61179b565b6040516104d99190613247565b60405180910390f35b3480156104ee57600080fd5b50610509600480360381019061050491906131ec565b611b3c565b60405161051691906131ca565b60405180910390f35b34801561052b57600080fd5b5061054660048036038101906105419190613865565b611fd3565b6040516105539190613052565b60405180910390f35b34801561056857600080fd5b50610583600480360381019061057e91906130ad565b61205b565b005b34801561059157600080fd5b506105ac60048036038101906105a791906132e1565b6120f5565b6040516105b99190613052565b60405180910390f35b6237159081565b60606011600083815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663473d12ba6040518163ffffffff1660e01b8152600401600060405180830381865afa15801561064c573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610675919061396f565b9050919050565b60004382106106c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b790613a15565b60405180910390fd5b6000600e600085815260200190815260200160002054905060008114156106eb57600091505061093a565b82600d6000868152602001908152602001600020600060018461070e9190613a64565b815260200190815260200160002060000154116107a757600654600d6000868152602001908152602001600020600060018461074a9190613a64565b8152602001908152602001600020600101541015801561079f5750600854600d6000868152602001908152602001600020600060018461078a9190613a64565b81526020019081526020016000206002015410155b91505061093a565b82600d600086815260200190815260200160002060008081526020019081526020016000206000015411156107e057600091505061093a565b6000806001836107f09190613a64565b90505b818111156108d25760006002838361080b9190613a64565b6108159190613ac7565b826108209190613a64565b90506000600d600089815260200190815260200160002060008381526020019081526020016000206040518060600160405290816000820154815260200160018201548152602001600282015481525050905086816000015114156108a75760065481602001511015801561089b5750600854816040015110155b9550505050505061093a565b86816000015110156108bb578193506108cb565b6001826108c89190613a64565b92505b50506107f3565b600654600d6000888152602001908152602001600020600084815260200190815260200160002060010154101580156109345750600854600d600088815260200190815260200160002060008481526020019081526020016000206002015410155b93505050505b92915050565b623715908210158015610956575062373c9f8211155b610995576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098c90613b44565b60405180910390fd5b600033905060008290506000600a600086815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060006009600087815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206040518060400160405290816000820154815260200160018201548152505090508281602001511015610b39576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3090613bb0565b60405180910390fd5b6000610b498260200151856121ea565b90506000600184610b5a9190613bd0565b9050604051806040016040528043815260200183815250600960008a815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020600082015181600001556020820151816001015590505080600a60008a815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508573ffffffffffffffffffffffffffffffffffffffff166108fc869081150290604051600060405180830381858888f19350505050158015610cfe573d6000803e3d6000fd5b50505050505050505050565b60006011600084815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f8b2cb4f836040518263ffffffff1660e01b8152600401610d7b9190613551565b602060405180830381865afa158015610d98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dbc9190613c3b565b905092915050565b60085481565b62373c9f81565b610dd9612e40565b6000600e60008481526020019081526020016000205490506000600d60008581526020019081526020016000206000600184610e159190613a64565b8152602001908152602001600020604051806060016040529081600082015481526020016001820154815260200160028201548152505090508092505050919050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ee8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610edf90613cb4565b60405180910390fd5b8060088190555050565b623715908310158015610f08575062373c9f8311155b610f47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3e90613b44565b60405180910390fd5b6000601160008581526020019081526020016000206000015414610fa0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9790613d20565b60405180910390fd5b826011600085815260200190815260200160002060000181905550336011600085815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016011600085815260200190815260200160002060060160006101000a81548160ff0219169083600381111561104a5761104961369d565b5b0217905550346011600085815260200190815260200160002060020181905550816011600085815260200190815260200160002060030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816011600085815260200190815260200160002060040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060116000858152602001908152602001600020600501908051906020019061113e929190612e61565b50505050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146111d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111cb90613cb4565b60405180910390fd5b8060078190555050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61120c612ee7565b6000600c600085815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600b600086815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001846112c29190613a64565b8152602001908152602001600020604051806040016040529081600082015481526020016001820154815250509050809250505092915050565b60065481565b61130a612f01565b601160008381526020019081526020016000206040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201805461144e90613d6f565b80601f016020809104026020016040519081016040528092919081815260200182805461147a90613d6f565b80156114c75780601f1061149c576101008083540402835291602001916114c7565b820191906000526020600020905b8154815290600101906020018083116114aa57829003601f168201915b505050505081526020016006820160009054906101000a900460ff1660038111156114f5576114f461369d565b5b60038111156115075761150661369d565b5b815250509050919050565b623715908110158015611528575062373c9f8111155b611567576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161155e90613b44565b60405180910390fd5b6000601160008381526020019081526020016000206000015414156115c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115b890613ded565b60405180910390fd5b600754341015611606576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115fd90613e59565b60405180910390fd5b6000339050600034905061161c84848385612234565b611627848483612510565b6116318382612953565b50505050565b60075481565b606060006011600084815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff1663473d12ba6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156116c7573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906116f0919061396f565b905060006012600086815260200190815260200160002073__IterableMapping_______________________63b3d15a3e90916040518263ffffffff1660e01b815260040161173f9190613e80565b600060405180830381865af415801561175c573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190611785919061396f565b90506117918282612aea565b9350505050919050565b60004382106117df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117d690613a15565b60405180910390fd5b6000600c600086815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811415611847576000915050611b35565b82600b600087815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001846118a79190613a64565b8152602001908152602001600020600001541161193c57600754600b600087815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001846119209190613a64565b8152602001908152602001600020600101541015915050611b35565b82600b600087815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008081526020019081526020016000206000015411156119b2576000915050611b35565b6000806001836119c29190613a64565b90505b81811115611ac5576000600283836119dd9190613a64565b6119e79190613ac7565b826119f29190613a64565b90506000600b60008a815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206040518060400160405290816000820154815260200160018201548152505090508681600001511415611a9a576007548160200151101595505050505050611b35565b8681600001511015611aae57819350611abe565b600182611abb9190613a64565b92505b50506119c5565b600754600b600089815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060010154101593505050505b9392505050565b6060438210611b80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b7790613a15565b60405180910390fd5b60006011600085815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff16639864acc2856040518263ffffffff1660e01b8152600401611bf69190613052565b600060405180830381865afa158015611c13573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190611c3c919061396f565b905060006010600087815260200190815260200160002054905060606000821415611c6d5780945050505050611fcd565b85600f60008981526020019081526020016000206000600185611c909190613a64565b81526020019081526020016000206000015411611d7357611d6883600f60008a81526020019081526020016000206000600186611ccd9190613a64565b8152602001908152602001600020600101805480602002602001604051908101604052809291908181526020018280548015611d5e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611d14575b5050505050612aea565b945050505050611fcd565b85600f60008981526020019081526020016000206000808152602001908152602001600020600001541115611dae5780945050505050611fcd565b600080600184611dbe9190613a64565b90505b81811115611f0f57600060028383611dd99190613a64565b611de39190613ac7565b82611dee9190613a64565b90506000600f60008c815260200190815260200160002060008381526020019081526020016000206040518060400160405290816000820154815260200160018201805480602002602001604051908101604052809291908181526020018280548015611eb057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611e66575b50505050508152505090508981600001511415611ee457611ed5878260200151612aea565b98505050505050505050611fcd565b8981600001511015611ef857819350611f08565b600182611f059190613a64565b92505b5050611dc1565b611fc485600f60008c81526020019081526020016000206000858152602001908152602001600020600101805480602002602001604051908101604052809291908181526020018280548015611fba57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611f70575b5050505050612aea565b96505050505050505b92915050565b6000808290508073ffffffffffffffffffffffffffffffffffffffff1663f8b2cb4f336040518263ffffffff1660e01b81526004016120129190613551565b602060405180830381865afa15801561202f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120539190613c3b565b915050919050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146120eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120e290613cb4565b60405180910390fd5b8060068190555050565b600080600c600085815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600b600086815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001846121ac9190613a64565b815260200190815260200160002060405180604001604052908160008201548152602001600182015481525050905080602001519250505092915050565b600061222c83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612cd0565b905092915050565b6000600a600085815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060006009600086815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206040518060400160405290816000820154815260200160018201548152505090506000612397826020015186612d34565b905060006001846123a89190613bd0565b90506040518060400160405280438152602001838152506009600089815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868152602001908152602001600020600082015181600001556020820151816001015590505080600a600089815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050505050505050565b6000600c600084815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600b600085815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060405180604001604052908160008201548152602001600182015481525050905060006125f9826020015185612d34565b905060006012600087815260200190815260200160002073__IterableMapping_______________________63732a2ccf9091896040518363ffffffff1660e01b815260040161264a929190613eaa565b602060405180830381865af4158015612667573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061268b9190613c3b565b14801561269a57506007548110155b15612857576012600086815260200190815260200160002073__IterableMapping_______________________63bc2b405c90918860016040518463ffffffff1660e01b81526004016126ef93929190613f0e565b60006040518083038186803b15801561270757600080fd5b505af415801561271b573d6000803e3d6000fd5b5050505060006010600087815260200190815260200160002054905060405180604001604052804381526020016012600089815260200190815260200160002073__IterableMapping_______________________63b3d15a3e90916040518263ffffffff1660e01b81526004016127939190613e80565b600060405180830381865af41580156127b0573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906127d9919061396f565b815250600f60008881526020019081526020016000206000838152602001908152602001600020600082015181600001556020820151816001019080519060200190612826929190612f92565b50905050600160106000888152602001908152602001600020600082825461284e9190613bd0565b92505081905550505b60006001846128669190613bd0565b9050604051806040016040528043815260200183815250600b600088815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868152602001908152602001600020600082015181600001556020820151816001015590505080600c600088815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505050505050565b6000600e60008481526020019081526020016000205490506000600d600085815260200190815260200160002060008381526020019081526020016000206040518060600160405290816000820154815260200160018201548152602001600282015481525050905060006129cc826020015185612d34565b905060006001846129dd9190613bd0565b905060405180606001604052804381526020018381526020016012600089815260200190815260200160002073__IterableMapping_______________________63deb3d89690916040518263ffffffff1660e01b8152600401612a419190613e80565b602060405180830381865af4158015612a5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a829190613c3b565b815250600d6000888152602001908152602001600020600086815260200190815260200160002060008201518160000155602082015181600101556040820151816002015590505080600e600088815260200190815260200160002081905550505050505050565b606060008351905060008167ffffffffffffffff811115612b0e57612b0d6133a8565b5b604051908082528060200260200182016040528015612b3c5781602001602082028036833780820191505090505b5090506000805b83811015612bbd57612b6f86888381518110612b6257612b61613f45565b5b6020026020010151612d92565b15612baa576001838281518110612b8957612b88613f45565b5b6020026020010190151590811515815250508180612ba690613f74565b9250505b8080612bb590613f74565b915050612b43565b5060008167ffffffffffffffff811115612bda57612bd96133a8565b5b604051908082528060200260200182016040528015612c085781602001602082028036833780820191505090505b5090506000805b85811015612cc157848181518110612c2a57612c29613f45565b5b602002602001015115612cae57888181518110612c4a57612c49613f45565b5b6020026020010151838381518110612c6557612c64613f45565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508180612caa90613f74565b9250505b8080612cb990613f74565b915050612c0f565b50819550505050505092915050565b6000838311158290612d18576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d0f9190613ff6565b60405180910390fd5b5060008385612d279190613a64565b9050809150509392505050565b6000808284612d439190613bd0565b905083811015612d88576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d7f90614064565b60405180910390fd5b8091505092915050565b600080612d9f8484612dac565b9150508091505092915050565b60008060008451905060005b81811015612e2f578473ffffffffffffffffffffffffffffffffffffffff16868281518110612dea57612de9613f45565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff161415612e1c57806001935093505050612e39565b8080612e2790613f74565b915050612db8565b5060008092509250505b9250929050565b60405180606001604052806000815260200160008152602001600081525090565b828054612e6d90613d6f565b90600052602060002090601f016020900481019282612e8f5760008555612ed6565b82601f10612ea857805160ff1916838001178555612ed6565b82800160010185558215612ed6579182015b82811115612ed5578251825591602001919060010190612eba565b5b509050612ee3919061301c565b5090565b604051806040016040528060008152602001600081525090565b6040518060e0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160006003811115612f8c57612f8b61369d565b5b81525090565b82805482825590600052602060002090810192821561300b579160200282015b8281111561300a5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190612fb2565b5b509050613018919061301c565b5090565b5b8082111561303557600081600090555060010161301d565b5090565b6000819050919050565b61304c81613039565b82525050565b60006020820190506130676000830184613043565b92915050565b6000604051905090565b600080fd5b600080fd5b61308a81613039565b811461309557600080fd5b50565b6000813590506130a781613081565b92915050565b6000602082840312156130c3576130c2613077565b5b60006130d184828501613098565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061313182613106565b9050919050565b61314181613126565b82525050565b60006131538383613138565b60208301905092915050565b6000602082019050919050565b6000613177826130da565b61318181856130e5565b935061318c836130f6565b8060005b838110156131bd5781516131a48882613147565b97506131af8361315f565b925050600181019050613190565b5085935050505092915050565b600060208201905081810360008301526131e4818461316c565b905092915050565b6000806040838503121561320357613202613077565b5b600061321185828601613098565b925050602061322285828601613098565b9150509250929050565b60008115159050919050565b6132418161322c565b82525050565b600060208201905061325c6000830184613238565b92915050565b61326b81613126565b811461327657600080fd5b50565b60008135905061328881613262565b92915050565b6000806000606084860312156132a7576132a6613077565b5b60006132b586828701613279565b93505060206132c686828701613098565b92505060406132d786828701613098565b9150509250925092565b600080604083850312156132f8576132f7613077565b5b600061330685828601613098565b925050602061331785828601613279565b9150509250929050565b61332a81613039565b82525050565b6060820160008201516133466000850182613321565b5060208201516133596020850182613321565b50604082015161336c6040850182613321565b50505050565b60006060820190506133876000830184613330565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6133e082613397565b810181811067ffffffffffffffff821117156133ff576133fe6133a8565b5b80604052505050565b600061341261306d565b905061341e82826133d7565b919050565b600067ffffffffffffffff82111561343e5761343d6133a8565b5b61344782613397565b9050602081019050919050565b82818337600083830152505050565b600061347661347184613423565b613408565b90508281526020810184848401111561349257613491613392565b5b61349d848285613454565b509392505050565b600082601f8301126134ba576134b961338d565b5b81356134ca848260208601613463565b91505092915050565b6000806000606084860312156134ec576134eb613077565b5b60006134fa86828701613098565b935050602061350b86828701613279565b925050604084013567ffffffffffffffff81111561352c5761352b61307c565b5b613538868287016134a5565b9150509250925092565b61354b81613126565b82525050565b60006020820190506135666000830184613542565b92915050565b6040820160008201516135826000850182613321565b5060208201516135956020850182613321565b50505050565b60006040820190506135b0600083018461356c565b92915050565b6000819050919050565b60006135db6135d66135d184613106565b6135b6565b613106565b9050919050565b60006135ed826135c0565b9050919050565b60006135ff826135e2565b9050919050565b61360f816135f4565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561364f578082015181840152602081019050613634565b8381111561365e576000848401525b50505050565b600061366f82613615565b6136798185613620565b9350613689818560208601613631565b61369281613397565b840191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600481106136dd576136dc61369d565b5b50565b60008190506136ee826136cc565b919050565b60006136fe826136e0565b9050919050565b61370e816136f3565b82525050565b600060e08301600083015161372c6000860182613321565b50602083015161373f6020860182613138565b5060408301516137526040860182613321565b5060608301516137656060860182613138565b5060808301516137786080860182613606565b5060a083015184820360a08601526137908282613664565b91505060c08301516137a560c0860182613705565b508091505092915050565b600060208201905081810360008301526137ca8184613714565b905092915050565b600080604083850312156137e9576137e8613077565b5b60006137f785828601613279565b925050602061380885828601613098565b9150509250929050565b60008060006060848603121561382b5761382a613077565b5b600061383986828701613098565b935050602061384a86828701613279565b925050604061385b86828701613098565b9150509250925092565b60006020828403121561387b5761387a613077565b5b600061388984828501613279565b91505092915050565b600067ffffffffffffffff8211156138ad576138ac6133a8565b5b602082029050602081019050919050565b600080fd5b6000815190506138d281613262565b92915050565b60006138eb6138e684613892565b613408565b9050808382526020820190506020840283018581111561390e5761390d6138be565b5b835b81811015613937578061392388826138c3565b845260208401935050602081019050613910565b5050509392505050565b600082601f8301126139565761395561338d565b5b81516139668482602086016138d8565b91505092915050565b60006020828403121561398557613984613077565b5b600082015167ffffffffffffffff8111156139a3576139a261307c565b5b6139af84828501613941565b91505092915050565b600082825260208201905092915050565b7f7468697320626c6f636b206973206e6f74207965742064657465726d696e6564600082015250565b60006139ff6020836139b8565b9150613a0a826139c9565b602082019050919050565b60006020820190508181036000830152613a2e816139f2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613a6f82613039565b9150613a7a83613039565b925082821015613a8d57613a8c613a35565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000613ad282613039565b9150613add83613039565b925082613aed57613aec613a98565b5b828204905092915050565b7f496e76616c696420737562636861696e20494400000000000000000000000000600082015250565b6000613b2e6013836139b8565b9150613b3982613af8565b602082019050919050565b60006020820190508181036000830152613b5d81613b21565b9050919050565b7f5769746864726177616c20616d6f756e7420746f6f206c617267650000000000600082015250565b6000613b9a601b836139b8565b9150613ba582613b64565b602082019050919050565b60006020820190508181036000830152613bc981613b8d565b9050919050565b6000613bdb82613039565b9150613be683613039565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613c1b57613c1a613a35565b5b828201905092915050565b600081519050613c3581613081565b92915050565b600060208284031215613c5157613c50613077565b5b6000613c5f84828501613c26565b91505092915050565b7f4f6e6c79207075626c69736865722063616e2063616c6c20746869732e000000600082015250565b6000613c9e601d836139b8565b9150613ca982613c68565b602082019050919050565b60006020820190508181036000830152613ccd81613c91565b9050919050565b7f537562636861696e20494420686173206265656e207265676973746572656421600082015250565b6000613d0a6020836139b8565b9150613d1582613cd4565b602082019050919050565b60006020820190508181036000830152613d3981613cfd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680613d8757607f821691505b60208210811415613d9b57613d9a613d40565b5b50919050565b7f537562636861696e206973206e6f742072656769737465726564000000000000600082015250565b6000613dd7601a836139b8565b9150613de282613da1565b602082019050919050565b60006020820190508181036000830152613e0681613dca565b9050919050565b7f546f6f206c65737320636f6c6c61746572616c20616d6f756e74000000000000600082015250565b6000613e43601a836139b8565b9150613e4e82613e0d565b602082019050919050565b60006020820190508181036000830152613e7281613e36565b9050919050565b8082525050565b6000602082019050613e956000830184613e79565b92915050565b613ea481613126565b82525050565b6000604082019050613ebf6000830185613e79565b613ecc6020830184613e9b565b9392505050565b6000819050919050565b6000613ef8613ef3613eee84613ed3565b6135b6565b613039565b9050919050565b613f0881613edd565b82525050565b6000606082019050613f236000830186613e79565b613f306020830185613e9b565b613f3d6040830184613eff565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000613f7f82613039565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415613fb257613fb1613a35565b5b600182019050919050565b6000613fc882613615565b613fd281856139b8565b9350613fe2818560208601613631565b613feb81613397565b840191505092915050565b600060208201905081810360008301526140108184613fbd565b905092915050565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b600061404e601b836139b8565b915061405982614018565b602082019050919050565b6000602082019050818103600083015261407d81614041565b905091905056fea264697066735822122073f3231c3a830dc8faf46cd3ff64331fdb4d1c3461814c1252a49adac32a2f2c64736f6c634300080c0033",
}

// SubchainRegisterABI is the input ABI used to generate the binding from.
// Deprecated: Use SubchainRegisterMetaData.ABI instead.
var SubchainRegisterABI = SubchainRegisterMetaData.ABI

// SubchainRegisterBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use SubchainRegisterMetaData.Bin instead.
var SubchainRegisterBin = SubchainRegisterMetaData.Bin

// DeploySubchainRegister deploys a new Ethereum contract, binding an instance of SubchainRegister to it.
func DeploySubchainRegister(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *SubchainRegister, error) {
	parsed, err := SubchainRegisterMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(SubchainRegisterBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &SubchainRegister{SubchainRegisterCaller: SubchainRegisterCaller{contract: contract}, SubchainRegisterTransactor: SubchainRegisterTransactor{contract: contract}, SubchainRegisterFilterer: SubchainRegisterFilterer{contract: contract}}, nil
}

// SubchainRegister is an auto generated Go binding around an Ethereum contract.
type SubchainRegister struct {
	SubchainRegisterCaller     // Read-only binding to the contract
	SubchainRegisterTransactor // Write-only binding to the contract
	SubchainRegisterFilterer   // Log filterer for contract events
}

// SubchainRegisterCaller is an auto generated read-only Go binding around an Ethereum contract.
type SubchainRegisterCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SubchainRegisterTransactor is an auto generated write-only Go binding around an Ethereum contract.
type SubchainRegisterTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SubchainRegisterFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type SubchainRegisterFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SubchainRegisterSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type SubchainRegisterSession struct {
	Contract     *SubchainRegister // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// SubchainRegisterCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type SubchainRegisterCallerSession struct {
	Contract *SubchainRegisterCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts           // Call options to use throughout this session
}

// SubchainRegisterTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type SubchainRegisterTransactorSession struct {
	Contract     *SubchainRegisterTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts           // Transaction auth options to use throughout this session
}

// SubchainRegisterRaw is an auto generated low-level Go binding around an Ethereum contract.
type SubchainRegisterRaw struct {
	Contract *SubchainRegister // Generic contract binding to access the raw methods on
}

// SubchainRegisterCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type SubchainRegisterCallerRaw struct {
	Contract *SubchainRegisterCaller // Generic read-only contract binding to access the raw methods on
}

// SubchainRegisterTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type SubchainRegisterTransactorRaw struct {
	Contract *SubchainRegisterTransactor // Generic write-only contract binding to access the raw methods on
}

// NewSubchainRegister creates a new instance of SubchainRegister, bound to a specific deployed contract.
func NewSubchainRegister(address common.Address, backend bind.ContractBackend) (*SubchainRegister, error) {
	contract, err := bindSubchainRegister(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &SubchainRegister{SubchainRegisterCaller: SubchainRegisterCaller{contract: contract}, SubchainRegisterTransactor: SubchainRegisterTransactor{contract: contract}, SubchainRegisterFilterer: SubchainRegisterFilterer{contract: contract}}, nil
}

// NewSubchainRegisterCaller creates a new read-only instance of SubchainRegister, bound to a specific deployed contract.
func NewSubchainRegisterCaller(address common.Address, caller bind.ContractCaller) (*SubchainRegisterCaller, error) {
	contract, err := bindSubchainRegister(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &SubchainRegisterCaller{contract: contract}, nil
}

// NewSubchainRegisterTransactor creates a new write-only instance of SubchainRegister, bound to a specific deployed contract.
func NewSubchainRegisterTransactor(address common.Address, transactor bind.ContractTransactor) (*SubchainRegisterTransactor, error) {
	contract, err := bindSubchainRegister(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &SubchainRegisterTransactor{contract: contract}, nil
}

// NewSubchainRegisterFilterer creates a new log filterer instance of SubchainRegister, bound to a specific deployed contract.
func NewSubchainRegisterFilterer(address common.Address, filterer bind.ContractFilterer) (*SubchainRegisterFilterer, error) {
	contract, err := bindSubchainRegister(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &SubchainRegisterFilterer{contract: contract}, nil
}

// bindSubchainRegister binds a generic wrapper to an already deployed contract.
func bindSubchainRegister(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(SubchainRegisterABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_SubchainRegister *SubchainRegisterRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _SubchainRegister.Contract.SubchainRegisterCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_SubchainRegister *SubchainRegisterRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _SubchainRegister.Contract.SubchainRegisterTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_SubchainRegister *SubchainRegisterRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _SubchainRegister.Contract.SubchainRegisterTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_SubchainRegister *SubchainRegisterCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _SubchainRegister.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_SubchainRegister *SubchainRegisterTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _SubchainRegister.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_SubchainRegister *SubchainRegisterTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _SubchainRegister.Contract.contract.Transact(opts, method, params...)
}

// MAXCHAINID is a free data retrieval call binding the contract method 0x5bc105c0.
//
// Solidity: function MAX_CHAIN_ID() view returns(uint256)
func (_SubchainRegister *SubchainRegisterCaller) MAXCHAINID(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "MAX_CHAIN_ID")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MAXCHAINID is a free data retrieval call binding the contract method 0x5bc105c0.
//
// Solidity: function MAX_CHAIN_ID() view returns(uint256)
func (_SubchainRegister *SubchainRegisterSession) MAXCHAINID() (*big.Int, error) {
	return _SubchainRegister.Contract.MAXCHAINID(&_SubchainRegister.CallOpts)
}

// MAXCHAINID is a free data retrieval call binding the contract method 0x5bc105c0.
//
// Solidity: function MAX_CHAIN_ID() view returns(uint256)
func (_SubchainRegister *SubchainRegisterCallerSession) MAXCHAINID() (*big.Int, error) {
	return _SubchainRegister.Contract.MAXCHAINID(&_SubchainRegister.CallOpts)
}

// MINCHAINID is a free data retrieval call binding the contract method 0x0df8f622.
//
// Solidity: function MIN_CHAIN_ID() view returns(uint256)
func (_SubchainRegister *SubchainRegisterCaller) MINCHAINID(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "MIN_CHAIN_ID")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MINCHAINID is a free data retrieval call binding the contract method 0x0df8f622.
//
// Solidity: function MIN_CHAIN_ID() view returns(uint256)
func (_SubchainRegister *SubchainRegisterSession) MINCHAINID() (*big.Int, error) {
	return _SubchainRegister.Contract.MINCHAINID(&_SubchainRegister.CallOpts)
}

// MINCHAINID is a free data retrieval call binding the contract method 0x0df8f622.
//
// Solidity: function MIN_CHAIN_ID() view returns(uint256)
func (_SubchainRegister *SubchainRegisterCallerSession) MINCHAINID() (*big.Int, error) {
	return _SubchainRegister.Contract.MINCHAINID(&_SubchainRegister.CallOpts)
}

// MINCOLLATERALAMOUNT is a free data retrieval call binding the contract method 0x91be4d41.
//
// Solidity: function MIN_COLLATERAL_AMOUNT() view returns(uint256)
func (_SubchainRegister *SubchainRegisterCaller) MINCOLLATERALAMOUNT(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "MIN_COLLATERAL_AMOUNT")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MINCOLLATERALAMOUNT is a free data retrieval call binding the contract method 0x91be4d41.
//
// Solidity: function MIN_COLLATERAL_AMOUNT() view returns(uint256)
func (_SubchainRegister *SubchainRegisterSession) MINCOLLATERALAMOUNT() (*big.Int, error) {
	return _SubchainRegister.Contract.MINCOLLATERALAMOUNT(&_SubchainRegister.CallOpts)
}

// MINCOLLATERALAMOUNT is a free data retrieval call binding the contract method 0x91be4d41.
//
// Solidity: function MIN_COLLATERAL_AMOUNT() view returns(uint256)
func (_SubchainRegister *SubchainRegisterCallerSession) MINCOLLATERALAMOUNT() (*big.Int, error) {
	return _SubchainRegister.Contract.MINCOLLATERALAMOUNT(&_SubchainRegister.CallOpts)
}

// MINNUMVALIDATORS is a free data retrieval call binding the contract method 0x5adc039e.
//
// Solidity: function MIN_NUM_VALIDATORS() view returns(uint256)
func (_SubchainRegister *SubchainRegisterCaller) MINNUMVALIDATORS(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "MIN_NUM_VALIDATORS")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MINNUMVALIDATORS is a free data retrieval call binding the contract method 0x5adc039e.
//
// Solidity: function MIN_NUM_VALIDATORS() view returns(uint256)
func (_SubchainRegister *SubchainRegisterSession) MINNUMVALIDATORS() (*big.Int, error) {
	return _SubchainRegister.Contract.MINNUMVALIDATORS(&_SubchainRegister.CallOpts)
}

// MINNUMVALIDATORS is a free data retrieval call binding the contract method 0x5adc039e.
//
// Solidity: function MIN_NUM_VALIDATORS() view returns(uint256)
func (_SubchainRegister *SubchainRegisterCallerSession) MINNUMVALIDATORS() (*big.Int, error) {
	return _SubchainRegister.Contract.MINNUMVALIDATORS(&_SubchainRegister.CallOpts)
}

// MINPERSONALCOLLATERALAMOUNT is a free data retrieval call binding the contract method 0xb309bb3b.
//
// Solidity: function MIN_PERSONAL_COLLATERAL_AMOUNT() view returns(uint256)
func (_SubchainRegister *SubchainRegisterCaller) MINPERSONALCOLLATERALAMOUNT(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "MIN_PERSONAL_COLLATERAL_AMOUNT")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MINPERSONALCOLLATERALAMOUNT is a free data retrieval call binding the contract method 0xb309bb3b.
//
// Solidity: function MIN_PERSONAL_COLLATERAL_AMOUNT() view returns(uint256)
func (_SubchainRegister *SubchainRegisterSession) MINPERSONALCOLLATERALAMOUNT() (*big.Int, error) {
	return _SubchainRegister.Contract.MINPERSONALCOLLATERALAMOUNT(&_SubchainRegister.CallOpts)
}

// MINPERSONALCOLLATERALAMOUNT is a free data retrieval call binding the contract method 0xb309bb3b.
//
// Solidity: function MIN_PERSONAL_COLLATERAL_AMOUNT() view returns(uint256)
func (_SubchainRegister *SubchainRegisterCallerSession) MINPERSONALCOLLATERALAMOUNT() (*big.Int, error) {
	return _SubchainRegister.Contract.MINPERSONALCOLLATERALAMOUNT(&_SubchainRegister.CallOpts)
}

// GetERCValidator is a free data retrieval call binding the contract method 0x377ea4d6.
//
// Solidity: function getERCValidator(uint256 subchainID) view returns(address[])
func (_SubchainRegister *SubchainRegisterCaller) GetERCValidator(opts *bind.CallOpts, subchainID *big.Int) ([]common.Address, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "getERCValidator", subchainID)

	if err != nil {
		return *new([]common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)

	return out0, err

}

// GetERCValidator is a free data retrieval call binding the contract method 0x377ea4d6.
//
// Solidity: function getERCValidator(uint256 subchainID) view returns(address[])
func (_SubchainRegister *SubchainRegisterSession) GetERCValidator(subchainID *big.Int) ([]common.Address, error) {
	return _SubchainRegister.Contract.GetERCValidator(&_SubchainRegister.CallOpts, subchainID)
}

// GetERCValidator is a free data retrieval call binding the contract method 0x377ea4d6.
//
// Solidity: function getERCValidator(uint256 subchainID) view returns(address[])
func (_SubchainRegister *SubchainRegisterCallerSession) GetERCValidator(subchainID *big.Int) ([]common.Address, error) {
	return _SubchainRegister.Contract.GetERCValidator(&_SubchainRegister.CallOpts, subchainID)
}

// GetLegalValidators is a free data retrieval call binding the contract method 0xd7b35658.
//
// Solidity: function getLegalValidators(uint256 subchainID) view returns(address[])
func (_SubchainRegister *SubchainRegisterCaller) GetLegalValidators(opts *bind.CallOpts, subchainID *big.Int) ([]common.Address, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "getLegalValidators", subchainID)

	if err != nil {
		return *new([]common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)

	return out0, err

}

// GetLegalValidators is a free data retrieval call binding the contract method 0xd7b35658.
//
// Solidity: function getLegalValidators(uint256 subchainID) view returns(address[])
func (_SubchainRegister *SubchainRegisterSession) GetLegalValidators(subchainID *big.Int) ([]common.Address, error) {
	return _SubchainRegister.Contract.GetLegalValidators(&_SubchainRegister.CallOpts, subchainID)
}

// GetLegalValidators is a free data retrieval call binding the contract method 0xd7b35658.
//
// Solidity: function getLegalValidators(uint256 subchainID) view returns(address[])
func (_SubchainRegister *SubchainRegisterCallerSession) GetLegalValidators(subchainID *big.Int) ([]common.Address, error) {
	return _SubchainRegister.Contract.GetLegalValidators(&_SubchainRegister.CallOpts, subchainID)
}

// GetSubchainCheckpoint is a free data retrieval call binding the contract method 0x5ce70ecc.
//
// Solidity: function getSubchainCheckpoint(uint256 subchainID) view returns((uint256,uint256,uint256))
func (_SubchainRegister *SubchainRegisterCaller) GetSubchainCheckpoint(opts *bind.CallOpts, subchainID *big.Int) (SubchainValidatorRegistrarSubchainCheckpoint, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "getSubchainCheckpoint", subchainID)

	if err != nil {
		return *new(SubchainValidatorRegistrarSubchainCheckpoint), err
	}

	out0 := *abi.ConvertType(out[0], new(SubchainValidatorRegistrarSubchainCheckpoint)).(*SubchainValidatorRegistrarSubchainCheckpoint)

	return out0, err

}

// GetSubchainCheckpoint is a free data retrieval call binding the contract method 0x5ce70ecc.
//
// Solidity: function getSubchainCheckpoint(uint256 subchainID) view returns((uint256,uint256,uint256))
func (_SubchainRegister *SubchainRegisterSession) GetSubchainCheckpoint(subchainID *big.Int) (SubchainValidatorRegistrarSubchainCheckpoint, error) {
	return _SubchainRegister.Contract.GetSubchainCheckpoint(&_SubchainRegister.CallOpts, subchainID)
}

// GetSubchainCheckpoint is a free data retrieval call binding the contract method 0x5ce70ecc.
//
// Solidity: function getSubchainCheckpoint(uint256 subchainID) view returns((uint256,uint256,uint256))
func (_SubchainRegister *SubchainRegisterCallerSession) GetSubchainCheckpoint(subchainID *big.Int) (SubchainValidatorRegistrarSubchainCheckpoint, error) {
	return _SubchainRegister.Contract.GetSubchainCheckpoint(&_SubchainRegister.CallOpts, subchainID)
}

// GetSubchainInfo is a free data retrieval call binding the contract method 0x9c9ec4e5.
//
// Solidity: function getSubchainInfo(uint256 subchainID) view returns((uint256,address,uint256,address,address,string,uint8))
func (_SubchainRegister *SubchainRegisterCaller) GetSubchainInfo(opts *bind.CallOpts, subchainID *big.Int) (SubchainValidatorRegistrarSubchainRegisterInfo, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "getSubchainInfo", subchainID)

	if err != nil {
		return *new(SubchainValidatorRegistrarSubchainRegisterInfo), err
	}

	out0 := *abi.ConvertType(out[0], new(SubchainValidatorRegistrarSubchainRegisterInfo)).(*SubchainValidatorRegistrarSubchainRegisterInfo)

	return out0, err

}

// GetSubchainInfo is a free data retrieval call binding the contract method 0x9c9ec4e5.
//
// Solidity: function getSubchainInfo(uint256 subchainID) view returns((uint256,address,uint256,address,address,string,uint8))
func (_SubchainRegister *SubchainRegisterSession) GetSubchainInfo(subchainID *big.Int) (SubchainValidatorRegistrarSubchainRegisterInfo, error) {
	return _SubchainRegister.Contract.GetSubchainInfo(&_SubchainRegister.CallOpts, subchainID)
}

// GetSubchainInfo is a free data retrieval call binding the contract method 0x9c9ec4e5.
//
// Solidity: function getSubchainInfo(uint256 subchainID) view returns((uint256,address,uint256,address,address,string,uint8))
func (_SubchainRegister *SubchainRegisterCallerSession) GetSubchainInfo(subchainID *big.Int) (SubchainValidatorRegistrarSubchainRegisterInfo, error) {
	return _SubchainRegister.Contract.GetSubchainInfo(&_SubchainRegister.CallOpts, subchainID)
}

// GetSubchainTokenAtAddresss is a free data retrieval call binding the contract method 0xea901d49.
//
// Solidity: function getSubchainTokenAtAddresss(address subchainTokenAddress) view returns(uint256)
func (_SubchainRegister *SubchainRegisterCaller) GetSubchainTokenAtAddresss(opts *bind.CallOpts, subchainTokenAddress common.Address) (*big.Int, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "getSubchainTokenAtAddresss", subchainTokenAddress)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetSubchainTokenAtAddresss is a free data retrieval call binding the contract method 0xea901d49.
//
// Solidity: function getSubchainTokenAtAddresss(address subchainTokenAddress) view returns(uint256)
func (_SubchainRegister *SubchainRegisterSession) GetSubchainTokenAtAddresss(subchainTokenAddress common.Address) (*big.Int, error) {
	return _SubchainRegister.Contract.GetSubchainTokenAtAddresss(&_SubchainRegister.CallOpts, subchainTokenAddress)
}

// GetSubchainTokenAtAddresss is a free data retrieval call binding the contract method 0xea901d49.
//
// Solidity: function getSubchainTokenAtAddresss(address subchainTokenAddress) view returns(uint256)
func (_SubchainRegister *SubchainRegisterCallerSession) GetSubchainTokenAtAddresss(subchainTokenAddress common.Address) (*big.Int, error) {
	return _SubchainRegister.Contract.GetSubchainTokenAtAddresss(&_SubchainRegister.CallOpts, subchainTokenAddress)
}

// GetValidatorCheckpoint is a free data retrieval call binding the contract method 0x912d40ad.
//
// Solidity: function getValidatorCheckpoint(uint256 subchainID, address validatorCandidate) view returns((uint256,uint256))
func (_SubchainRegister *SubchainRegisterCaller) GetValidatorCheckpoint(opts *bind.CallOpts, subchainID *big.Int, validatorCandidate common.Address) (SubchainValidatorRegistrarSubchainValidatorCandidateCheckpoint, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "getValidatorCheckpoint", subchainID, validatorCandidate)

	if err != nil {
		return *new(SubchainValidatorRegistrarSubchainValidatorCandidateCheckpoint), err
	}

	out0 := *abi.ConvertType(out[0], new(SubchainValidatorRegistrarSubchainValidatorCandidateCheckpoint)).(*SubchainValidatorRegistrarSubchainValidatorCandidateCheckpoint)

	return out0, err

}

// GetValidatorCheckpoint is a free data retrieval call binding the contract method 0x912d40ad.
//
// Solidity: function getValidatorCheckpoint(uint256 subchainID, address validatorCandidate) view returns((uint256,uint256))
func (_SubchainRegister *SubchainRegisterSession) GetValidatorCheckpoint(subchainID *big.Int, validatorCandidate common.Address) (SubchainValidatorRegistrarSubchainValidatorCandidateCheckpoint, error) {
	return _SubchainRegister.Contract.GetValidatorCheckpoint(&_SubchainRegister.CallOpts, subchainID, validatorCandidate)
}

// GetValidatorCheckpoint is a free data retrieval call binding the contract method 0x912d40ad.
//
// Solidity: function getValidatorCheckpoint(uint256 subchainID, address validatorCandidate) view returns((uint256,uint256))
func (_SubchainRegister *SubchainRegisterCallerSession) GetValidatorCheckpoint(subchainID *big.Int, validatorCandidate common.Address) (SubchainValidatorRegistrarSubchainValidatorCandidateCheckpoint, error) {
	return _SubchainRegister.Contract.GetValidatorCheckpoint(&_SubchainRegister.CallOpts, subchainID, validatorCandidate)
}

// GetValidatorCheckpointNumber is a free data retrieval call binding the contract method 0xfc809864.
//
// Solidity: function getValidatorCheckpointNumber(uint256 subchainID, address validatorCandidate) view returns(uint256)
func (_SubchainRegister *SubchainRegisterCaller) GetValidatorCheckpointNumber(opts *bind.CallOpts, subchainID *big.Int, validatorCandidate common.Address) (*big.Int, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "getValidatorCheckpointNumber", subchainID, validatorCandidate)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetValidatorCheckpointNumber is a free data retrieval call binding the contract method 0xfc809864.
//
// Solidity: function getValidatorCheckpointNumber(uint256 subchainID, address validatorCandidate) view returns(uint256)
func (_SubchainRegister *SubchainRegisterSession) GetValidatorCheckpointNumber(subchainID *big.Int, validatorCandidate common.Address) (*big.Int, error) {
	return _SubchainRegister.Contract.GetValidatorCheckpointNumber(&_SubchainRegister.CallOpts, subchainID, validatorCandidate)
}

// GetValidatorCheckpointNumber is a free data retrieval call binding the contract method 0xfc809864.
//
// Solidity: function getValidatorCheckpointNumber(uint256 subchainID, address validatorCandidate) view returns(uint256)
func (_SubchainRegister *SubchainRegisterCallerSession) GetValidatorCheckpointNumber(subchainID *big.Int, validatorCandidate common.Address) (*big.Int, error) {
	return _SubchainRegister.Contract.GetValidatorCheckpointNumber(&_SubchainRegister.CallOpts, subchainID, validatorCandidate)
}

// GetValidatorSetWithBlockHeight is a free data retrieval call binding the contract method 0xe4b912a4.
//
// Solidity: function getValidatorSetWithBlockHeight(uint256 subchainID, uint256 blockHeight) view returns(address[])
func (_SubchainRegister *SubchainRegisterCaller) GetValidatorSetWithBlockHeight(opts *bind.CallOpts, subchainID *big.Int, blockHeight *big.Int) ([]common.Address, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "getValidatorSetWithBlockHeight", subchainID, blockHeight)

	if err != nil {
		return *new([]common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)

	return out0, err

}

// GetValidatorSetWithBlockHeight is a free data retrieval call binding the contract method 0xe4b912a4.
//
// Solidity: function getValidatorSetWithBlockHeight(uint256 subchainID, uint256 blockHeight) view returns(address[])
func (_SubchainRegister *SubchainRegisterSession) GetValidatorSetWithBlockHeight(subchainID *big.Int, blockHeight *big.Int) ([]common.Address, error) {
	return _SubchainRegister.Contract.GetValidatorSetWithBlockHeight(&_SubchainRegister.CallOpts, subchainID, blockHeight)
}

// GetValidatorSetWithBlockHeight is a free data retrieval call binding the contract method 0xe4b912a4.
//
// Solidity: function getValidatorSetWithBlockHeight(uint256 subchainID, uint256 blockHeight) view returns(address[])
func (_SubchainRegister *SubchainRegisterCallerSession) GetValidatorSetWithBlockHeight(subchainID *big.Int, blockHeight *big.Int) ([]common.Address, error) {
	return _SubchainRegister.Contract.GetValidatorSetWithBlockHeight(&_SubchainRegister.CallOpts, subchainID, blockHeight)
}

// IsSubchainActive is a free data retrieval call binding the contract method 0x39b913ee.
//
// Solidity: function isSubchainActive(uint256 subchainID, uint256 blockHeight) view returns(bool)
func (_SubchainRegister *SubchainRegisterCaller) IsSubchainActive(opts *bind.CallOpts, subchainID *big.Int, blockHeight *big.Int) (bool, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "isSubchainActive", subchainID, blockHeight)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsSubchainActive is a free data retrieval call binding the contract method 0x39b913ee.
//
// Solidity: function isSubchainActive(uint256 subchainID, uint256 blockHeight) view returns(bool)
func (_SubchainRegister *SubchainRegisterSession) IsSubchainActive(subchainID *big.Int, blockHeight *big.Int) (bool, error) {
	return _SubchainRegister.Contract.IsSubchainActive(&_SubchainRegister.CallOpts, subchainID, blockHeight)
}

// IsSubchainActive is a free data retrieval call binding the contract method 0x39b913ee.
//
// Solidity: function isSubchainActive(uint256 subchainID, uint256 blockHeight) view returns(bool)
func (_SubchainRegister *SubchainRegisterCallerSession) IsSubchainActive(subchainID *big.Int, blockHeight *big.Int) (bool, error) {
	return _SubchainRegister.Contract.IsSubchainActive(&_SubchainRegister.CallOpts, subchainID, blockHeight)
}

// IsSubchainValidatorCandidateActive is a free data retrieval call binding the contract method 0xdd4d452f.
//
// Solidity: function isSubchainValidatorCandidateActive(uint256 subchainID, address validatorCandidateAddress, uint256 blockHeight) view returns(bool)
func (_SubchainRegister *SubchainRegisterCaller) IsSubchainValidatorCandidateActive(opts *bind.CallOpts, subchainID *big.Int, validatorCandidateAddress common.Address, blockHeight *big.Int) (bool, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "isSubchainValidatorCandidateActive", subchainID, validatorCandidateAddress, blockHeight)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsSubchainValidatorCandidateActive is a free data retrieval call binding the contract method 0xdd4d452f.
//
// Solidity: function isSubchainValidatorCandidateActive(uint256 subchainID, address validatorCandidateAddress, uint256 blockHeight) view returns(bool)
func (_SubchainRegister *SubchainRegisterSession) IsSubchainValidatorCandidateActive(subchainID *big.Int, validatorCandidateAddress common.Address, blockHeight *big.Int) (bool, error) {
	return _SubchainRegister.Contract.IsSubchainValidatorCandidateActive(&_SubchainRegister.CallOpts, subchainID, validatorCandidateAddress, blockHeight)
}

// IsSubchainValidatorCandidateActive is a free data retrieval call binding the contract method 0xdd4d452f.
//
// Solidity: function isSubchainValidatorCandidateActive(uint256 subchainID, address validatorCandidateAddress, uint256 blockHeight) view returns(bool)
func (_SubchainRegister *SubchainRegisterCallerSession) IsSubchainValidatorCandidateActive(subchainID *big.Int, validatorCandidateAddress common.Address, blockHeight *big.Int) (bool, error) {
	return _SubchainRegister.Contract.IsSubchainValidatorCandidateActive(&_SubchainRegister.CallOpts, subchainID, validatorCandidateAddress, blockHeight)
}

// NewGetSubchainTokenAtAddresss is a free data retrieval call binding the contract method 0x4643cac1.
//
// Solidity: function newGetSubchainTokenAtAddresss(uint256 subchainID, address fromaddress) view returns(uint256)
func (_SubchainRegister *SubchainRegisterCaller) NewGetSubchainTokenAtAddresss(opts *bind.CallOpts, subchainID *big.Int, fromaddress common.Address) (*big.Int, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "newGetSubchainTokenAtAddresss", subchainID, fromaddress)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// NewGetSubchainTokenAtAddresss is a free data retrieval call binding the contract method 0x4643cac1.
//
// Solidity: function newGetSubchainTokenAtAddresss(uint256 subchainID, address fromaddress) view returns(uint256)
func (_SubchainRegister *SubchainRegisterSession) NewGetSubchainTokenAtAddresss(subchainID *big.Int, fromaddress common.Address) (*big.Int, error) {
	return _SubchainRegister.Contract.NewGetSubchainTokenAtAddresss(&_SubchainRegister.CallOpts, subchainID, fromaddress)
}

// NewGetSubchainTokenAtAddresss is a free data retrieval call binding the contract method 0x4643cac1.
//
// Solidity: function newGetSubchainTokenAtAddresss(uint256 subchainID, address fromaddress) view returns(uint256)
func (_SubchainRegister *SubchainRegisterCallerSession) NewGetSubchainTokenAtAddresss(subchainID *big.Int, fromaddress common.Address) (*big.Int, error) {
	return _SubchainRegister.Contract.NewGetSubchainTokenAtAddresss(&_SubchainRegister.CallOpts, subchainID, fromaddress)
}

// Publisher is a free data retrieval call binding the contract method 0x8c72c54e.
//
// Solidity: function publisher() view returns(address)
func (_SubchainRegister *SubchainRegisterCaller) Publisher(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "publisher")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Publisher is a free data retrieval call binding the contract method 0x8c72c54e.
//
// Solidity: function publisher() view returns(address)
func (_SubchainRegister *SubchainRegisterSession) Publisher() (common.Address, error) {
	return _SubchainRegister.Contract.Publisher(&_SubchainRegister.CallOpts)
}

// Publisher is a free data retrieval call binding the contract method 0x8c72c54e.
//
// Solidity: function publisher() view returns(address)
func (_SubchainRegister *SubchainRegisterCallerSession) Publisher() (common.Address, error) {
	return _SubchainRegister.Contract.Publisher(&_SubchainRegister.CallOpts)
}

// DepositCollateral is a paid mutator transaction binding the contract method 0xa5d5db0c.
//
// Solidity: function depositCollateral(address validatorCandidate, uint256 subchainID) payable returns()
func (_SubchainRegister *SubchainRegisterTransactor) DepositCollateral(opts *bind.TransactOpts, validatorCandidate common.Address, subchainID *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.contract.Transact(opts, "depositCollateral", validatorCandidate, subchainID)
}

// DepositCollateral is a paid mutator transaction binding the contract method 0xa5d5db0c.
//
// Solidity: function depositCollateral(address validatorCandidate, uint256 subchainID) payable returns()
func (_SubchainRegister *SubchainRegisterSession) DepositCollateral(validatorCandidate common.Address, subchainID *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.Contract.DepositCollateral(&_SubchainRegister.TransactOpts, validatorCandidate, subchainID)
}

// DepositCollateral is a paid mutator transaction binding the contract method 0xa5d5db0c.
//
// Solidity: function depositCollateral(address validatorCandidate, uint256 subchainID) payable returns()
func (_SubchainRegister *SubchainRegisterTransactorSession) DepositCollateral(validatorCandidate common.Address, subchainID *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.Contract.DepositCollateral(&_SubchainRegister.TransactOpts, validatorCandidate, subchainID)
}

// RegisterSubchainID is a paid mutator transaction binding the contract method 0x6da486ec.
//
// Solidity: function registerSubchainID(uint256 subchainID, address ERC20Address, string genesisBlockHash) payable returns()
func (_SubchainRegister *SubchainRegisterTransactor) RegisterSubchainID(opts *bind.TransactOpts, subchainID *big.Int, ERC20Address common.Address, genesisBlockHash string) (*types.Transaction, error) {
	return _SubchainRegister.contract.Transact(opts, "registerSubchainID", subchainID, ERC20Address, genesisBlockHash)
}

// RegisterSubchainID is a paid mutator transaction binding the contract method 0x6da486ec.
//
// Solidity: function registerSubchainID(uint256 subchainID, address ERC20Address, string genesisBlockHash) payable returns()
func (_SubchainRegister *SubchainRegisterSession) RegisterSubchainID(subchainID *big.Int, ERC20Address common.Address, genesisBlockHash string) (*types.Transaction, error) {
	return _SubchainRegister.Contract.RegisterSubchainID(&_SubchainRegister.TransactOpts, subchainID, ERC20Address, genesisBlockHash)
}

// RegisterSubchainID is a paid mutator transaction binding the contract method 0x6da486ec.
//
// Solidity: function registerSubchainID(uint256 subchainID, address ERC20Address, string genesisBlockHash) payable returns()
func (_SubchainRegister *SubchainRegisterTransactorSession) RegisterSubchainID(subchainID *big.Int, ERC20Address common.Address, genesisBlockHash string) (*types.Transaction, error) {
	return _SubchainRegister.Contract.RegisterSubchainID(&_SubchainRegister.TransactOpts, subchainID, ERC20Address, genesisBlockHash)
}

// UpdateMinCollateralAmount is a paid mutator transaction binding the contract method 0xf6fbe6f0.
//
// Solidity: function updateMinCollateralAmount(uint256 value) returns()
func (_SubchainRegister *SubchainRegisterTransactor) UpdateMinCollateralAmount(opts *bind.TransactOpts, value *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.contract.Transact(opts, "updateMinCollateralAmount", value)
}

// UpdateMinCollateralAmount is a paid mutator transaction binding the contract method 0xf6fbe6f0.
//
// Solidity: function updateMinCollateralAmount(uint256 value) returns()
func (_SubchainRegister *SubchainRegisterSession) UpdateMinCollateralAmount(value *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.Contract.UpdateMinCollateralAmount(&_SubchainRegister.TransactOpts, value)
}

// UpdateMinCollateralAmount is a paid mutator transaction binding the contract method 0xf6fbe6f0.
//
// Solidity: function updateMinCollateralAmount(uint256 value) returns()
func (_SubchainRegister *SubchainRegisterTransactorSession) UpdateMinCollateralAmount(value *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.Contract.UpdateMinCollateralAmount(&_SubchainRegister.TransactOpts, value)
}

// UpdateMinMinNumValidators is a paid mutator transaction binding the contract method 0x6c671b14.
//
// Solidity: function updateMinMinNumValidators(uint256 value) returns()
func (_SubchainRegister *SubchainRegisterTransactor) UpdateMinMinNumValidators(opts *bind.TransactOpts, value *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.contract.Transact(opts, "updateMinMinNumValidators", value)
}

// UpdateMinMinNumValidators is a paid mutator transaction binding the contract method 0x6c671b14.
//
// Solidity: function updateMinMinNumValidators(uint256 value) returns()
func (_SubchainRegister *SubchainRegisterSession) UpdateMinMinNumValidators(value *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.Contract.UpdateMinMinNumValidators(&_SubchainRegister.TransactOpts, value)
}

// UpdateMinMinNumValidators is a paid mutator transaction binding the contract method 0x6c671b14.
//
// Solidity: function updateMinMinNumValidators(uint256 value) returns()
func (_SubchainRegister *SubchainRegisterTransactorSession) UpdateMinMinNumValidators(value *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.Contract.UpdateMinMinNumValidators(&_SubchainRegister.TransactOpts, value)
}

// UpdateMinPersonalCollateralAmount is a paid mutator transaction binding the contract method 0x8289518d.
//
// Solidity: function updateMinPersonalCollateralAmount(uint256 value) returns()
func (_SubchainRegister *SubchainRegisterTransactor) UpdateMinPersonalCollateralAmount(opts *bind.TransactOpts, value *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.contract.Transact(opts, "updateMinPersonalCollateralAmount", value)
}

// UpdateMinPersonalCollateralAmount is a paid mutator transaction binding the contract method 0x8289518d.
//
// Solidity: function updateMinPersonalCollateralAmount(uint256 value) returns()
func (_SubchainRegister *SubchainRegisterSession) UpdateMinPersonalCollateralAmount(value *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.Contract.UpdateMinPersonalCollateralAmount(&_SubchainRegister.TransactOpts, value)
}

// UpdateMinPersonalCollateralAmount is a paid mutator transaction binding the contract method 0x8289518d.
//
// Solidity: function updateMinPersonalCollateralAmount(uint256 value) returns()
func (_SubchainRegister *SubchainRegisterTransactorSession) UpdateMinPersonalCollateralAmount(value *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.Contract.UpdateMinPersonalCollateralAmount(&_SubchainRegister.TransactOpts, value)
}

// WithdrawCollateral is a paid mutator transaction binding the contract method 0x3d3a066f.
//
// Solidity: function withdrawCollateral(address validatorCandidate, uint256 subchainID, uint256 withdrawalAmount) returns()
func (_SubchainRegister *SubchainRegisterTransactor) WithdrawCollateral(opts *bind.TransactOpts, validatorCandidate common.Address, subchainID *big.Int, withdrawalAmount *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.contract.Transact(opts, "withdrawCollateral", validatorCandidate, subchainID, withdrawalAmount)
}

// WithdrawCollateral is a paid mutator transaction binding the contract method 0x3d3a066f.
//
// Solidity: function withdrawCollateral(address validatorCandidate, uint256 subchainID, uint256 withdrawalAmount) returns()
func (_SubchainRegister *SubchainRegisterSession) WithdrawCollateral(validatorCandidate common.Address, subchainID *big.Int, withdrawalAmount *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.Contract.WithdrawCollateral(&_SubchainRegister.TransactOpts, validatorCandidate, subchainID, withdrawalAmount)
}

// WithdrawCollateral is a paid mutator transaction binding the contract method 0x3d3a066f.
//
// Solidity: function withdrawCollateral(address validatorCandidate, uint256 subchainID, uint256 withdrawalAmount) returns()
func (_SubchainRegister *SubchainRegisterTransactorSession) WithdrawCollateral(validatorCandidate common.Address, subchainID *big.Int, withdrawalAmount *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.Contract.WithdrawCollateral(&_SubchainRegister.TransactOpts, validatorCandidate, subchainID, withdrawalAmount)
}