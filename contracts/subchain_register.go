// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contracts

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/thetatoken/thetasubchain/eth"
	"github.com/thetatoken/thetasubchain/eth/abi"
	"github.com/thetatoken/thetasubchain/eth/abi/bind"
	"github.com/thetatoken/thetasubchain/eth/core/types"
	"github.com/thetatoken/thetasubchain/eth/event"

	"github.com/thetatoken/theta/common"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// SubchainValidatorRegistrarSubchainCheckpoint is an auto generated low-level Go binding around an user-defined struct.
type SubchainValidatorRegistrarSubchainCheckpoint struct {
	BlockHeight                    *big.Int
	Amount                         *big.Int
	LegalValidatorCandidateCounter *big.Int
}

// SubchainValidatorRegistrarSubchainRegisterInfo is an auto generated low-level Go binding around an user-defined struct.
type SubchainValidatorRegistrarSubchainRegisterInfo struct {
	SubchainID       *big.Int
	OwnerAddress     common.Address
	RegisterPrice    *big.Int
	ERC20Address     common.Address
	Erc20            common.Address
	GenesisBlockHash string
	State            uint8
}

// SubchainValidatorRegistrarSubchainValidatorCandidateCheckpoint is an auto generated low-level Go binding around an user-defined struct.
type SubchainValidatorRegistrarSubchainValidatorCandidateCheckpoint struct {
	BlockHeight *big.Int
	Amount      *big.Int
}

// SubchainRegisterMetaData contains all meta data concerning the SubchainRegister contract.
var SubchainRegisterMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[],\"name\":\"MAX_CHAIN_ID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_CHAIN_ID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_COLLATERAL_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_NUM_VALIDATORS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_PERSONAL_COLLATERAL_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"publisher\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"updateMinCollateralAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"updateMinMinNumValidators\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"updateMinPersonalCollateralAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"ERC20Address\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"genesisBlockHash\",\"type\":\"string\"}],\"name\":\"registerSubchainID\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"validatorCandidate\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"}],\"name\":\"depositCollateral\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"validatorCandidate\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockHeight\",\"type\":\"uint256\"}],\"name\":\"isSubchainActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"validatorCandidateAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockHeight\",\"type\":\"uint256\"}],\"name\":\"isSubchainValidatorCandidateActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockHeight\",\"type\":\"uint256\"}],\"name\":\"getValidatorAndStakeSetWithBlockHeight\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"}],\"name\":\"getLegalValidators\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"validatorCandidate\",\"type\":\"address\"}],\"name\":\"getValidatorCheckpoint\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"blockHeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"structSubchainValidatorRegistrar.SubchainValidatorCandidateCheckpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"validatorCandidate\",\"type\":\"address\"}],\"name\":\"getValidatorCheckpointNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"}],\"name\":\"getSubchainCheckpoint\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"blockHeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"legalValidatorCandidateCounter\",\"type\":\"uint256\"}],\"internalType\":\"structSubchainValidatorRegistrar.SubchainCheckpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"}],\"name\":\"getSubchainInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"ownerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"registerPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"ERC20Address\",\"type\":\"address\"},{\"internalType\":\"contractERC20\",\"name\":\"erc20\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"genesisBlockHash\",\"type\":\"string\"},{\"internalType\":\"enumSubchainValidatorRegistrar.SubchainState\",\"name\":\"state\",\"type\":\"uint8\"}],\"internalType\":\"structSubchainValidatorRegistrar.SubchainRegisterInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromaddress\",\"type\":\"address\"}],\"name\":\"getSubchainTokenAtAddresss\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"}],\"name\":\"getERCValidator\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]",
	Bin: "0x608060405260008060006101000a81548160ff0219169083151502179055506127106006556064600755600a60085534801561003a57600080fd5b5061430d8061004a6000396000f3fe6080604052600436106101355760003560e01c8063912d40ad116100ab578063c598d4ce1161006f578063c598d4ce14610420578063c8248b5f1461045d578063d7b356581461049b578063dd4d452f146104d8578063f6fbe6f014610515578063fc8098641461053e57610135565b8063912d40ad1461033457806391be4d41146103715780639c9ec4e51461039c578063a5d5db0c146103d9578063b309bb3b146103f557610135565b80635bc105c0116100fd5780635bc105c0146102335780635ce70ecc1461025e5780636c671b141461029b5780636da486ec146102c45780638289518d146102e05780638c72c54e1461030957610135565b80630df8f6221461013a578063377ea4d61461016557806339b913ee146101a25780633d3a066f146101df5780635adc039e14610208575b600080fd5b34801561014657600080fd5b5061014f61057b565b60405161015c91906130b1565b60405180910390f35b34801561017157600080fd5b5061018c6004803603810190610187919061310c565b610582565b6040516101999190613229565b60405180910390f35b3480156101ae57600080fd5b506101c960048036038101906101c4919061324b565b610635565b6040516101d691906132a6565b60405180910390f35b3480156101eb57600080fd5b50610206600480360381019061020191906132ed565b6108f9565b005b34801561021457600080fd5b5061021d610cc3565b60405161022a91906130b1565b60405180910390f35b34801561023f57600080fd5b50610248610cc9565b60405161025591906130b1565b60405180910390f35b34801561026a57600080fd5b506102856004803603810190610280919061310c565b610cd0565b6040516102929190613391565b60405180910390f35b3480156102a757600080fd5b506102c260048036038101906102bd919061310c565b610d57565b005b6102de60048036038101906102d991906134f2565b610df1565b005b3480156102ec57600080fd5b506103076004803603810190610302919061310c565b611043565b005b34801561031557600080fd5b5061031e6110dd565b60405161032b9190613570565b60405180910390f35b34801561034057600080fd5b5061035b6004803603810190610356919061358b565b611103565b60405161036891906135fa565b60405180910390f35b34801561037d57600080fd5b506103866111fb565b60405161039391906130b1565b60405180910390f35b3480156103a857600080fd5b506103c360048036038101906103be919061310c565b611201565b6040516103d0919061380f565b60405180910390f35b6103f360048036038101906103ee9190613831565b611411565b005b34801561040157600080fd5b5061040a611536565b60405161041791906130b1565b60405180910390f35b34801561042c57600080fd5b506104476004803603810190610442919061358b565b61153c565b60405161045491906130b1565b60405180910390f35b34801561046957600080fd5b50610484600480360381019061047f919061324b565b6115f6565b604051610492929190613920565b60405180910390f35b3480156104a757600080fd5b506104c260048036038101906104bd919061310c565b611adc565b6040516104cf9190613229565b60405180910390f35b3480156104e457600080fd5b506104ff60048036038101906104fa9190613957565b611c3a565b60405161050c91906132a6565b60405180910390f35b34801561052157600080fd5b5061053c6004803603810190610537919061310c565b611fdb565b005b34801561054a57600080fd5b506105656004803603810190610560919061358b565b612075565b60405161057291906130b1565b60405180910390f35b6237159081565b60606011600083815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663473d12ba6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610605573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061062e9190613a87565b9050919050565b6000438210610679576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067090613b2d565b60405180910390fd5b6000600e600085815260200190815260200160002054905060008114156106a45760009150506108f3565b82600d600086815260200190815260200160002060006001846106c79190613b7c565b8152602001908152602001600020600001541161076057600654600d600086815260200190815260200160002060006001846107039190613b7c565b815260200190815260200160002060010154101580156107585750600854600d600086815260200190815260200160002060006001846107439190613b7c565b81526020019081526020016000206002015410155b9150506108f3565b82600d600086815260200190815260200160002060008081526020019081526020016000206000015411156107995760009150506108f3565b6000806001836107a99190613b7c565b90505b8181111561088b576000600283836107c49190613b7c565b6107ce9190613bdf565b826107d99190613b7c565b90506000600d60008981526020019081526020016000206000838152602001908152602001600020604051806060016040529081600082015481526020016001820154815260200160028201548152505090508681600001511415610860576006548160200151101580156108545750600854816040015110155b955050505050506108f3565b868160000151101561087457819350610884565b6001826108819190613b7c565b92505b50506107ac565b600654600d6000888152602001908152602001600020600084815260200190815260200160002060010154101580156108ed5750600854600d600088815260200190815260200160002060008481526020019081526020016000206002015410155b93505050505b92915050565b62371590821015801561090f575062373c9f8211155b61094e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094590613c5c565b60405180910390fd5b600033905060008290506000600a600086815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060006009600087815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206040518060400160405290816000820154815260200160018201548152505090508281602001511015610af2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae990613cc8565b60405180910390fd5b6000610b0282602001518561216a565b90506000600184610b139190613ce8565b9050604051806040016040528043815260200183815250600960008a815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020600082015181600001556020820151816001015590505080600a60008a815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508573ffffffffffffffffffffffffffffffffffffffff166108fc869081150290604051600060405180830381858888f19350505050158015610cb7573d6000803e3d6000fd5b50505050505050505050565b60085481565b62373c9f81565b610cd8612e9f565b6000600e60008481526020019081526020016000205490506000600d60008581526020019081526020016000206000600184610d149190613b7c565b8152602001908152602001600020604051806060016040529081600082015481526020016001820154815260200160028201548152505090508092505050919050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610de7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dde90613d8a565b60405180910390fd5b8060088190555050565b623715908310158015610e07575062373c9f8311155b610e46576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3d90613c5c565b60405180910390fd5b6000601160008581526020019081526020016000206000015414610e9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9690613df6565b60405180910390fd5b826011600085815260200190815260200160002060000181905550336011600085815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016011600085815260200190815260200160002060060160006101000a81548160ff02191690836003811115610f4957610f486136fc565b5b0217905550346011600085815260200190815260200160002060020181905550816011600085815260200190815260200160002060030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816011600085815260200190815260200160002060040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060116000858152602001908152602001600020600501908051906020019061103d929190612ec0565b50505050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ca90613d8a565b60405180910390fd5b8060078190555050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61110b612f46565b6000600c600085815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600b600086815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001846111c19190613b7c565b8152602001908152602001600020604051806040016040529081600082015481526020016001820154815250509050809250505092915050565b60065481565b611209612f60565b601160008381526020019081526020016000206040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201805461134d90613e45565b80601f016020809104026020016040519081016040528092919081815260200182805461137990613e45565b80156113c65780601f1061139b576101008083540402835291602001916113c6565b820191906000526020600020905b8154815290600101906020018083116113a957829003601f168201915b505050505081526020016006820160009054906101000a900460ff1660038111156113f4576113f36136fc565b5b6003811115611406576114056136fc565b5b815250509050919050565b623715908110158015611427575062373c9f8111155b611466576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161145d90613c5c565b60405180910390fd5b6000601160008381526020019081526020016000206000015414156114c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114b790613ec3565b60405180910390fd5b600754341015611505576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114fc90613f2f565b60405180910390fd5b6000339050600034905061151b848483856121b4565b611526848483612490565b61153083826128d3565b50505050565b60075481565b60006011600084815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f8b2cb4f836040518263ffffffff1660e01b81526004016115ad9190613570565b602060405180830381865afa1580156115ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ee9190613f64565b905092915050565b60608043831061163b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161163290613b2d565b60405180910390fd5b60006011600086815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000808273ffffffffffffffffffffffffffffffffffffffff166318c471ba876040518263ffffffff1660e01b81526004016116b291906130b1565b600060405180830381865afa1580156116cf573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906116f89190614054565b91509150600060106000898152602001908152602001600020549050606080600083141561173157818197509750505050505050611ad5565b88600f60008c815260200190815260200160002060006001866117549190613b7c565b8152602001908152602001600020600001541161184c5761182c85600f60008d815260200190815260200160002060006001876117919190613b7c565b815260200190815260200160002060010180548060200260200160405190810160405280929190818152602001828054801561182257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116117d8575b5050505050612a6a565b9150611839828686612c50565b9050818197509750505050505050611ad5565b88600f60008c8152602001908152602001600020600080815260200190815260200160002060000154111561188c57818197509750505050505050611ad5565b60008060018561189c9190613b7c565b90505b81811115611a02576000600283836118b79190613b7c565b6118c19190613bdf565b826118cc9190613b7c565b90506000600f60008f81526020019081526020016000206000838152602001908152602001600020604051806040016040529081600082015481526020016001820180548060200260200160405190810160405280929190818152602001828054801561198e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611944575b50505050508152505090508c816000015114156119d7576119b3898260200151612a6a565b95506119c0868a8a612c50565b945085859b509b5050505050505050505050611ad5565b8c816000015110156119eb578193506119fb565b6001826119f89190613b7c565b92505b505061189f565b611ab787600f60008f81526020019081526020016000206000858152602001908152602001600020600101805480602002602001604051908101604052809291908181526020018280548015611aad57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611a63575b5050505050612a6a565b9350611ac4848888612c50565b925083839950995050505050505050505b9250929050565b606060006011600084815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff1663473d12ba6040518163ffffffff1660e01b8152600401600060405180830381865afa158015611b66573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190611b8f9190613a87565b905060006012600086815260200190815260200160002073__IterableMapping_______________________63b3d15a3e90916040518263ffffffff1660e01b8152600401611bde91906140d3565b600060405180830381865af4158015611bfb573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190611c249190613a87565b9050611c308282612a6a565b9350505050919050565b6000438210611c7e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c7590613b2d565b60405180910390fd5b6000600c600086815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811415611ce6576000915050611fd4565b82600b600087815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600184611d469190613b7c565b81526020019081526020016000206000015411611ddb57600754600b600087815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600184611dbf9190613b7c565b8152602001908152602001600020600101541015915050611fd4565b82600b600087815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000808152602001908152602001600020600001541115611e51576000915050611fd4565b600080600183611e619190613b7c565b90505b81811115611f6457600060028383611e7c9190613b7c565b611e869190613bdf565b82611e919190613b7c565b90506000600b60008a815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206040518060400160405290816000820154815260200160018201548152505090508681600001511415611f39576007548160200151101595505050505050611fd4565b8681600001511015611f4d57819350611f5d565b600182611f5a9190613b7c565b92505b5050611e64565b600754600b600089815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060010154101593505050505b9392505050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461206b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161206290613d8a565b60405180910390fd5b8060068190555050565b600080600c600085815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600b600086815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060018461212c9190613b7c565b815260200190815260200160002060405180604001604052908160008201548152602001600182015481525050905080602001519250505092915050565b60006121ac83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612d2f565b905092915050565b6000600a600085815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060006009600086815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206040518060400160405290816000820154815260200160018201548152505090506000612317826020015186612d93565b905060006001846123289190613ce8565b90506040518060400160405280438152602001838152506009600089815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868152602001908152602001600020600082015181600001556020820151816001015590505080600a600089815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050505050505050565b6000600c600084815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600b600085815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206040518060400160405290816000820154815260200160018201548152505090506000612579826020015185612d93565b905060006012600087815260200190815260200160002073__IterableMapping_______________________63732a2ccf9091896040518363ffffffff1660e01b81526004016125ca9291906140fd565b602060405180830381865af41580156125e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061260b9190613f64565b14801561261a57506007548110155b156127d7576012600086815260200190815260200160002073__IterableMapping_______________________63bc2b405c90918860016040518463ffffffff1660e01b815260040161266f93929190614161565b60006040518083038186803b15801561268757600080fd5b505af415801561269b573d6000803e3d6000fd5b5050505060006010600087815260200190815260200160002054905060405180604001604052804381526020016012600089815260200190815260200160002073__IterableMapping_______________________63b3d15a3e90916040518263ffffffff1660e01b815260040161271391906140d3565b600060405180830381865af4158015612730573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906127599190613a87565b815250600f600088815260200190815260200160002060008381526020019081526020016000206000820151816000015560208201518160010190805190602001906127a6929190612ff1565b5090505060016010600088815260200190815260200160002060008282546127ce9190613ce8565b92505081905550505b60006001846127e69190613ce8565b9050604051806040016040528043815260200183815250600b600088815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868152602001908152602001600020600082015181600001556020820151816001015590505080600c600088815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505050505050565b6000600e60008481526020019081526020016000205490506000600d6000858152602001908152602001600020600083815260200190815260200160002060405180606001604052908160008201548152602001600182015481526020016002820154815250509050600061294c826020015185612d93565b9050600060018461295d9190613ce8565b905060405180606001604052804381526020018381526020016012600089815260200190815260200160002073__IterableMapping_______________________63deb3d89690916040518263ffffffff1660e01b81526004016129c191906140d3565b602060405180830381865af41580156129de573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a029190613f64565b815250600d6000888152602001908152602001600020600086815260200190815260200160002060008201518160000155602082015181600101556040820151816002015590505080600e600088815260200190815260200160002081905550505050505050565b606060008351905060008167ffffffffffffffff811115612a8e57612a8d6133c7565b5b604051908082528060200260200182016040528015612abc5781602001602082028036833780820191505090505b5090506000805b83811015612b3d57612aef86888381518110612ae257612ae1614198565b5b6020026020010151612df1565b15612b2a576001838281518110612b0957612b08614198565b5b6020026020010190151590811515815250508180612b26906141c7565b9250505b8080612b35906141c7565b915050612ac3565b5060008167ffffffffffffffff811115612b5a57612b596133c7565b5b604051908082528060200260200182016040528015612b885781602001602082028036833780820191505090505b5090506000805b85811015612c4157848181518110612baa57612ba9614198565b5b602002602001015115612c2e57888181518110612bca57612bc9614198565b5b6020026020010151838381518110612be557612be4614198565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508180612c2a906141c7565b9250505b8080612c39906141c7565b915050612b8f565b50819550505050505092915050565b60606000845167ffffffffffffffff811115612c6f57612c6e6133c7565b5b604051908082528060200260200182016040528015612c9d5781602001602082028036833780820191505090505b50905060005b8551811015612d23576000612cd286888481518110612cc557612cc4614198565b5b6020026020010151612e0b565b509050848181518110612ce857612ce7614198565b5b6020026020010151838381518110612d0357612d02614198565b5b602002602001018181525050508080612d1b906141c7565b915050612ca3565b50809150509392505050565b6000838311158290612d77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d6e9190614249565b60405180910390fd5b5060008385612d869190613b7c565b9050809150509392505050565b6000808284612da29190613ce8565b905083811015612de7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612dde906142b7565b60405180910390fd5b8091505092915050565b600080612dfe8484612e0b565b9150508091505092915050565b60008060008451905060005b81811015612e8e578473ffffffffffffffffffffffffffffffffffffffff16868281518110612e4957612e48614198565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff161415612e7b57806001935093505050612e98565b8080612e86906141c7565b915050612e17565b5060008092509250505b9250929050565b60405180606001604052806000815260200160008152602001600081525090565b828054612ecc90613e45565b90600052602060002090601f016020900481019282612eee5760008555612f35565b82601f10612f0757805160ff1916838001178555612f35565b82800160010185558215612f35579182015b82811115612f34578251825591602001919060010190612f19565b5b509050612f42919061307b565b5090565b604051806040016040528060008152602001600081525090565b6040518060e0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160006003811115612feb57612fea6136fc565b5b81525090565b82805482825590600052602060002090810192821561306a579160200282015b828111156130695782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190613011565b5b509050613077919061307b565b5090565b5b8082111561309457600081600090555060010161307c565b5090565b6000819050919050565b6130ab81613098565b82525050565b60006020820190506130c660008301846130a2565b92915050565b6000604051905090565b600080fd5b600080fd5b6130e981613098565b81146130f457600080fd5b50565b600081359050613106816130e0565b92915050565b600060208284031215613122576131216130d6565b5b6000613130848285016130f7565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061319082613165565b9050919050565b6131a081613185565b82525050565b60006131b28383613197565b60208301905092915050565b6000602082019050919050565b60006131d682613139565b6131e08185613144565b93506131eb83613155565b8060005b8381101561321c57815161320388826131a6565b975061320e836131be565b9250506001810190506131ef565b5085935050505092915050565b6000602082019050818103600083015261324381846131cb565b905092915050565b60008060408385031215613262576132616130d6565b5b6000613270858286016130f7565b9250506020613281858286016130f7565b9150509250929050565b60008115159050919050565b6132a08161328b565b82525050565b60006020820190506132bb6000830184613297565b92915050565b6132ca81613185565b81146132d557600080fd5b50565b6000813590506132e7816132c1565b92915050565b600080600060608486031215613306576133056130d6565b5b6000613314868287016132d8565b9350506020613325868287016130f7565b9250506040613336868287016130f7565b9150509250925092565b61334981613098565b82525050565b6060820160008201516133656000850182613340565b5060208201516133786020850182613340565b50604082015161338b6040850182613340565b50505050565b60006060820190506133a6600083018461334f565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6133ff826133b6565b810181811067ffffffffffffffff8211171561341e5761341d6133c7565b5b80604052505050565b60006134316130cc565b905061343d82826133f6565b919050565b600067ffffffffffffffff82111561345d5761345c6133c7565b5b613466826133b6565b9050602081019050919050565b82818337600083830152505050565b600061349561349084613442565b613427565b9050828152602081018484840111156134b1576134b06133b1565b5b6134bc848285613473565b509392505050565b600082601f8301126134d9576134d86133ac565b5b81356134e9848260208601613482565b91505092915050565b60008060006060848603121561350b5761350a6130d6565b5b6000613519868287016130f7565b935050602061352a868287016132d8565b925050604084013567ffffffffffffffff81111561354b5761354a6130db565b5b613557868287016134c4565b9150509250925092565b61356a81613185565b82525050565b60006020820190506135856000830184613561565b92915050565b600080604083850312156135a2576135a16130d6565b5b60006135b0858286016130f7565b92505060206135c1858286016132d8565b9150509250929050565b6040820160008201516135e16000850182613340565b5060208201516135f46020850182613340565b50505050565b600060408201905061360f60008301846135cb565b92915050565b6000819050919050565b600061363a61363561363084613165565b613615565b613165565b9050919050565b600061364c8261361f565b9050919050565b600061365e82613641565b9050919050565b61366e81613653565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156136ae578082015181840152602081019050613693565b838111156136bd576000848401525b50505050565b60006136ce82613674565b6136d8818561367f565b93506136e8818560208601613690565b6136f1816133b6565b840191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6004811061373c5761373b6136fc565b5b50565b600081905061374d8261372b565b919050565b600061375d8261373f565b9050919050565b61376d81613752565b82525050565b600060e08301600083015161378b6000860182613340565b50602083015161379e6020860182613197565b5060408301516137b16040860182613340565b5060608301516137c46060860182613197565b5060808301516137d76080860182613665565b5060a083015184820360a08601526137ef82826136c3565b91505060c083015161380460c0860182613764565b508091505092915050565b600060208201905081810360008301526138298184613773565b905092915050565b60008060408385031215613848576138476130d6565b5b6000613856858286016132d8565b9250506020613867858286016130f7565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006138a98383613340565b60208301905092915050565b6000602082019050919050565b60006138cd82613871565b6138d7818561387c565b93506138e28361388d565b8060005b838110156139135781516138fa888261389d565b9750613905836138b5565b9250506001810190506138e6565b5085935050505092915050565b6000604082019050818103600083015261393a81856131cb565b9050818103602083015261394e81846138c2565b90509392505050565b6000806000606084860312156139705761396f6130d6565b5b600061397e868287016130f7565b935050602061398f868287016132d8565b92505060406139a0868287016130f7565b9150509250925092565b600067ffffffffffffffff8211156139c5576139c46133c7565b5b602082029050602081019050919050565b600080fd5b6000815190506139ea816132c1565b92915050565b6000613a036139fe846139aa565b613427565b90508083825260208201905060208402830185811115613a2657613a256139d6565b5b835b81811015613a4f5780613a3b88826139db565b845260208401935050602081019050613a28565b5050509392505050565b600082601f830112613a6e57613a6d6133ac565b5b8151613a7e8482602086016139f0565b91505092915050565b600060208284031215613a9d57613a9c6130d6565b5b600082015167ffffffffffffffff811115613abb57613aba6130db565b5b613ac784828501613a59565b91505092915050565b600082825260208201905092915050565b7f7468697320626c6f636b206973206e6f74207965742064657465726d696e6564600082015250565b6000613b17602083613ad0565b9150613b2282613ae1565b602082019050919050565b60006020820190508181036000830152613b4681613b0a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613b8782613098565b9150613b9283613098565b925082821015613ba557613ba4613b4d565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000613bea82613098565b9150613bf583613098565b925082613c0557613c04613bb0565b5b828204905092915050565b7f496e76616c696420737562636861696e20494400000000000000000000000000600082015250565b6000613c46601383613ad0565b9150613c5182613c10565b602082019050919050565b60006020820190508181036000830152613c7581613c39565b9050919050565b7f5769746864726177616c20616d6f756e7420746f6f206c617267650000000000600082015250565b6000613cb2601b83613ad0565b9150613cbd82613c7c565b602082019050919050565b60006020820190508181036000830152613ce181613ca5565b9050919050565b6000613cf382613098565b9150613cfe83613098565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613d3357613d32613b4d565b5b828201905092915050565b7f4f6e6c79207075626c69736865722063616e2063616c6c20746869732e000000600082015250565b6000613d74601d83613ad0565b9150613d7f82613d3e565b602082019050919050565b60006020820190508181036000830152613da381613d67565b9050919050565b7f537562636861696e20494420686173206265656e207265676973746572656421600082015250565b6000613de0602083613ad0565b9150613deb82613daa565b602082019050919050565b60006020820190508181036000830152613e0f81613dd3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680613e5d57607f821691505b60208210811415613e7157613e70613e16565b5b50919050565b7f537562636861696e206973206e6f742072656769737465726564000000000000600082015250565b6000613ead601a83613ad0565b9150613eb882613e77565b602082019050919050565b60006020820190508181036000830152613edc81613ea0565b9050919050565b7f546f6f206c65737320636f6c6c61746572616c20616d6f756e74000000000000600082015250565b6000613f19601a83613ad0565b9150613f2482613ee3565b602082019050919050565b60006020820190508181036000830152613f4881613f0c565b9050919050565b600081519050613f5e816130e0565b92915050565b600060208284031215613f7a57613f796130d6565b5b6000613f8884828501613f4f565b91505092915050565b600067ffffffffffffffff821115613fac57613fab6133c7565b5b602082029050602081019050919050565b6000613fd0613fcb84613f91565b613427565b90508083825260208201905060208402830185811115613ff357613ff26139d6565b5b835b8181101561401c57806140088882613f4f565b845260208401935050602081019050613ff5565b5050509392505050565b600082601f83011261403b5761403a6133ac565b5b815161404b848260208601613fbd565b91505092915050565b6000806040838503121561406b5761406a6130d6565b5b600083015167ffffffffffffffff811115614089576140886130db565b5b61409585828601613a59565b925050602083015167ffffffffffffffff8111156140b6576140b56130db565b5b6140c285828601614026565b9150509250929050565b8082525050565b60006020820190506140e860008301846140cc565b92915050565b6140f781613185565b82525050565b600060408201905061411260008301856140cc565b61411f60208301846140ee565b9392505050565b6000819050919050565b600061414b61414661414184614126565b613615565b613098565b9050919050565b61415b81614130565b82525050565b600060608201905061417660008301866140cc565b61418360208301856140ee565b6141906040830184614152565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006141d282613098565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561420557614204613b4d565b5b600182019050919050565b600061421b82613674565b6142258185613ad0565b9350614235818560208601613690565b61423e816133b6565b840191505092915050565b600060208201905081810360008301526142638184614210565b905092915050565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b60006142a1601b83613ad0565b91506142ac8261426b565b602082019050919050565b600060208201905081810360008301526142d081614294565b905091905056fea26469706673582212204d4a6ea77f4e6c1323b2174c39d6e7ed924ab32034a956bae7ff8777dd15ce0964736f6c634300080c0033",
}

// SubchainRegisterABI is the input ABI used to generate the binding from.
// Deprecated: Use SubchainRegisterMetaData.ABI instead.
var SubchainRegisterABI = SubchainRegisterMetaData.ABI

// SubchainRegisterBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use SubchainRegisterMetaData.Bin instead.
var SubchainRegisterBin = SubchainRegisterMetaData.Bin

// DeploySubchainRegister deploys a new Ethereum contract, binding an instance of SubchainRegister to it.
func DeploySubchainRegister(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *SubchainRegister, error) {
	parsed, err := SubchainRegisterMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(SubchainRegisterBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &SubchainRegister{SubchainRegisterCaller: SubchainRegisterCaller{contract: contract}, SubchainRegisterTransactor: SubchainRegisterTransactor{contract: contract}, SubchainRegisterFilterer: SubchainRegisterFilterer{contract: contract}}, nil
}

// SubchainRegister is an auto generated Go binding around an Ethereum contract.
type SubchainRegister struct {
	SubchainRegisterCaller     // Read-only binding to the contract
	SubchainRegisterTransactor // Write-only binding to the contract
	SubchainRegisterFilterer   // Log filterer for contract events
}

// SubchainRegisterCaller is an auto generated read-only Go binding around an Ethereum contract.
type SubchainRegisterCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SubchainRegisterTransactor is an auto generated write-only Go binding around an Ethereum contract.
type SubchainRegisterTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SubchainRegisterFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type SubchainRegisterFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SubchainRegisterSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type SubchainRegisterSession struct {
	Contract     *SubchainRegister // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// SubchainRegisterCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type SubchainRegisterCallerSession struct {
	Contract *SubchainRegisterCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts           // Call options to use throughout this session
}

// SubchainRegisterTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type SubchainRegisterTransactorSession struct {
	Contract     *SubchainRegisterTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts           // Transaction auth options to use throughout this session
}

// SubchainRegisterRaw is an auto generated low-level Go binding around an Ethereum contract.
type SubchainRegisterRaw struct {
	Contract *SubchainRegister // Generic contract binding to access the raw methods on
}

// SubchainRegisterCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type SubchainRegisterCallerRaw struct {
	Contract *SubchainRegisterCaller // Generic read-only contract binding to access the raw methods on
}

// SubchainRegisterTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type SubchainRegisterTransactorRaw struct {
	Contract *SubchainRegisterTransactor // Generic write-only contract binding to access the raw methods on
}

// NewSubchainRegister creates a new instance of SubchainRegister, bound to a specific deployed contract.
func NewSubchainRegister(address common.Address, backend bind.ContractBackend) (*SubchainRegister, error) {
	contract, err := bindSubchainRegister(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &SubchainRegister{SubchainRegisterCaller: SubchainRegisterCaller{contract: contract}, SubchainRegisterTransactor: SubchainRegisterTransactor{contract: contract}, SubchainRegisterFilterer: SubchainRegisterFilterer{contract: contract}}, nil
}

// NewSubchainRegisterCaller creates a new read-only instance of SubchainRegister, bound to a specific deployed contract.
func NewSubchainRegisterCaller(address common.Address, caller bind.ContractCaller) (*SubchainRegisterCaller, error) {
	contract, err := bindSubchainRegister(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &SubchainRegisterCaller{contract: contract}, nil
}

// NewSubchainRegisterTransactor creates a new write-only instance of SubchainRegister, bound to a specific deployed contract.
func NewSubchainRegisterTransactor(address common.Address, transactor bind.ContractTransactor) (*SubchainRegisterTransactor, error) {
	contract, err := bindSubchainRegister(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &SubchainRegisterTransactor{contract: contract}, nil
}

// NewSubchainRegisterFilterer creates a new log filterer instance of SubchainRegister, bound to a specific deployed contract.
func NewSubchainRegisterFilterer(address common.Address, filterer bind.ContractFilterer) (*SubchainRegisterFilterer, error) {
	contract, err := bindSubchainRegister(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &SubchainRegisterFilterer{contract: contract}, nil
}

// bindSubchainRegister binds a generic wrapper to an already deployed contract.
func bindSubchainRegister(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(SubchainRegisterABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_SubchainRegister *SubchainRegisterRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _SubchainRegister.Contract.SubchainRegisterCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_SubchainRegister *SubchainRegisterRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _SubchainRegister.Contract.SubchainRegisterTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_SubchainRegister *SubchainRegisterRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _SubchainRegister.Contract.SubchainRegisterTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_SubchainRegister *SubchainRegisterCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _SubchainRegister.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_SubchainRegister *SubchainRegisterTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _SubchainRegister.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_SubchainRegister *SubchainRegisterTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _SubchainRegister.Contract.contract.Transact(opts, method, params...)
}

// MAXCHAINID is a free data retrieval call binding the contract method 0x5bc105c0.
//
// Solidity: function MAX_CHAIN_ID() view returns(uint256)
func (_SubchainRegister *SubchainRegisterCaller) MAXCHAINID(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "MAX_CHAIN_ID")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MAXCHAINID is a free data retrieval call binding the contract method 0x5bc105c0.
//
// Solidity: function MAX_CHAIN_ID() view returns(uint256)
func (_SubchainRegister *SubchainRegisterSession) MAXCHAINID() (*big.Int, error) {
	return _SubchainRegister.Contract.MAXCHAINID(&_SubchainRegister.CallOpts)
}

// MAXCHAINID is a free data retrieval call binding the contract method 0x5bc105c0.
//
// Solidity: function MAX_CHAIN_ID() view returns(uint256)
func (_SubchainRegister *SubchainRegisterCallerSession) MAXCHAINID() (*big.Int, error) {
	return _SubchainRegister.Contract.MAXCHAINID(&_SubchainRegister.CallOpts)
}

// MINCHAINID is a free data retrieval call binding the contract method 0x0df8f622.
//
// Solidity: function MIN_CHAIN_ID() view returns(uint256)
func (_SubchainRegister *SubchainRegisterCaller) MINCHAINID(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "MIN_CHAIN_ID")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MINCHAINID is a free data retrieval call binding the contract method 0x0df8f622.
//
// Solidity: function MIN_CHAIN_ID() view returns(uint256)
func (_SubchainRegister *SubchainRegisterSession) MINCHAINID() (*big.Int, error) {
	return _SubchainRegister.Contract.MINCHAINID(&_SubchainRegister.CallOpts)
}

// MINCHAINID is a free data retrieval call binding the contract method 0x0df8f622.
//
// Solidity: function MIN_CHAIN_ID() view returns(uint256)
func (_SubchainRegister *SubchainRegisterCallerSession) MINCHAINID() (*big.Int, error) {
	return _SubchainRegister.Contract.MINCHAINID(&_SubchainRegister.CallOpts)
}

// MINCOLLATERALAMOUNT is a free data retrieval call binding the contract method 0x91be4d41.
//
// Solidity: function MIN_COLLATERAL_AMOUNT() view returns(uint256)
func (_SubchainRegister *SubchainRegisterCaller) MINCOLLATERALAMOUNT(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "MIN_COLLATERAL_AMOUNT")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MINCOLLATERALAMOUNT is a free data retrieval call binding the contract method 0x91be4d41.
//
// Solidity: function MIN_COLLATERAL_AMOUNT() view returns(uint256)
func (_SubchainRegister *SubchainRegisterSession) MINCOLLATERALAMOUNT() (*big.Int, error) {
	return _SubchainRegister.Contract.MINCOLLATERALAMOUNT(&_SubchainRegister.CallOpts)
}

// MINCOLLATERALAMOUNT is a free data retrieval call binding the contract method 0x91be4d41.
//
// Solidity: function MIN_COLLATERAL_AMOUNT() view returns(uint256)
func (_SubchainRegister *SubchainRegisterCallerSession) MINCOLLATERALAMOUNT() (*big.Int, error) {
	return _SubchainRegister.Contract.MINCOLLATERALAMOUNT(&_SubchainRegister.CallOpts)
}

// MINNUMVALIDATORS is a free data retrieval call binding the contract method 0x5adc039e.
//
// Solidity: function MIN_NUM_VALIDATORS() view returns(uint256)
func (_SubchainRegister *SubchainRegisterCaller) MINNUMVALIDATORS(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "MIN_NUM_VALIDATORS")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MINNUMVALIDATORS is a free data retrieval call binding the contract method 0x5adc039e.
//
// Solidity: function MIN_NUM_VALIDATORS() view returns(uint256)
func (_SubchainRegister *SubchainRegisterSession) MINNUMVALIDATORS() (*big.Int, error) {
	return _SubchainRegister.Contract.MINNUMVALIDATORS(&_SubchainRegister.CallOpts)
}

// MINNUMVALIDATORS is a free data retrieval call binding the contract method 0x5adc039e.
//
// Solidity: function MIN_NUM_VALIDATORS() view returns(uint256)
func (_SubchainRegister *SubchainRegisterCallerSession) MINNUMVALIDATORS() (*big.Int, error) {
	return _SubchainRegister.Contract.MINNUMVALIDATORS(&_SubchainRegister.CallOpts)
}

// MINPERSONALCOLLATERALAMOUNT is a free data retrieval call binding the contract method 0xb309bb3b.
//
// Solidity: function MIN_PERSONAL_COLLATERAL_AMOUNT() view returns(uint256)
func (_SubchainRegister *SubchainRegisterCaller) MINPERSONALCOLLATERALAMOUNT(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "MIN_PERSONAL_COLLATERAL_AMOUNT")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MINPERSONALCOLLATERALAMOUNT is a free data retrieval call binding the contract method 0xb309bb3b.
//
// Solidity: function MIN_PERSONAL_COLLATERAL_AMOUNT() view returns(uint256)
func (_SubchainRegister *SubchainRegisterSession) MINPERSONALCOLLATERALAMOUNT() (*big.Int, error) {
	return _SubchainRegister.Contract.MINPERSONALCOLLATERALAMOUNT(&_SubchainRegister.CallOpts)
}

// MINPERSONALCOLLATERALAMOUNT is a free data retrieval call binding the contract method 0xb309bb3b.
//
// Solidity: function MIN_PERSONAL_COLLATERAL_AMOUNT() view returns(uint256)
func (_SubchainRegister *SubchainRegisterCallerSession) MINPERSONALCOLLATERALAMOUNT() (*big.Int, error) {
	return _SubchainRegister.Contract.MINPERSONALCOLLATERALAMOUNT(&_SubchainRegister.CallOpts)
}

// GetERCValidator is a free data retrieval call binding the contract method 0x377ea4d6.
//
// Solidity: function getERCValidator(uint256 subchainID) view returns(address[])
func (_SubchainRegister *SubchainRegisterCaller) GetERCValidator(opts *bind.CallOpts, subchainID *big.Int) ([]common.Address, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "getERCValidator", subchainID)

	if err != nil {
		return *new([]common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)

	return out0, err

}

// GetERCValidator is a free data retrieval call binding the contract method 0x377ea4d6.
//
// Solidity: function getERCValidator(uint256 subchainID) view returns(address[])
func (_SubchainRegister *SubchainRegisterSession) GetERCValidator(subchainID *big.Int) ([]common.Address, error) {
	return _SubchainRegister.Contract.GetERCValidator(&_SubchainRegister.CallOpts, subchainID)
}

// GetERCValidator is a free data retrieval call binding the contract method 0x377ea4d6.
//
// Solidity: function getERCValidator(uint256 subchainID) view returns(address[])
func (_SubchainRegister *SubchainRegisterCallerSession) GetERCValidator(subchainID *big.Int) ([]common.Address, error) {
	return _SubchainRegister.Contract.GetERCValidator(&_SubchainRegister.CallOpts, subchainID)
}

// GetLegalValidators is a free data retrieval call binding the contract method 0xd7b35658.
//
// Solidity: function getLegalValidators(uint256 subchainID) view returns(address[])
func (_SubchainRegister *SubchainRegisterCaller) GetLegalValidators(opts *bind.CallOpts, subchainID *big.Int) ([]common.Address, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "getLegalValidators", subchainID)

	if err != nil {
		return *new([]common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)

	return out0, err

}

// GetLegalValidators is a free data retrieval call binding the contract method 0xd7b35658.
//
// Solidity: function getLegalValidators(uint256 subchainID) view returns(address[])
func (_SubchainRegister *SubchainRegisterSession) GetLegalValidators(subchainID *big.Int) ([]common.Address, error) {
	return _SubchainRegister.Contract.GetLegalValidators(&_SubchainRegister.CallOpts, subchainID)
}

// GetLegalValidators is a free data retrieval call binding the contract method 0xd7b35658.
//
// Solidity: function getLegalValidators(uint256 subchainID) view returns(address[])
func (_SubchainRegister *SubchainRegisterCallerSession) GetLegalValidators(subchainID *big.Int) ([]common.Address, error) {
	return _SubchainRegister.Contract.GetLegalValidators(&_SubchainRegister.CallOpts, subchainID)
}

// GetSubchainCheckpoint is a free data retrieval call binding the contract method 0x5ce70ecc.
//
// Solidity: function getSubchainCheckpoint(uint256 subchainID) view returns((uint256,uint256,uint256))
func (_SubchainRegister *SubchainRegisterCaller) GetSubchainCheckpoint(opts *bind.CallOpts, subchainID *big.Int) (SubchainValidatorRegistrarSubchainCheckpoint, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "getSubchainCheckpoint", subchainID)

	if err != nil {
		return *new(SubchainValidatorRegistrarSubchainCheckpoint), err
	}

	out0 := *abi.ConvertType(out[0], new(SubchainValidatorRegistrarSubchainCheckpoint)).(*SubchainValidatorRegistrarSubchainCheckpoint)

	return out0, err

}

// GetSubchainCheckpoint is a free data retrieval call binding the contract method 0x5ce70ecc.
//
// Solidity: function getSubchainCheckpoint(uint256 subchainID) view returns((uint256,uint256,uint256))
func (_SubchainRegister *SubchainRegisterSession) GetSubchainCheckpoint(subchainID *big.Int) (SubchainValidatorRegistrarSubchainCheckpoint, error) {
	return _SubchainRegister.Contract.GetSubchainCheckpoint(&_SubchainRegister.CallOpts, subchainID)
}

// GetSubchainCheckpoint is a free data retrieval call binding the contract method 0x5ce70ecc.
//
// Solidity: function getSubchainCheckpoint(uint256 subchainID) view returns((uint256,uint256,uint256))
func (_SubchainRegister *SubchainRegisterCallerSession) GetSubchainCheckpoint(subchainID *big.Int) (SubchainValidatorRegistrarSubchainCheckpoint, error) {
	return _SubchainRegister.Contract.GetSubchainCheckpoint(&_SubchainRegister.CallOpts, subchainID)
}

// GetSubchainInfo is a free data retrieval call binding the contract method 0x9c9ec4e5.
//
// Solidity: function getSubchainInfo(uint256 subchainID) view returns((uint256,address,uint256,address,address,string,uint8))
func (_SubchainRegister *SubchainRegisterCaller) GetSubchainInfo(opts *bind.CallOpts, subchainID *big.Int) (SubchainValidatorRegistrarSubchainRegisterInfo, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "getSubchainInfo", subchainID)

	if err != nil {
		return *new(SubchainValidatorRegistrarSubchainRegisterInfo), err
	}

	out0 := *abi.ConvertType(out[0], new(SubchainValidatorRegistrarSubchainRegisterInfo)).(*SubchainValidatorRegistrarSubchainRegisterInfo)

	return out0, err

}

// GetSubchainInfo is a free data retrieval call binding the contract method 0x9c9ec4e5.
//
// Solidity: function getSubchainInfo(uint256 subchainID) view returns((uint256,address,uint256,address,address,string,uint8))
func (_SubchainRegister *SubchainRegisterSession) GetSubchainInfo(subchainID *big.Int) (SubchainValidatorRegistrarSubchainRegisterInfo, error) {
	return _SubchainRegister.Contract.GetSubchainInfo(&_SubchainRegister.CallOpts, subchainID)
}

// GetSubchainInfo is a free data retrieval call binding the contract method 0x9c9ec4e5.
//
// Solidity: function getSubchainInfo(uint256 subchainID) view returns((uint256,address,uint256,address,address,string,uint8))
func (_SubchainRegister *SubchainRegisterCallerSession) GetSubchainInfo(subchainID *big.Int) (SubchainValidatorRegistrarSubchainRegisterInfo, error) {
	return _SubchainRegister.Contract.GetSubchainInfo(&_SubchainRegister.CallOpts, subchainID)
}

// GetSubchainTokenAtAddresss is a free data retrieval call binding the contract method 0xc598d4ce.
//
// Solidity: function getSubchainTokenAtAddresss(uint256 subchainID, address fromaddress) view returns(uint256)
func (_SubchainRegister *SubchainRegisterCaller) GetSubchainTokenAtAddresss(opts *bind.CallOpts, subchainID *big.Int, fromaddress common.Address) (*big.Int, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "getSubchainTokenAtAddresss", subchainID, fromaddress)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetSubchainTokenAtAddresss is a free data retrieval call binding the contract method 0xc598d4ce.
//
// Solidity: function getSubchainTokenAtAddresss(uint256 subchainID, address fromaddress) view returns(uint256)
func (_SubchainRegister *SubchainRegisterSession) GetSubchainTokenAtAddresss(subchainID *big.Int, fromaddress common.Address) (*big.Int, error) {
	return _SubchainRegister.Contract.GetSubchainTokenAtAddresss(&_SubchainRegister.CallOpts, subchainID, fromaddress)
}

// GetSubchainTokenAtAddresss is a free data retrieval call binding the contract method 0xc598d4ce.
//
// Solidity: function getSubchainTokenAtAddresss(uint256 subchainID, address fromaddress) view returns(uint256)
func (_SubchainRegister *SubchainRegisterCallerSession) GetSubchainTokenAtAddresss(subchainID *big.Int, fromaddress common.Address) (*big.Int, error) {
	return _SubchainRegister.Contract.GetSubchainTokenAtAddresss(&_SubchainRegister.CallOpts, subchainID, fromaddress)
}

// GetValidatorAndStakeSetWithBlockHeight is a free data retrieval call binding the contract method 0xc8248b5f.
//
// Solidity: function getValidatorAndStakeSetWithBlockHeight(uint256 subchainID, uint256 blockHeight) view returns(address[], uint256[])
func (_SubchainRegister *SubchainRegisterCaller) GetValidatorAndStakeSetWithBlockHeight(opts *bind.CallOpts, subchainID *big.Int, blockHeight *big.Int) ([]common.Address, []*big.Int, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "getValidatorAndStakeSetWithBlockHeight", subchainID, blockHeight)

	if err != nil {
		return *new([]common.Address), *new([]*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)
	out1 := *abi.ConvertType(out[1], new([]*big.Int)).(*[]*big.Int)

	return out0, out1, err

}

// GetValidatorAndStakeSetWithBlockHeight is a free data retrieval call binding the contract method 0xc8248b5f.
//
// Solidity: function getValidatorAndStakeSetWithBlockHeight(uint256 subchainID, uint256 blockHeight) view returns(address[], uint256[])
func (_SubchainRegister *SubchainRegisterSession) GetValidatorAndStakeSetWithBlockHeight(subchainID *big.Int, blockHeight *big.Int) ([]common.Address, []*big.Int, error) {
	return _SubchainRegister.Contract.GetValidatorAndStakeSetWithBlockHeight(&_SubchainRegister.CallOpts, subchainID, blockHeight)
}

// GetValidatorAndStakeSetWithBlockHeight is a free data retrieval call binding the contract method 0xc8248b5f.
//
// Solidity: function getValidatorAndStakeSetWithBlockHeight(uint256 subchainID, uint256 blockHeight) view returns(address[], uint256[])
func (_SubchainRegister *SubchainRegisterCallerSession) GetValidatorAndStakeSetWithBlockHeight(subchainID *big.Int, blockHeight *big.Int) ([]common.Address, []*big.Int, error) {
	return _SubchainRegister.Contract.GetValidatorAndStakeSetWithBlockHeight(&_SubchainRegister.CallOpts, subchainID, blockHeight)
}

// GetValidatorCheckpoint is a free data retrieval call binding the contract method 0x912d40ad.
//
// Solidity: function getValidatorCheckpoint(uint256 subchainID, address validatorCandidate) view returns((uint256,uint256))
func (_SubchainRegister *SubchainRegisterCaller) GetValidatorCheckpoint(opts *bind.CallOpts, subchainID *big.Int, validatorCandidate common.Address) (SubchainValidatorRegistrarSubchainValidatorCandidateCheckpoint, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "getValidatorCheckpoint", subchainID, validatorCandidate)

	if err != nil {
		return *new(SubchainValidatorRegistrarSubchainValidatorCandidateCheckpoint), err
	}

	out0 := *abi.ConvertType(out[0], new(SubchainValidatorRegistrarSubchainValidatorCandidateCheckpoint)).(*SubchainValidatorRegistrarSubchainValidatorCandidateCheckpoint)

	return out0, err

}

// GetValidatorCheckpoint is a free data retrieval call binding the contract method 0x912d40ad.
//
// Solidity: function getValidatorCheckpoint(uint256 subchainID, address validatorCandidate) view returns((uint256,uint256))
func (_SubchainRegister *SubchainRegisterSession) GetValidatorCheckpoint(subchainID *big.Int, validatorCandidate common.Address) (SubchainValidatorRegistrarSubchainValidatorCandidateCheckpoint, error) {
	return _SubchainRegister.Contract.GetValidatorCheckpoint(&_SubchainRegister.CallOpts, subchainID, validatorCandidate)
}

// GetValidatorCheckpoint is a free data retrieval call binding the contract method 0x912d40ad.
//
// Solidity: function getValidatorCheckpoint(uint256 subchainID, address validatorCandidate) view returns((uint256,uint256))
func (_SubchainRegister *SubchainRegisterCallerSession) GetValidatorCheckpoint(subchainID *big.Int, validatorCandidate common.Address) (SubchainValidatorRegistrarSubchainValidatorCandidateCheckpoint, error) {
	return _SubchainRegister.Contract.GetValidatorCheckpoint(&_SubchainRegister.CallOpts, subchainID, validatorCandidate)
}

// GetValidatorCheckpointNumber is a free data retrieval call binding the contract method 0xfc809864.
//
// Solidity: function getValidatorCheckpointNumber(uint256 subchainID, address validatorCandidate) view returns(uint256)
func (_SubchainRegister *SubchainRegisterCaller) GetValidatorCheckpointNumber(opts *bind.CallOpts, subchainID *big.Int, validatorCandidate common.Address) (*big.Int, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "getValidatorCheckpointNumber", subchainID, validatorCandidate)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetValidatorCheckpointNumber is a free data retrieval call binding the contract method 0xfc809864.
//
// Solidity: function getValidatorCheckpointNumber(uint256 subchainID, address validatorCandidate) view returns(uint256)
func (_SubchainRegister *SubchainRegisterSession) GetValidatorCheckpointNumber(subchainID *big.Int, validatorCandidate common.Address) (*big.Int, error) {
	return _SubchainRegister.Contract.GetValidatorCheckpointNumber(&_SubchainRegister.CallOpts, subchainID, validatorCandidate)
}

// GetValidatorCheckpointNumber is a free data retrieval call binding the contract method 0xfc809864.
//
// Solidity: function getValidatorCheckpointNumber(uint256 subchainID, address validatorCandidate) view returns(uint256)
func (_SubchainRegister *SubchainRegisterCallerSession) GetValidatorCheckpointNumber(subchainID *big.Int, validatorCandidate common.Address) (*big.Int, error) {
	return _SubchainRegister.Contract.GetValidatorCheckpointNumber(&_SubchainRegister.CallOpts, subchainID, validatorCandidate)
}

// IsSubchainActive is a free data retrieval call binding the contract method 0x39b913ee.
//
// Solidity: function isSubchainActive(uint256 subchainID, uint256 blockHeight) view returns(bool)
func (_SubchainRegister *SubchainRegisterCaller) IsSubchainActive(opts *bind.CallOpts, subchainID *big.Int, blockHeight *big.Int) (bool, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "isSubchainActive", subchainID, blockHeight)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsSubchainActive is a free data retrieval call binding the contract method 0x39b913ee.
//
// Solidity: function isSubchainActive(uint256 subchainID, uint256 blockHeight) view returns(bool)
func (_SubchainRegister *SubchainRegisterSession) IsSubchainActive(subchainID *big.Int, blockHeight *big.Int) (bool, error) {
	return _SubchainRegister.Contract.IsSubchainActive(&_SubchainRegister.CallOpts, subchainID, blockHeight)
}

// IsSubchainActive is a free data retrieval call binding the contract method 0x39b913ee.
//
// Solidity: function isSubchainActive(uint256 subchainID, uint256 blockHeight) view returns(bool)
func (_SubchainRegister *SubchainRegisterCallerSession) IsSubchainActive(subchainID *big.Int, blockHeight *big.Int) (bool, error) {
	return _SubchainRegister.Contract.IsSubchainActive(&_SubchainRegister.CallOpts, subchainID, blockHeight)
}

// IsSubchainValidatorCandidateActive is a free data retrieval call binding the contract method 0xdd4d452f.
//
// Solidity: function isSubchainValidatorCandidateActive(uint256 subchainID, address validatorCandidateAddress, uint256 blockHeight) view returns(bool)
func (_SubchainRegister *SubchainRegisterCaller) IsSubchainValidatorCandidateActive(opts *bind.CallOpts, subchainID *big.Int, validatorCandidateAddress common.Address, blockHeight *big.Int) (bool, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "isSubchainValidatorCandidateActive", subchainID, validatorCandidateAddress, blockHeight)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsSubchainValidatorCandidateActive is a free data retrieval call binding the contract method 0xdd4d452f.
//
// Solidity: function isSubchainValidatorCandidateActive(uint256 subchainID, address validatorCandidateAddress, uint256 blockHeight) view returns(bool)
func (_SubchainRegister *SubchainRegisterSession) IsSubchainValidatorCandidateActive(subchainID *big.Int, validatorCandidateAddress common.Address, blockHeight *big.Int) (bool, error) {
	return _SubchainRegister.Contract.IsSubchainValidatorCandidateActive(&_SubchainRegister.CallOpts, subchainID, validatorCandidateAddress, blockHeight)
}

// IsSubchainValidatorCandidateActive is a free data retrieval call binding the contract method 0xdd4d452f.
//
// Solidity: function isSubchainValidatorCandidateActive(uint256 subchainID, address validatorCandidateAddress, uint256 blockHeight) view returns(bool)
func (_SubchainRegister *SubchainRegisterCallerSession) IsSubchainValidatorCandidateActive(subchainID *big.Int, validatorCandidateAddress common.Address, blockHeight *big.Int) (bool, error) {
	return _SubchainRegister.Contract.IsSubchainValidatorCandidateActive(&_SubchainRegister.CallOpts, subchainID, validatorCandidateAddress, blockHeight)
}

// Publisher is a free data retrieval call binding the contract method 0x8c72c54e.
//
// Solidity: function publisher() view returns(address)
func (_SubchainRegister *SubchainRegisterCaller) Publisher(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "publisher")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Publisher is a free data retrieval call binding the contract method 0x8c72c54e.
//
// Solidity: function publisher() view returns(address)
func (_SubchainRegister *SubchainRegisterSession) Publisher() (common.Address, error) {
	return _SubchainRegister.Contract.Publisher(&_SubchainRegister.CallOpts)
}

// Publisher is a free data retrieval call binding the contract method 0x8c72c54e.
//
// Solidity: function publisher() view returns(address)
func (_SubchainRegister *SubchainRegisterCallerSession) Publisher() (common.Address, error) {
	return _SubchainRegister.Contract.Publisher(&_SubchainRegister.CallOpts)
}

// DepositCollateral is a paid mutator transaction binding the contract method 0xa5d5db0c.
//
// Solidity: function depositCollateral(address validatorCandidate, uint256 subchainID) payable returns()
func (_SubchainRegister *SubchainRegisterTransactor) DepositCollateral(opts *bind.TransactOpts, validatorCandidate common.Address, subchainID *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.contract.Transact(opts, "depositCollateral", validatorCandidate, subchainID)
}

// DepositCollateral is a paid mutator transaction binding the contract method 0xa5d5db0c.
//
// Solidity: function depositCollateral(address validatorCandidate, uint256 subchainID) payable returns()
func (_SubchainRegister *SubchainRegisterSession) DepositCollateral(validatorCandidate common.Address, subchainID *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.Contract.DepositCollateral(&_SubchainRegister.TransactOpts, validatorCandidate, subchainID)
}

// DepositCollateral is a paid mutator transaction binding the contract method 0xa5d5db0c.
//
// Solidity: function depositCollateral(address validatorCandidate, uint256 subchainID) payable returns()
func (_SubchainRegister *SubchainRegisterTransactorSession) DepositCollateral(validatorCandidate common.Address, subchainID *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.Contract.DepositCollateral(&_SubchainRegister.TransactOpts, validatorCandidate, subchainID)
}

// RegisterSubchainID is a paid mutator transaction binding the contract method 0x6da486ec.
//
// Solidity: function registerSubchainID(uint256 subchainID, address ERC20Address, string genesisBlockHash) payable returns()
func (_SubchainRegister *SubchainRegisterTransactor) RegisterSubchainID(opts *bind.TransactOpts, subchainID *big.Int, ERC20Address common.Address, genesisBlockHash string) (*types.Transaction, error) {
	return _SubchainRegister.contract.Transact(opts, "registerSubchainID", subchainID, ERC20Address, genesisBlockHash)
}

// RegisterSubchainID is a paid mutator transaction binding the contract method 0x6da486ec.
//
// Solidity: function registerSubchainID(uint256 subchainID, address ERC20Address, string genesisBlockHash) payable returns()
func (_SubchainRegister *SubchainRegisterSession) RegisterSubchainID(subchainID *big.Int, ERC20Address common.Address, genesisBlockHash string) (*types.Transaction, error) {
	return _SubchainRegister.Contract.RegisterSubchainID(&_SubchainRegister.TransactOpts, subchainID, ERC20Address, genesisBlockHash)
}

// RegisterSubchainID is a paid mutator transaction binding the contract method 0x6da486ec.
//
// Solidity: function registerSubchainID(uint256 subchainID, address ERC20Address, string genesisBlockHash) payable returns()
func (_SubchainRegister *SubchainRegisterTransactorSession) RegisterSubchainID(subchainID *big.Int, ERC20Address common.Address, genesisBlockHash string) (*types.Transaction, error) {
	return _SubchainRegister.Contract.RegisterSubchainID(&_SubchainRegister.TransactOpts, subchainID, ERC20Address, genesisBlockHash)
}

// UpdateMinCollateralAmount is a paid mutator transaction binding the contract method 0xf6fbe6f0.
//
// Solidity: function updateMinCollateralAmount(uint256 value) returns()
func (_SubchainRegister *SubchainRegisterTransactor) UpdateMinCollateralAmount(opts *bind.TransactOpts, value *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.contract.Transact(opts, "updateMinCollateralAmount", value)
}

// UpdateMinCollateralAmount is a paid mutator transaction binding the contract method 0xf6fbe6f0.
//
// Solidity: function updateMinCollateralAmount(uint256 value) returns()
func (_SubchainRegister *SubchainRegisterSession) UpdateMinCollateralAmount(value *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.Contract.UpdateMinCollateralAmount(&_SubchainRegister.TransactOpts, value)
}

// UpdateMinCollateralAmount is a paid mutator transaction binding the contract method 0xf6fbe6f0.
//
// Solidity: function updateMinCollateralAmount(uint256 value) returns()
func (_SubchainRegister *SubchainRegisterTransactorSession) UpdateMinCollateralAmount(value *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.Contract.UpdateMinCollateralAmount(&_SubchainRegister.TransactOpts, value)
}

// UpdateMinMinNumValidators is a paid mutator transaction binding the contract method 0x6c671b14.
//
// Solidity: function updateMinMinNumValidators(uint256 value) returns()
func (_SubchainRegister *SubchainRegisterTransactor) UpdateMinMinNumValidators(opts *bind.TransactOpts, value *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.contract.Transact(opts, "updateMinMinNumValidators", value)
}

// UpdateMinMinNumValidators is a paid mutator transaction binding the contract method 0x6c671b14.
//
// Solidity: function updateMinMinNumValidators(uint256 value) returns()
func (_SubchainRegister *SubchainRegisterSession) UpdateMinMinNumValidators(value *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.Contract.UpdateMinMinNumValidators(&_SubchainRegister.TransactOpts, value)
}

// UpdateMinMinNumValidators is a paid mutator transaction binding the contract method 0x6c671b14.
//
// Solidity: function updateMinMinNumValidators(uint256 value) returns()
func (_SubchainRegister *SubchainRegisterTransactorSession) UpdateMinMinNumValidators(value *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.Contract.UpdateMinMinNumValidators(&_SubchainRegister.TransactOpts, value)
}

// UpdateMinPersonalCollateralAmount is a paid mutator transaction binding the contract method 0x8289518d.
//
// Solidity: function updateMinPersonalCollateralAmount(uint256 value) returns()
func (_SubchainRegister *SubchainRegisterTransactor) UpdateMinPersonalCollateralAmount(opts *bind.TransactOpts, value *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.contract.Transact(opts, "updateMinPersonalCollateralAmount", value)
}

// UpdateMinPersonalCollateralAmount is a paid mutator transaction binding the contract method 0x8289518d.
//
// Solidity: function updateMinPersonalCollateralAmount(uint256 value) returns()
func (_SubchainRegister *SubchainRegisterSession) UpdateMinPersonalCollateralAmount(value *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.Contract.UpdateMinPersonalCollateralAmount(&_SubchainRegister.TransactOpts, value)
}

// UpdateMinPersonalCollateralAmount is a paid mutator transaction binding the contract method 0x8289518d.
//
// Solidity: function updateMinPersonalCollateralAmount(uint256 value) returns()
func (_SubchainRegister *SubchainRegisterTransactorSession) UpdateMinPersonalCollateralAmount(value *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.Contract.UpdateMinPersonalCollateralAmount(&_SubchainRegister.TransactOpts, value)
}

// WithdrawCollateral is a paid mutator transaction binding the contract method 0x3d3a066f.
//
// Solidity: function withdrawCollateral(address validatorCandidate, uint256 subchainID, uint256 withdrawalAmount) returns()
func (_SubchainRegister *SubchainRegisterTransactor) WithdrawCollateral(opts *bind.TransactOpts, validatorCandidate common.Address, subchainID *big.Int, withdrawalAmount *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.contract.Transact(opts, "withdrawCollateral", validatorCandidate, subchainID, withdrawalAmount)
}

// WithdrawCollateral is a paid mutator transaction binding the contract method 0x3d3a066f.
//
// Solidity: function withdrawCollateral(address validatorCandidate, uint256 subchainID, uint256 withdrawalAmount) returns()
func (_SubchainRegister *SubchainRegisterSession) WithdrawCollateral(validatorCandidate common.Address, subchainID *big.Int, withdrawalAmount *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.Contract.WithdrawCollateral(&_SubchainRegister.TransactOpts, validatorCandidate, subchainID, withdrawalAmount)
}

// WithdrawCollateral is a paid mutator transaction binding the contract method 0x3d3a066f.
//
// Solidity: function withdrawCollateral(address validatorCandidate, uint256 subchainID, uint256 withdrawalAmount) returns()
func (_SubchainRegister *SubchainRegisterTransactorSession) WithdrawCollateral(validatorCandidate common.Address, subchainID *big.Int, withdrawalAmount *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.Contract.WithdrawCollateral(&_SubchainRegister.TransactOpts, validatorCandidate, subchainID, withdrawalAmount)
}
