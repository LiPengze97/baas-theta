package predeployed

import (
	"github.com/thetatoken/theta/ledger/types"
	"github.com/thetatoken/theta/rlp"

	score "github.com/thetatoken/thetasubchain/core"
	slst "github.com/thetatoken/thetasubchain/ledger/state"
	stypes "github.com/thetatoken/thetasubchain/ledger/types"
)

// Bytecode of the smart contracts hardcoded in the genesis block through pre-deployment
const TFuelTokenBankContractBytecode = "608060405234801561001057600080fd5b506110d8806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806360569b5e1161006657806360569b5e14610180578063812ffd75146101b1578063a2cc6981146101cd578063ebda9962146101fd578063f6a3d24e1461022d5761009e565b80631527b14d146100a3578063261a323e146100d457806327ca4df1146101045780633534eeed14610134578063588b140814610150575b600080fd5b6100bd60048036038101906100b891906109fa565b61025d565b6040516100cb929190610a9f565b60405180910390f35b6100ee60048036038101906100e991906109fa565b6102c4565b6040516100fb9190610ac8565b60405180910390f35b61011e60048036038101906101199190610b19565b6102fb565b60405161012b9190610b46565b60405180910390f35b61014e60048036038101906101499190610c2e565b61033a565b005b61016a60048036038101906101659190610b19565b610405565b6040516101779190610d55565b60405180910390f35b61019a60048036038101906101959190610d77565b6104b1565b6040516101a8929190610da4565b60405180910390f35b6101cb60048036038101906101c69190610dd4565b61056a565b005b6101e760048036038101906101e291906109fa565b610628565b6040516101f49190610b46565b60405180910390f35b61021760048036038101906102129190610d77565b6106e9565b6040516102249190610d55565b60405180910390f35b61024760048036038101906102429190610d77565b610816565b6040516102549190610ac8565b60405180910390f35b6000818051602081018201805184825260208301602085012081835280955050505050506000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900460ff16905082565b600080826040516102d59190610e9b565b908152602001604051809103902060000160149054906101000a900460ff169050919050565b6002818154811061030b57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6103438161086f565b610382576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037990610f24565b60405180910390fd5b600061038d82610876565b90506103998482610898565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f3b9ebdb53ea32464f35bc6fa7ccb568c358ffa83792563d8c97bf043a99ee6b6836040516103f69190610f53565b60405180910390a35050505050565b6003818154811061041557600080fd5b90600052602060002001600091509050805461043090610f9d565b80601f016020809104026020016040519081016040528092919081815260200182805461045c90610f9d565b80156104a95780601f1061047e576101008083540402835291602001916104a9565b820191906000526020600020905b81548152906001019060200180831161048c57829003601f168201915b505050505081565b60016020528060005260406000206000915090508060000180546104d490610f9d565b80601f016020809104026020016040519081016040528092919081815260200182805461050090610f9d565b801561054d5780601f106105225761010080835404028352916020019161054d565b820191906000526020600020905b81548152906001019060200180831161053057829003601f168201915b5050505050908060010160009054906101000a900460ff16905082565b600061057557600080fd5b61057e8161086f565b6105bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b490611040565b60405180910390fd5b60006105c882610876565b90506105d4838261089c565b8273ffffffffffffffffffffffffffffffffffffffff167fed2a6b76dd30ca61a3c463f15ebbe687c91c02dad5ceea323d771ae5e780e3d18260405161061a9190610f53565b60405180910390a250505050565b60008060008360405161063b9190610e9b565b90815260200160405180910390206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff16151515158152505090508060200151156106de5780600001519150506106e4565b60009150505b919050565b60606000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180604001604052908160008201805461074790610f9d565b80601f016020809104026020016040519081016040528092919081815260200182805461077390610f9d565b80156107c05780601f10610795576101008083540402835291602001916107c0565b820191906000526020600020905b8154815290600101906020018083116107a357829003601f168201915b505050505081526020016001820160009054906101000a900460ff16151515158152505090508060200151156107fd578060000151915050610811565b604051806020016040528060008152509150505b919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff169050919050565b6000919050565b6000808280602001905181019061088d9190611075565b905080915050919050565b5050565b5050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610907826108be565b810181811067ffffffffffffffff82111715610926576109256108cf565b5b80604052505050565b60006109396108a0565b905061094582826108fe565b919050565b600067ffffffffffffffff821115610965576109646108cf565b5b61096e826108be565b9050602081019050919050565b82818337600083830152505050565b600061099d6109988461094a565b61092f565b9050828152602081018484840111156109b9576109b86108b9565b5b6109c484828561097b565b509392505050565b600082601f8301126109e1576109e06108b4565b5b81356109f184826020860161098a565b91505092915050565b600060208284031215610a1057610a0f6108aa565b5b600082013567ffffffffffffffff811115610a2e57610a2d6108af565b5b610a3a848285016109cc565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a6e82610a43565b9050919050565b610a7e81610a63565b82525050565b60008115159050919050565b610a9981610a84565b82525050565b6000604082019050610ab46000830185610a75565b610ac16020830184610a90565b9392505050565b6000602082019050610add6000830184610a90565b92915050565b6000819050919050565b610af681610ae3565b8114610b0157600080fd5b50565b600081359050610b1381610aed565b92915050565b600060208284031215610b2f57610b2e6108aa565b5b6000610b3d84828501610b04565b91505092915050565b6000602082019050610b5b6000830184610a75565b92915050565b610b6a81610a63565b8114610b7557600080fd5b50565b600081359050610b8781610b61565b92915050565b600067ffffffffffffffff821115610ba857610ba76108cf565b5b610bb1826108be565b9050602081019050919050565b6000610bd1610bcc84610b8d565b61092f565b905082815260208101848484011115610bed57610bec6108b9565b5b610bf884828561097b565b509392505050565b600082601f830112610c1557610c146108b4565b5b8135610c25848260208601610bbe565b91505092915050565b60008060008060808587031215610c4857610c476108aa565b5b600085013567ffffffffffffffff811115610c6657610c656108af565b5b610c72878288016109cc565b9450506020610c8387828801610b78565b9350506040610c9487828801610b78565b925050606085013567ffffffffffffffff811115610cb557610cb46108af565b5b610cc187828801610c00565b91505092959194509250565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d07578082015181840152602081019050610cec565b83811115610d16576000848401525b50505050565b6000610d2782610ccd565b610d318185610cd8565b9350610d41818560208601610ce9565b610d4a816108be565b840191505092915050565b60006020820190508181036000830152610d6f8184610d1c565b905092915050565b600060208284031215610d8d57610d8c6108aa565b5b6000610d9b84828501610b78565b91505092915050565b60006040820190508181036000830152610dbe8185610d1c565b9050610dcd6020830184610a90565b9392505050565b600080600060608486031215610ded57610dec6108aa565b5b600084013567ffffffffffffffff811115610e0b57610e0a6108af565b5b610e17868287016109cc565b9350506020610e2886828701610b78565b925050604084013567ffffffffffffffff811115610e4957610e486108af565b5b610e5586828701610c00565b9150509250925092565b600081905092915050565b6000610e7582610ccd565b610e7f8185610e5f565b9350610e8f818560208601610ce9565b80840191505092915050565b6000610ea78284610e6a565b915081905092915050565b7f537562636861696e544675656c546f6b656e42616e6b2e6275726e566f75636860008201527f6572733a2064617461206973206e6f742076616c696400000000000000000000602082015250565b6000610f0e603683610cd8565b9150610f1982610eb2565b604082019050919050565b60006020820190508181036000830152610f3d81610f01565b9050919050565b610f4d81610ae3565b82525050565b6000602082019050610f686000830184610f44565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610fb557607f821691505b602082108103610fc857610fc7610f6e565b5b50919050565b7f537562636861696e544675656c546f6b656e42616e6b2e6d696e74566f75636860008201527f6572733a2064617461206973206e6f742076616c696400000000000000000000602082015250565b600061102a603683610cd8565b915061103582610fce565b604082019050919050565b600060208201905081810360008301526110598161101d565b9050919050565b60008151905061106f81610aed565b92915050565b60006020828403121561108b5761108a6108aa565b5b600061109984828501611060565b9150509291505056fea2646970667358221220d3ef76644a467dbfecf38b2f85c3784369ba89ed7f6c9fdbbdced961e2587b0264736f6c634300080d0033"

// TFuelTokenBank implements the TokenBank interface.
type TFuelTokenBank struct {
}

func NewTFuelTokenBank() *TFuelTokenBank {
	return &TFuelTokenBank{}
}

// Mint vouchers for the token transferred cross-chain. If the voucher contract for the token does not yet exist, the
// TokenBank contract deploys the the vouncher contract first and then mints the vouchers in the same call.
func (tb *TFuelTokenBank) GetMintVouchersProxySctx(sourceChainID string, view *slst.StoreView, tx *stypes.CrossChainTransferTx) (*types.SmartContractTx, error) {
	proposerAddr := tx.Proposer.Address
	voucherReceiver := tx.Event.Receiver
	amount := tx.Event.Amount
	callData, err := rlp.EncodeToBytes([]interface{}{
		mintVouchersFuncSelector,
		[]byte(score.TFuelDenom(sourceChainID)),
		voucherReceiver.Bytes(),
		amount.Bytes(),
	})
	if err != nil {
		return nil, err
	}

	tfuelTokenBankContractAddr := view.GetTFuelTokenBankContractAddress()
	sctx, err := constructProxySmartContractTx(proposerAddr, *tfuelTokenBankContractAddr, callData)
	if err != nil {
		return nil, err
	}

	return sctx, nil
}
