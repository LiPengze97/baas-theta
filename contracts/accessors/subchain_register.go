// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contracts

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/thetatoken/thetasubchain/eth"
	"github.com/thetatoken/thetasubchain/eth/abi"
	"github.com/thetatoken/thetasubchain/eth/abi/bind"
	"github.com/thetatoken/thetasubchain/eth/core/types"
	"github.com/thetatoken/thetasubchain/eth/event"

	"github.com/thetatoken/theta/common"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// SubchainValidatorRegistrarSubchainCheckpoint is an auto generated low-level Go binding around an user-defined struct.
type SubchainValidatorRegistrarSubchainCheckpoint struct {
	BlockHeight                    *big.Int
	Amount                         *big.Int
	LegalValidatorCandidateCounter *big.Int
}

// SubchainValidatorRegistrarSubchainRegisterInfo is an auto generated low-level Go binding around an user-defined struct.
type SubchainValidatorRegistrarSubchainRegisterInfo struct {
	SubchainID       *big.Int
	OwnerAddress     common.Address
	RegisterPrice    *big.Int
	ERC20Address     common.Address
	Erc20            common.Address
	GenesisBlockHash string
	State            uint8
}

// SubchainValidatorRegistrarSubchainValidatorCandidateCheckpoint is an auto generated low-level Go binding around an user-defined struct.
type SubchainValidatorRegistrarSubchainValidatorCandidateCheckpoint struct {
	BlockHeight *big.Int
	Amount      *big.Int
}

// SubchainRegisterMetaData contains all meta data concerning the SubchainRegister contract.
var SubchainRegisterMetaData = &bind.MetaData{
	ABI: "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eventNonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SendToSubchainEvent\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_CHAIN_ID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_CHAIN_ID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_COLLATERAL_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_NUM_VALIDATORS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_PERSONAL_COLLATERAL_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"publisher\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"state_lastEventNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"subchainHistory\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockHeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"legalValidatorCandidateCounter\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"subchainRegisterInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"ownerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"registerPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"ERC20Address\",\"type\":\"address\"},{\"internalType\":\"contractERC20\",\"name\":\"erc20\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"genesisBlockHash\",\"type\":\"string\"},{\"internalType\":\"enumSubchainValidatorRegistrar.SubchainState\",\"name\":\"state\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"validatorSetHistory\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockHeight\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"updateMinCollateralAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"updateMinMinNumValidators\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"updateMinPersonalCollateralAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"ERC20Address\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"genesisBlockHash\",\"type\":\"string\"}],\"name\":\"registerSubchainID\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"validatorCandidate\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"}],\"name\":\"depositCollateral\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"validatorCandidate\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockHeight\",\"type\":\"uint256\"}],\"name\":\"isSubchainActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"validatorCandidateAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockHeight\",\"type\":\"uint256\"}],\"name\":\"isSubchainValidatorCandidateActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockHeight\",\"type\":\"uint256\"}],\"name\":\"getValidatorAndStakeSetWithBlockHeight\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"}],\"name\":\"sendToSubchain\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"}],\"name\":\"getLegalValidators\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"validatorCandidate\",\"type\":\"address\"}],\"name\":\"getValidatorCheckpoint\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"blockHeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"structSubchainValidatorRegistrar.SubchainValidatorCandidateCheckpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"validatorCandidate\",\"type\":\"address\"}],\"name\":\"getValidatorCheckpointNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"}],\"name\":\"getSubchainCheckpoint\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"blockHeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"legalValidatorCandidateCounter\",\"type\":\"uint256\"}],\"internalType\":\"structSubchainValidatorRegistrar.SubchainCheckpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"}],\"name\":\"getSubchainInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"ownerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"registerPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"ERC20Address\",\"type\":\"address\"},{\"internalType\":\"contractERC20\",\"name\":\"erc20\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"genesisBlockHash\",\"type\":\"string\"},{\"internalType\":\"enumSubchainValidatorRegistrar.SubchainState\",\"name\":\"state\",\"type\":\"uint8\"}],\"internalType\":\"structSubchainValidatorRegistrar.SubchainRegisterInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"}],\"name\":\"isSubchainIDValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromaddress\",\"type\":\"address\"}],\"name\":\"getSubchainTokenAtAddresss\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"}],\"name\":\"getERCValidator\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"splitSignature\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_theHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"verifySig\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"dynasty\",\"type\":\"uint256\"}],\"name\":\"isValidatorAtDynasty\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]",
	Bin: "",
}

// SubchainRegisterABI is the input ABI used to generate the binding from.
// Deprecated: Use SubchainRegisterMetaData.ABI instead.
var SubchainRegisterABI = SubchainRegisterMetaData.ABI

// SubchainRegisterBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use SubchainRegisterMetaData.Bin instead.
var SubchainRegisterBin = SubchainRegisterMetaData.Bin

// DeploySubchainRegister deploys a new Ethereum contract, binding an instance of SubchainRegister to it.
func DeploySubchainRegister(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *SubchainRegister, error) {
	parsed, err := SubchainRegisterMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(SubchainRegisterBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &SubchainRegister{SubchainRegisterCaller: SubchainRegisterCaller{contract: contract}, SubchainRegisterTransactor: SubchainRegisterTransactor{contract: contract}, SubchainRegisterFilterer: SubchainRegisterFilterer{contract: contract}}, nil
}

// SubchainRegister is an auto generated Go binding around an Ethereum contract.
type SubchainRegister struct {
	SubchainRegisterCaller     // Read-only binding to the contract
	SubchainRegisterTransactor // Write-only binding to the contract
	SubchainRegisterFilterer   // Log filterer for contract events
}

// SubchainRegisterCaller is an auto generated read-only Go binding around an Ethereum contract.
type SubchainRegisterCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SubchainRegisterTransactor is an auto generated write-only Go binding around an Ethereum contract.
type SubchainRegisterTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SubchainRegisterFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type SubchainRegisterFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SubchainRegisterSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type SubchainRegisterSession struct {
	Contract     *SubchainRegister // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// SubchainRegisterCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type SubchainRegisterCallerSession struct {
	Contract *SubchainRegisterCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts           // Call options to use throughout this session
}

// SubchainRegisterTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type SubchainRegisterTransactorSession struct {
	Contract     *SubchainRegisterTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts           // Transaction auth options to use throughout this session
}

// SubchainRegisterRaw is an auto generated low-level Go binding around an Ethereum contract.
type SubchainRegisterRaw struct {
	Contract *SubchainRegister // Generic contract binding to access the raw methods on
}

// SubchainRegisterCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type SubchainRegisterCallerRaw struct {
	Contract *SubchainRegisterCaller // Generic read-only contract binding to access the raw methods on
}

// SubchainRegisterTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type SubchainRegisterTransactorRaw struct {
	Contract *SubchainRegisterTransactor // Generic write-only contract binding to access the raw methods on
}

// NewSubchainRegister creates a new instance of SubchainRegister, bound to a specific deployed contract.
func NewSubchainRegister(address common.Address, backend bind.ContractBackend) (*SubchainRegister, error) {
	contract, err := bindSubchainRegister(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &SubchainRegister{SubchainRegisterCaller: SubchainRegisterCaller{contract: contract}, SubchainRegisterTransactor: SubchainRegisterTransactor{contract: contract}, SubchainRegisterFilterer: SubchainRegisterFilterer{contract: contract}}, nil
}

// NewSubchainRegisterCaller creates a new read-only instance of SubchainRegister, bound to a specific deployed contract.
func NewSubchainRegisterCaller(address common.Address, caller bind.ContractCaller) (*SubchainRegisterCaller, error) {
	contract, err := bindSubchainRegister(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &SubchainRegisterCaller{contract: contract}, nil
}

// NewSubchainRegisterTransactor creates a new write-only instance of SubchainRegister, bound to a specific deployed contract.
func NewSubchainRegisterTransactor(address common.Address, transactor bind.ContractTransactor) (*SubchainRegisterTransactor, error) {
	contract, err := bindSubchainRegister(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &SubchainRegisterTransactor{contract: contract}, nil
}

// NewSubchainRegisterFilterer creates a new log filterer instance of SubchainRegister, bound to a specific deployed contract.
func NewSubchainRegisterFilterer(address common.Address, filterer bind.ContractFilterer) (*SubchainRegisterFilterer, error) {
	contract, err := bindSubchainRegister(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &SubchainRegisterFilterer{contract: contract}, nil
}

// bindSubchainRegister binds a generic wrapper to an already deployed contract.
func bindSubchainRegister(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(SubchainRegisterABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_SubchainRegister *SubchainRegisterRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _SubchainRegister.Contract.SubchainRegisterCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_SubchainRegister *SubchainRegisterRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _SubchainRegister.Contract.SubchainRegisterTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_SubchainRegister *SubchainRegisterRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _SubchainRegister.Contract.SubchainRegisterTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_SubchainRegister *SubchainRegisterCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _SubchainRegister.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_SubchainRegister *SubchainRegisterTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _SubchainRegister.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_SubchainRegister *SubchainRegisterTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _SubchainRegister.Contract.contract.Transact(opts, method, params...)
}

// MAXCHAINID is a free data retrieval call binding the contract method 0x5bc105c0.
//
// Solidity: function MAX_CHAIN_ID() view returns(uint256)
func (_SubchainRegister *SubchainRegisterCaller) MAXCHAINID(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "MAX_CHAIN_ID")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MAXCHAINID is a free data retrieval call binding the contract method 0x5bc105c0.
//
// Solidity: function MAX_CHAIN_ID() view returns(uint256)
func (_SubchainRegister *SubchainRegisterSession) MAXCHAINID() (*big.Int, error) {
	return _SubchainRegister.Contract.MAXCHAINID(&_SubchainRegister.CallOpts)
}

// MAXCHAINID is a free data retrieval call binding the contract method 0x5bc105c0.
//
// Solidity: function MAX_CHAIN_ID() view returns(uint256)
func (_SubchainRegister *SubchainRegisterCallerSession) MAXCHAINID() (*big.Int, error) {
	return _SubchainRegister.Contract.MAXCHAINID(&_SubchainRegister.CallOpts)
}

// MINCHAINID is a free data retrieval call binding the contract method 0x0df8f622.
//
// Solidity: function MIN_CHAIN_ID() view returns(uint256)
func (_SubchainRegister *SubchainRegisterCaller) MINCHAINID(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "MIN_CHAIN_ID")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MINCHAINID is a free data retrieval call binding the contract method 0x0df8f622.
//
// Solidity: function MIN_CHAIN_ID() view returns(uint256)
func (_SubchainRegister *SubchainRegisterSession) MINCHAINID() (*big.Int, error) {
	return _SubchainRegister.Contract.MINCHAINID(&_SubchainRegister.CallOpts)
}

// MINCHAINID is a free data retrieval call binding the contract method 0x0df8f622.
//
// Solidity: function MIN_CHAIN_ID() view returns(uint256)
func (_SubchainRegister *SubchainRegisterCallerSession) MINCHAINID() (*big.Int, error) {
	return _SubchainRegister.Contract.MINCHAINID(&_SubchainRegister.CallOpts)
}

// MINCOLLATERALAMOUNT is a free data retrieval call binding the contract method 0x91be4d41.
//
// Solidity: function MIN_COLLATERAL_AMOUNT() view returns(uint256)
func (_SubchainRegister *SubchainRegisterCaller) MINCOLLATERALAMOUNT(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "MIN_COLLATERAL_AMOUNT")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MINCOLLATERALAMOUNT is a free data retrieval call binding the contract method 0x91be4d41.
//
// Solidity: function MIN_COLLATERAL_AMOUNT() view returns(uint256)
func (_SubchainRegister *SubchainRegisterSession) MINCOLLATERALAMOUNT() (*big.Int, error) {
	return _SubchainRegister.Contract.MINCOLLATERALAMOUNT(&_SubchainRegister.CallOpts)
}

// MINCOLLATERALAMOUNT is a free data retrieval call binding the contract method 0x91be4d41.
//
// Solidity: function MIN_COLLATERAL_AMOUNT() view returns(uint256)
func (_SubchainRegister *SubchainRegisterCallerSession) MINCOLLATERALAMOUNT() (*big.Int, error) {
	return _SubchainRegister.Contract.MINCOLLATERALAMOUNT(&_SubchainRegister.CallOpts)
}

// MINNUMVALIDATORS is a free data retrieval call binding the contract method 0x5adc039e.
//
// Solidity: function MIN_NUM_VALIDATORS() view returns(uint256)
func (_SubchainRegister *SubchainRegisterCaller) MINNUMVALIDATORS(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "MIN_NUM_VALIDATORS")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MINNUMVALIDATORS is a free data retrieval call binding the contract method 0x5adc039e.
//
// Solidity: function MIN_NUM_VALIDATORS() view returns(uint256)
func (_SubchainRegister *SubchainRegisterSession) MINNUMVALIDATORS() (*big.Int, error) {
	return _SubchainRegister.Contract.MINNUMVALIDATORS(&_SubchainRegister.CallOpts)
}

// MINNUMVALIDATORS is a free data retrieval call binding the contract method 0x5adc039e.
//
// Solidity: function MIN_NUM_VALIDATORS() view returns(uint256)
func (_SubchainRegister *SubchainRegisterCallerSession) MINNUMVALIDATORS() (*big.Int, error) {
	return _SubchainRegister.Contract.MINNUMVALIDATORS(&_SubchainRegister.CallOpts)
}

// MINPERSONALCOLLATERALAMOUNT is a free data retrieval call binding the contract method 0xb309bb3b.
//
// Solidity: function MIN_PERSONAL_COLLATERAL_AMOUNT() view returns(uint256)
func (_SubchainRegister *SubchainRegisterCaller) MINPERSONALCOLLATERALAMOUNT(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "MIN_PERSONAL_COLLATERAL_AMOUNT")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MINPERSONALCOLLATERALAMOUNT is a free data retrieval call binding the contract method 0xb309bb3b.
//
// Solidity: function MIN_PERSONAL_COLLATERAL_AMOUNT() view returns(uint256)
func (_SubchainRegister *SubchainRegisterSession) MINPERSONALCOLLATERALAMOUNT() (*big.Int, error) {
	return _SubchainRegister.Contract.MINPERSONALCOLLATERALAMOUNT(&_SubchainRegister.CallOpts)
}

// MINPERSONALCOLLATERALAMOUNT is a free data retrieval call binding the contract method 0xb309bb3b.
//
// Solidity: function MIN_PERSONAL_COLLATERAL_AMOUNT() view returns(uint256)
func (_SubchainRegister *SubchainRegisterCallerSession) MINPERSONALCOLLATERALAMOUNT() (*big.Int, error) {
	return _SubchainRegister.Contract.MINPERSONALCOLLATERALAMOUNT(&_SubchainRegister.CallOpts)
}

// GetERCValidator is a free data retrieval call binding the contract method 0x377ea4d6.
//
// Solidity: function getERCValidator(uint256 subchainID) view returns(address[])
func (_SubchainRegister *SubchainRegisterCaller) GetERCValidator(opts *bind.CallOpts, subchainID *big.Int) ([]common.Address, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "getERCValidator", subchainID)

	if err != nil {
		return *new([]common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)

	return out0, err

}

// GetERCValidator is a free data retrieval call binding the contract method 0x377ea4d6.
//
// Solidity: function getERCValidator(uint256 subchainID) view returns(address[])
func (_SubchainRegister *SubchainRegisterSession) GetERCValidator(subchainID *big.Int) ([]common.Address, error) {
	return _SubchainRegister.Contract.GetERCValidator(&_SubchainRegister.CallOpts, subchainID)
}

// GetERCValidator is a free data retrieval call binding the contract method 0x377ea4d6.
//
// Solidity: function getERCValidator(uint256 subchainID) view returns(address[])
func (_SubchainRegister *SubchainRegisterCallerSession) GetERCValidator(subchainID *big.Int) ([]common.Address, error) {
	return _SubchainRegister.Contract.GetERCValidator(&_SubchainRegister.CallOpts, subchainID)
}

// GetLegalValidators is a free data retrieval call binding the contract method 0xd7b35658.
//
// Solidity: function getLegalValidators(uint256 subchainID) view returns(address[])
func (_SubchainRegister *SubchainRegisterCaller) GetLegalValidators(opts *bind.CallOpts, subchainID *big.Int) ([]common.Address, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "getLegalValidators", subchainID)

	if err != nil {
		return *new([]common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)

	return out0, err

}

// GetLegalValidators is a free data retrieval call binding the contract method 0xd7b35658.
//
// Solidity: function getLegalValidators(uint256 subchainID) view returns(address[])
func (_SubchainRegister *SubchainRegisterSession) GetLegalValidators(subchainID *big.Int) ([]common.Address, error) {
	return _SubchainRegister.Contract.GetLegalValidators(&_SubchainRegister.CallOpts, subchainID)
}

// GetLegalValidators is a free data retrieval call binding the contract method 0xd7b35658.
//
// Solidity: function getLegalValidators(uint256 subchainID) view returns(address[])
func (_SubchainRegister *SubchainRegisterCallerSession) GetLegalValidators(subchainID *big.Int) ([]common.Address, error) {
	return _SubchainRegister.Contract.GetLegalValidators(&_SubchainRegister.CallOpts, subchainID)
}

// GetSubchainCheckpoint is a free data retrieval call binding the contract method 0x5ce70ecc.
//
// Solidity: function getSubchainCheckpoint(uint256 subchainID) view returns((uint256,uint256,uint256))
func (_SubchainRegister *SubchainRegisterCaller) GetSubchainCheckpoint(opts *bind.CallOpts, subchainID *big.Int) (SubchainValidatorRegistrarSubchainCheckpoint, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "getSubchainCheckpoint", subchainID)

	if err != nil {
		return *new(SubchainValidatorRegistrarSubchainCheckpoint), err
	}

	out0 := *abi.ConvertType(out[0], new(SubchainValidatorRegistrarSubchainCheckpoint)).(*SubchainValidatorRegistrarSubchainCheckpoint)

	return out0, err

}

// GetSubchainCheckpoint is a free data retrieval call binding the contract method 0x5ce70ecc.
//
// Solidity: function getSubchainCheckpoint(uint256 subchainID) view returns((uint256,uint256,uint256))
func (_SubchainRegister *SubchainRegisterSession) GetSubchainCheckpoint(subchainID *big.Int) (SubchainValidatorRegistrarSubchainCheckpoint, error) {
	return _SubchainRegister.Contract.GetSubchainCheckpoint(&_SubchainRegister.CallOpts, subchainID)
}

// GetSubchainCheckpoint is a free data retrieval call binding the contract method 0x5ce70ecc.
//
// Solidity: function getSubchainCheckpoint(uint256 subchainID) view returns((uint256,uint256,uint256))
func (_SubchainRegister *SubchainRegisterCallerSession) GetSubchainCheckpoint(subchainID *big.Int) (SubchainValidatorRegistrarSubchainCheckpoint, error) {
	return _SubchainRegister.Contract.GetSubchainCheckpoint(&_SubchainRegister.CallOpts, subchainID)
}

// GetSubchainInfo is a free data retrieval call binding the contract method 0x9c9ec4e5.
//
// Solidity: function getSubchainInfo(uint256 subchainID) view returns((uint256,address,uint256,address,address,string,uint8))
func (_SubchainRegister *SubchainRegisterCaller) GetSubchainInfo(opts *bind.CallOpts, subchainID *big.Int) (SubchainValidatorRegistrarSubchainRegisterInfo, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "getSubchainInfo", subchainID)

	if err != nil {
		return *new(SubchainValidatorRegistrarSubchainRegisterInfo), err
	}

	out0 := *abi.ConvertType(out[0], new(SubchainValidatorRegistrarSubchainRegisterInfo)).(*SubchainValidatorRegistrarSubchainRegisterInfo)

	return out0, err

}

// GetSubchainInfo is a free data retrieval call binding the contract method 0x9c9ec4e5.
//
// Solidity: function getSubchainInfo(uint256 subchainID) view returns((uint256,address,uint256,address,address,string,uint8))
func (_SubchainRegister *SubchainRegisterSession) GetSubchainInfo(subchainID *big.Int) (SubchainValidatorRegistrarSubchainRegisterInfo, error) {
	return _SubchainRegister.Contract.GetSubchainInfo(&_SubchainRegister.CallOpts, subchainID)
}

// GetSubchainInfo is a free data retrieval call binding the contract method 0x9c9ec4e5.
//
// Solidity: function getSubchainInfo(uint256 subchainID) view returns((uint256,address,uint256,address,address,string,uint8))
func (_SubchainRegister *SubchainRegisterCallerSession) GetSubchainInfo(subchainID *big.Int) (SubchainValidatorRegistrarSubchainRegisterInfo, error) {
	return _SubchainRegister.Contract.GetSubchainInfo(&_SubchainRegister.CallOpts, subchainID)
}

// GetSubchainTokenAtAddresss is a free data retrieval call binding the contract method 0xc598d4ce.
//
// Solidity: function getSubchainTokenAtAddresss(uint256 subchainID, address fromaddress) view returns(uint256)
func (_SubchainRegister *SubchainRegisterCaller) GetSubchainTokenAtAddresss(opts *bind.CallOpts, subchainID *big.Int, fromaddress common.Address) (*big.Int, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "getSubchainTokenAtAddresss", subchainID, fromaddress)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetSubchainTokenAtAddresss is a free data retrieval call binding the contract method 0xc598d4ce.
//
// Solidity: function getSubchainTokenAtAddresss(uint256 subchainID, address fromaddress) view returns(uint256)
func (_SubchainRegister *SubchainRegisterSession) GetSubchainTokenAtAddresss(subchainID *big.Int, fromaddress common.Address) (*big.Int, error) {
	return _SubchainRegister.Contract.GetSubchainTokenAtAddresss(&_SubchainRegister.CallOpts, subchainID, fromaddress)
}

// GetSubchainTokenAtAddresss is a free data retrieval call binding the contract method 0xc598d4ce.
//
// Solidity: function getSubchainTokenAtAddresss(uint256 subchainID, address fromaddress) view returns(uint256)
func (_SubchainRegister *SubchainRegisterCallerSession) GetSubchainTokenAtAddresss(subchainID *big.Int, fromaddress common.Address) (*big.Int, error) {
	return _SubchainRegister.Contract.GetSubchainTokenAtAddresss(&_SubchainRegister.CallOpts, subchainID, fromaddress)
}

// GetValidatorAndStakeSetWithBlockHeight is a free data retrieval call binding the contract method 0xc8248b5f.
//
// Solidity: function getValidatorAndStakeSetWithBlockHeight(uint256 subchainID, uint256 blockHeight) view returns(address[], uint256[])
func (_SubchainRegister *SubchainRegisterCaller) GetValidatorAndStakeSetWithBlockHeight(opts *bind.CallOpts, subchainID *big.Int, blockHeight *big.Int) ([]common.Address, []*big.Int, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "getValidatorAndStakeSetWithBlockHeight", subchainID, blockHeight)

	if err != nil {
		return *new([]common.Address), *new([]*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)
	out1 := *abi.ConvertType(out[1], new([]*big.Int)).(*[]*big.Int)

	return out0, out1, err

}

// GetValidatorAndStakeSetWithBlockHeight is a free data retrieval call binding the contract method 0xc8248b5f.
//
// Solidity: function getValidatorAndStakeSetWithBlockHeight(uint256 subchainID, uint256 blockHeight) view returns(address[], uint256[])
func (_SubchainRegister *SubchainRegisterSession) GetValidatorAndStakeSetWithBlockHeight(subchainID *big.Int, blockHeight *big.Int) ([]common.Address, []*big.Int, error) {
	return _SubchainRegister.Contract.GetValidatorAndStakeSetWithBlockHeight(&_SubchainRegister.CallOpts, subchainID, blockHeight)
}

// GetValidatorAndStakeSetWithBlockHeight is a free data retrieval call binding the contract method 0xc8248b5f.
//
// Solidity: function getValidatorAndStakeSetWithBlockHeight(uint256 subchainID, uint256 blockHeight) view returns(address[], uint256[])
func (_SubchainRegister *SubchainRegisterCallerSession) GetValidatorAndStakeSetWithBlockHeight(subchainID *big.Int, blockHeight *big.Int) ([]common.Address, []*big.Int, error) {
	return _SubchainRegister.Contract.GetValidatorAndStakeSetWithBlockHeight(&_SubchainRegister.CallOpts, subchainID, blockHeight)
}

// GetValidatorCheckpoint is a free data retrieval call binding the contract method 0x912d40ad.
//
// Solidity: function getValidatorCheckpoint(uint256 subchainID, address validatorCandidate) view returns((uint256,uint256))
func (_SubchainRegister *SubchainRegisterCaller) GetValidatorCheckpoint(opts *bind.CallOpts, subchainID *big.Int, validatorCandidate common.Address) (SubchainValidatorRegistrarSubchainValidatorCandidateCheckpoint, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "getValidatorCheckpoint", subchainID, validatorCandidate)

	if err != nil {
		return *new(SubchainValidatorRegistrarSubchainValidatorCandidateCheckpoint), err
	}

	out0 := *abi.ConvertType(out[0], new(SubchainValidatorRegistrarSubchainValidatorCandidateCheckpoint)).(*SubchainValidatorRegistrarSubchainValidatorCandidateCheckpoint)

	return out0, err

}

// GetValidatorCheckpoint is a free data retrieval call binding the contract method 0x912d40ad.
//
// Solidity: function getValidatorCheckpoint(uint256 subchainID, address validatorCandidate) view returns((uint256,uint256))
func (_SubchainRegister *SubchainRegisterSession) GetValidatorCheckpoint(subchainID *big.Int, validatorCandidate common.Address) (SubchainValidatorRegistrarSubchainValidatorCandidateCheckpoint, error) {
	return _SubchainRegister.Contract.GetValidatorCheckpoint(&_SubchainRegister.CallOpts, subchainID, validatorCandidate)
}

// GetValidatorCheckpoint is a free data retrieval call binding the contract method 0x912d40ad.
//
// Solidity: function getValidatorCheckpoint(uint256 subchainID, address validatorCandidate) view returns((uint256,uint256))
func (_SubchainRegister *SubchainRegisterCallerSession) GetValidatorCheckpoint(subchainID *big.Int, validatorCandidate common.Address) (SubchainValidatorRegistrarSubchainValidatorCandidateCheckpoint, error) {
	return _SubchainRegister.Contract.GetValidatorCheckpoint(&_SubchainRegister.CallOpts, subchainID, validatorCandidate)
}

// GetValidatorCheckpointNumber is a free data retrieval call binding the contract method 0xfc809864.
//
// Solidity: function getValidatorCheckpointNumber(uint256 subchainID, address validatorCandidate) view returns(uint256)
func (_SubchainRegister *SubchainRegisterCaller) GetValidatorCheckpointNumber(opts *bind.CallOpts, subchainID *big.Int, validatorCandidate common.Address) (*big.Int, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "getValidatorCheckpointNumber", subchainID, validatorCandidate)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetValidatorCheckpointNumber is a free data retrieval call binding the contract method 0xfc809864.
//
// Solidity: function getValidatorCheckpointNumber(uint256 subchainID, address validatorCandidate) view returns(uint256)
func (_SubchainRegister *SubchainRegisterSession) GetValidatorCheckpointNumber(subchainID *big.Int, validatorCandidate common.Address) (*big.Int, error) {
	return _SubchainRegister.Contract.GetValidatorCheckpointNumber(&_SubchainRegister.CallOpts, subchainID, validatorCandidate)
}

// GetValidatorCheckpointNumber is a free data retrieval call binding the contract method 0xfc809864.
//
// Solidity: function getValidatorCheckpointNumber(uint256 subchainID, address validatorCandidate) view returns(uint256)
func (_SubchainRegister *SubchainRegisterCallerSession) GetValidatorCheckpointNumber(subchainID *big.Int, validatorCandidate common.Address) (*big.Int, error) {
	return _SubchainRegister.Contract.GetValidatorCheckpointNumber(&_SubchainRegister.CallOpts, subchainID, validatorCandidate)
}

// IsSubchainActive is a free data retrieval call binding the contract method 0x39b913ee.
//
// Solidity: function isSubchainActive(uint256 subchainID, uint256 blockHeight) view returns(bool)
func (_SubchainRegister *SubchainRegisterCaller) IsSubchainActive(opts *bind.CallOpts, subchainID *big.Int, blockHeight *big.Int) (bool, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "isSubchainActive", subchainID, blockHeight)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsSubchainActive is a free data retrieval call binding the contract method 0x39b913ee.
//
// Solidity: function isSubchainActive(uint256 subchainID, uint256 blockHeight) view returns(bool)
func (_SubchainRegister *SubchainRegisterSession) IsSubchainActive(subchainID *big.Int, blockHeight *big.Int) (bool, error) {
	return _SubchainRegister.Contract.IsSubchainActive(&_SubchainRegister.CallOpts, subchainID, blockHeight)
}

// IsSubchainActive is a free data retrieval call binding the contract method 0x39b913ee.
//
// Solidity: function isSubchainActive(uint256 subchainID, uint256 blockHeight) view returns(bool)
func (_SubchainRegister *SubchainRegisterCallerSession) IsSubchainActive(subchainID *big.Int, blockHeight *big.Int) (bool, error) {
	return _SubchainRegister.Contract.IsSubchainActive(&_SubchainRegister.CallOpts, subchainID, blockHeight)
}

// IsSubchainIDValid is a free data retrieval call binding the contract method 0x7d1daa96.
//
// Solidity: function isSubchainIDValid(uint256 subchainID) view returns(bool)
func (_SubchainRegister *SubchainRegisterCaller) IsSubchainIDValid(opts *bind.CallOpts, subchainID *big.Int) (bool, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "isSubchainIDValid", subchainID)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsSubchainIDValid is a free data retrieval call binding the contract method 0x7d1daa96.
//
// Solidity: function isSubchainIDValid(uint256 subchainID) view returns(bool)
func (_SubchainRegister *SubchainRegisterSession) IsSubchainIDValid(subchainID *big.Int) (bool, error) {
	return _SubchainRegister.Contract.IsSubchainIDValid(&_SubchainRegister.CallOpts, subchainID)
}

// IsSubchainIDValid is a free data retrieval call binding the contract method 0x7d1daa96.
//
// Solidity: function isSubchainIDValid(uint256 subchainID) view returns(bool)
func (_SubchainRegister *SubchainRegisterCallerSession) IsSubchainIDValid(subchainID *big.Int) (bool, error) {
	return _SubchainRegister.Contract.IsSubchainIDValid(&_SubchainRegister.CallOpts, subchainID)
}

// IsSubchainValidatorCandidateActive is a free data retrieval call binding the contract method 0xdd4d452f.
//
// Solidity: function isSubchainValidatorCandidateActive(uint256 subchainID, address validatorCandidateAddress, uint256 blockHeight) view returns(bool)
func (_SubchainRegister *SubchainRegisterCaller) IsSubchainValidatorCandidateActive(opts *bind.CallOpts, subchainID *big.Int, validatorCandidateAddress common.Address, blockHeight *big.Int) (bool, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "isSubchainValidatorCandidateActive", subchainID, validatorCandidateAddress, blockHeight)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsSubchainValidatorCandidateActive is a free data retrieval call binding the contract method 0xdd4d452f.
//
// Solidity: function isSubchainValidatorCandidateActive(uint256 subchainID, address validatorCandidateAddress, uint256 blockHeight) view returns(bool)
func (_SubchainRegister *SubchainRegisterSession) IsSubchainValidatorCandidateActive(subchainID *big.Int, validatorCandidateAddress common.Address, blockHeight *big.Int) (bool, error) {
	return _SubchainRegister.Contract.IsSubchainValidatorCandidateActive(&_SubchainRegister.CallOpts, subchainID, validatorCandidateAddress, blockHeight)
}

// IsSubchainValidatorCandidateActive is a free data retrieval call binding the contract method 0xdd4d452f.
//
// Solidity: function isSubchainValidatorCandidateActive(uint256 subchainID, address validatorCandidateAddress, uint256 blockHeight) view returns(bool)
func (_SubchainRegister *SubchainRegisterCallerSession) IsSubchainValidatorCandidateActive(subchainID *big.Int, validatorCandidateAddress common.Address, blockHeight *big.Int) (bool, error) {
	return _SubchainRegister.Contract.IsSubchainValidatorCandidateActive(&_SubchainRegister.CallOpts, subchainID, validatorCandidateAddress, blockHeight)
}

// IsValidatorAtDynasty is a free data retrieval call binding the contract method 0x65ef160d.
//
// Solidity: function isValidatorAtDynasty(uint256 subchainID, address sender, uint256 dynasty) view returns(bool)
func (_SubchainRegister *SubchainRegisterCaller) IsValidatorAtDynasty(opts *bind.CallOpts, subchainID *big.Int, sender common.Address, dynasty *big.Int) (bool, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "isValidatorAtDynasty", subchainID, sender, dynasty)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsValidatorAtDynasty is a free data retrieval call binding the contract method 0x65ef160d.
//
// Solidity: function isValidatorAtDynasty(uint256 subchainID, address sender, uint256 dynasty) view returns(bool)
func (_SubchainRegister *SubchainRegisterSession) IsValidatorAtDynasty(subchainID *big.Int, sender common.Address, dynasty *big.Int) (bool, error) {
	return _SubchainRegister.Contract.IsValidatorAtDynasty(&_SubchainRegister.CallOpts, subchainID, sender, dynasty)
}

// IsValidatorAtDynasty is a free data retrieval call binding the contract method 0x65ef160d.
//
// Solidity: function isValidatorAtDynasty(uint256 subchainID, address sender, uint256 dynasty) view returns(bool)
func (_SubchainRegister *SubchainRegisterCallerSession) IsValidatorAtDynasty(subchainID *big.Int, sender common.Address, dynasty *big.Int) (bool, error) {
	return _SubchainRegister.Contract.IsValidatorAtDynasty(&_SubchainRegister.CallOpts, subchainID, sender, dynasty)
}

// Publisher is a free data retrieval call binding the contract method 0x8c72c54e.
//
// Solidity: function publisher() view returns(address)
func (_SubchainRegister *SubchainRegisterCaller) Publisher(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "publisher")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Publisher is a free data retrieval call binding the contract method 0x8c72c54e.
//
// Solidity: function publisher() view returns(address)
func (_SubchainRegister *SubchainRegisterSession) Publisher() (common.Address, error) {
	return _SubchainRegister.Contract.Publisher(&_SubchainRegister.CallOpts)
}

// Publisher is a free data retrieval call binding the contract method 0x8c72c54e.
//
// Solidity: function publisher() view returns(address)
func (_SubchainRegister *SubchainRegisterCallerSession) Publisher() (common.Address, error) {
	return _SubchainRegister.Contract.Publisher(&_SubchainRegister.CallOpts)
}

// SplitSignature is a free data retrieval call binding the contract method 0xa7bb5803.
//
// Solidity: function splitSignature(bytes sig) pure returns(uint8, bytes32, bytes32)
func (_SubchainRegister *SubchainRegisterCaller) SplitSignature(opts *bind.CallOpts, sig []byte) (uint8, [32]byte, [32]byte, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "splitSignature", sig)

	if err != nil {
		return *new(uint8), *new([32]byte), *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)
	out1 := *abi.ConvertType(out[1], new([32]byte)).(*[32]byte)
	out2 := *abi.ConvertType(out[2], new([32]byte)).(*[32]byte)

	return out0, out1, out2, err

}

// SplitSignature is a free data retrieval call binding the contract method 0xa7bb5803.
//
// Solidity: function splitSignature(bytes sig) pure returns(uint8, bytes32, bytes32)
func (_SubchainRegister *SubchainRegisterSession) SplitSignature(sig []byte) (uint8, [32]byte, [32]byte, error) {
	return _SubchainRegister.Contract.SplitSignature(&_SubchainRegister.CallOpts, sig)
}

// SplitSignature is a free data retrieval call binding the contract method 0xa7bb5803.
//
// Solidity: function splitSignature(bytes sig) pure returns(uint8, bytes32, bytes32)
func (_SubchainRegister *SubchainRegisterCallerSession) SplitSignature(sig []byte) (uint8, [32]byte, [32]byte, error) {
	return _SubchainRegister.Contract.SplitSignature(&_SubchainRegister.CallOpts, sig)
}

// StateLastEventNonce is a free data retrieval call binding the contract method 0x73b20547.
//
// Solidity: function state_lastEventNonce() view returns(uint256)
func (_SubchainRegister *SubchainRegisterCaller) StateLastEventNonce(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "state_lastEventNonce")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// StateLastEventNonce is a free data retrieval call binding the contract method 0x73b20547.
//
// Solidity: function state_lastEventNonce() view returns(uint256)
func (_SubchainRegister *SubchainRegisterSession) StateLastEventNonce() (*big.Int, error) {
	return _SubchainRegister.Contract.StateLastEventNonce(&_SubchainRegister.CallOpts)
}

// StateLastEventNonce is a free data retrieval call binding the contract method 0x73b20547.
//
// Solidity: function state_lastEventNonce() view returns(uint256)
func (_SubchainRegister *SubchainRegisterCallerSession) StateLastEventNonce() (*big.Int, error) {
	return _SubchainRegister.Contract.StateLastEventNonce(&_SubchainRegister.CallOpts)
}

// SubchainHistory is a free data retrieval call binding the contract method 0x04fee065.
//
// Solidity: function subchainHistory(uint256 , uint256 ) view returns(uint256 blockHeight, uint256 amount, uint256 legalValidatorCandidateCounter)
func (_SubchainRegister *SubchainRegisterCaller) SubchainHistory(opts *bind.CallOpts, arg0 *big.Int, arg1 *big.Int) (struct {
	BlockHeight                    *big.Int
	Amount                         *big.Int
	LegalValidatorCandidateCounter *big.Int
}, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "subchainHistory", arg0, arg1)

	outstruct := new(struct {
		BlockHeight                    *big.Int
		Amount                         *big.Int
		LegalValidatorCandidateCounter *big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.BlockHeight = *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	outstruct.Amount = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	outstruct.LegalValidatorCandidateCounter = *abi.ConvertType(out[2], new(*big.Int)).(**big.Int)

	return *outstruct, err

}

// SubchainHistory is a free data retrieval call binding the contract method 0x04fee065.
//
// Solidity: function subchainHistory(uint256 , uint256 ) view returns(uint256 blockHeight, uint256 amount, uint256 legalValidatorCandidateCounter)
func (_SubchainRegister *SubchainRegisterSession) SubchainHistory(arg0 *big.Int, arg1 *big.Int) (struct {
	BlockHeight                    *big.Int
	Amount                         *big.Int
	LegalValidatorCandidateCounter *big.Int
}, error) {
	return _SubchainRegister.Contract.SubchainHistory(&_SubchainRegister.CallOpts, arg0, arg1)
}

// SubchainHistory is a free data retrieval call binding the contract method 0x04fee065.
//
// Solidity: function subchainHistory(uint256 , uint256 ) view returns(uint256 blockHeight, uint256 amount, uint256 legalValidatorCandidateCounter)
func (_SubchainRegister *SubchainRegisterCallerSession) SubchainHistory(arg0 *big.Int, arg1 *big.Int) (struct {
	BlockHeight                    *big.Int
	Amount                         *big.Int
	LegalValidatorCandidateCounter *big.Int
}, error) {
	return _SubchainRegister.Contract.SubchainHistory(&_SubchainRegister.CallOpts, arg0, arg1)
}

// SubchainRegisterInfo is a free data retrieval call binding the contract method 0xd3b16eaf.
//
// Solidity: function subchainRegisterInfo(uint256 ) view returns(uint256 subchainID, address ownerAddress, uint256 registerPrice, address ERC20Address, address erc20, string genesisBlockHash, uint8 state)
func (_SubchainRegister *SubchainRegisterCaller) SubchainRegisterInfo(opts *bind.CallOpts, arg0 *big.Int) (struct {
	SubchainID       *big.Int
	OwnerAddress     common.Address
	RegisterPrice    *big.Int
	ERC20Address     common.Address
	Erc20            common.Address
	GenesisBlockHash string
	State            uint8
}, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "subchainRegisterInfo", arg0)

	outstruct := new(struct {
		SubchainID       *big.Int
		OwnerAddress     common.Address
		RegisterPrice    *big.Int
		ERC20Address     common.Address
		Erc20            common.Address
		GenesisBlockHash string
		State            uint8
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.SubchainID = *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	outstruct.OwnerAddress = *abi.ConvertType(out[1], new(common.Address)).(*common.Address)
	outstruct.RegisterPrice = *abi.ConvertType(out[2], new(*big.Int)).(**big.Int)
	outstruct.ERC20Address = *abi.ConvertType(out[3], new(common.Address)).(*common.Address)
	outstruct.Erc20 = *abi.ConvertType(out[4], new(common.Address)).(*common.Address)
	outstruct.GenesisBlockHash = *abi.ConvertType(out[5], new(string)).(*string)
	outstruct.State = *abi.ConvertType(out[6], new(uint8)).(*uint8)

	return *outstruct, err

}

// SubchainRegisterInfo is a free data retrieval call binding the contract method 0xd3b16eaf.
//
// Solidity: function subchainRegisterInfo(uint256 ) view returns(uint256 subchainID, address ownerAddress, uint256 registerPrice, address ERC20Address, address erc20, string genesisBlockHash, uint8 state)
func (_SubchainRegister *SubchainRegisterSession) SubchainRegisterInfo(arg0 *big.Int) (struct {
	SubchainID       *big.Int
	OwnerAddress     common.Address
	RegisterPrice    *big.Int
	ERC20Address     common.Address
	Erc20            common.Address
	GenesisBlockHash string
	State            uint8
}, error) {
	return _SubchainRegister.Contract.SubchainRegisterInfo(&_SubchainRegister.CallOpts, arg0)
}

// SubchainRegisterInfo is a free data retrieval call binding the contract method 0xd3b16eaf.
//
// Solidity: function subchainRegisterInfo(uint256 ) view returns(uint256 subchainID, address ownerAddress, uint256 registerPrice, address ERC20Address, address erc20, string genesisBlockHash, uint8 state)
func (_SubchainRegister *SubchainRegisterCallerSession) SubchainRegisterInfo(arg0 *big.Int) (struct {
	SubchainID       *big.Int
	OwnerAddress     common.Address
	RegisterPrice    *big.Int
	ERC20Address     common.Address
	Erc20            common.Address
	GenesisBlockHash string
	State            uint8
}, error) {
	return _SubchainRegister.Contract.SubchainRegisterInfo(&_SubchainRegister.CallOpts, arg0)
}

// ValidatorSetHistory is a free data retrieval call binding the contract method 0xe25f37eb.
//
// Solidity: function validatorSetHistory(uint256 , uint256 ) view returns(uint256 blockHeight)
func (_SubchainRegister *SubchainRegisterCaller) ValidatorSetHistory(opts *bind.CallOpts, arg0 *big.Int, arg1 *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "validatorSetHistory", arg0, arg1)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// ValidatorSetHistory is a free data retrieval call binding the contract method 0xe25f37eb.
//
// Solidity: function validatorSetHistory(uint256 , uint256 ) view returns(uint256 blockHeight)
func (_SubchainRegister *SubchainRegisterSession) ValidatorSetHistory(arg0 *big.Int, arg1 *big.Int) (*big.Int, error) {
	return _SubchainRegister.Contract.ValidatorSetHistory(&_SubchainRegister.CallOpts, arg0, arg1)
}

// ValidatorSetHistory is a free data retrieval call binding the contract method 0xe25f37eb.
//
// Solidity: function validatorSetHistory(uint256 , uint256 ) view returns(uint256 blockHeight)
func (_SubchainRegister *SubchainRegisterCallerSession) ValidatorSetHistory(arg0 *big.Int, arg1 *big.Int) (*big.Int, error) {
	return _SubchainRegister.Contract.ValidatorSetHistory(&_SubchainRegister.CallOpts, arg0, arg1)
}

// VerifySig is a free data retrieval call binding the contract method 0x990366d4.
//
// Solidity: function verifySig(address _signer, bytes32 _theHash, uint8 v, bytes32 r, bytes32 s) pure returns(bool)
func (_SubchainRegister *SubchainRegisterCaller) VerifySig(opts *bind.CallOpts, _signer common.Address, _theHash [32]byte, v uint8, r [32]byte, s [32]byte) (bool, error) {
	var out []interface{}
	err := _SubchainRegister.contract.Call(opts, &out, "verifySig", _signer, _theHash, v, r, s)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// VerifySig is a free data retrieval call binding the contract method 0x990366d4.
//
// Solidity: function verifySig(address _signer, bytes32 _theHash, uint8 v, bytes32 r, bytes32 s) pure returns(bool)
func (_SubchainRegister *SubchainRegisterSession) VerifySig(_signer common.Address, _theHash [32]byte, v uint8, r [32]byte, s [32]byte) (bool, error) {
	return _SubchainRegister.Contract.VerifySig(&_SubchainRegister.CallOpts, _signer, _theHash, v, r, s)
}

// VerifySig is a free data retrieval call binding the contract method 0x990366d4.
//
// Solidity: function verifySig(address _signer, bytes32 _theHash, uint8 v, bytes32 r, bytes32 s) pure returns(bool)
func (_SubchainRegister *SubchainRegisterCallerSession) VerifySig(_signer common.Address, _theHash [32]byte, v uint8, r [32]byte, s [32]byte) (bool, error) {
	return _SubchainRegister.Contract.VerifySig(&_SubchainRegister.CallOpts, _signer, _theHash, v, r, s)
}

// DepositCollateral is a paid mutator transaction binding the contract method 0xa5d5db0c.
//
// Solidity: function depositCollateral(address validatorCandidate, uint256 subchainID) payable returns()
func (_SubchainRegister *SubchainRegisterTransactor) DepositCollateral(opts *bind.TransactOpts, validatorCandidate common.Address, subchainID *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.contract.Transact(opts, "depositCollateral", validatorCandidate, subchainID)
}

// DepositCollateral is a paid mutator transaction binding the contract method 0xa5d5db0c.
//
// Solidity: function depositCollateral(address validatorCandidate, uint256 subchainID) payable returns()
func (_SubchainRegister *SubchainRegisterSession) DepositCollateral(validatorCandidate common.Address, subchainID *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.Contract.DepositCollateral(&_SubchainRegister.TransactOpts, validatorCandidate, subchainID)
}

// DepositCollateral is a paid mutator transaction binding the contract method 0xa5d5db0c.
//
// Solidity: function depositCollateral(address validatorCandidate, uint256 subchainID) payable returns()
func (_SubchainRegister *SubchainRegisterTransactorSession) DepositCollateral(validatorCandidate common.Address, subchainID *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.Contract.DepositCollateral(&_SubchainRegister.TransactOpts, validatorCandidate, subchainID)
}

// RegisterSubchainID is a paid mutator transaction binding the contract method 0x6da486ec.
//
// Solidity: function registerSubchainID(uint256 subchainID, address ERC20Address, string genesisBlockHash) payable returns()
func (_SubchainRegister *SubchainRegisterTransactor) RegisterSubchainID(opts *bind.TransactOpts, subchainID *big.Int, ERC20Address common.Address, genesisBlockHash string) (*types.Transaction, error) {
	return _SubchainRegister.contract.Transact(opts, "registerSubchainID", subchainID, ERC20Address, genesisBlockHash)
}

// RegisterSubchainID is a paid mutator transaction binding the contract method 0x6da486ec.
//
// Solidity: function registerSubchainID(uint256 subchainID, address ERC20Address, string genesisBlockHash) payable returns()
func (_SubchainRegister *SubchainRegisterSession) RegisterSubchainID(subchainID *big.Int, ERC20Address common.Address, genesisBlockHash string) (*types.Transaction, error) {
	return _SubchainRegister.Contract.RegisterSubchainID(&_SubchainRegister.TransactOpts, subchainID, ERC20Address, genesisBlockHash)
}

// RegisterSubchainID is a paid mutator transaction binding the contract method 0x6da486ec.
//
// Solidity: function registerSubchainID(uint256 subchainID, address ERC20Address, string genesisBlockHash) payable returns()
func (_SubchainRegister *SubchainRegisterTransactorSession) RegisterSubchainID(subchainID *big.Int, ERC20Address common.Address, genesisBlockHash string) (*types.Transaction, error) {
	return _SubchainRegister.Contract.RegisterSubchainID(&_SubchainRegister.TransactOpts, subchainID, ERC20Address, genesisBlockHash)
}

// SendToSubchain is a paid mutator transaction binding the contract method 0xd4c67dd4.
//
// Solidity: function sendToSubchain(uint256 subchainID, address receiver, string denom) payable returns()
func (_SubchainRegister *SubchainRegisterTransactor) SendToSubchain(opts *bind.TransactOpts, subchainID *big.Int, receiver common.Address, denom string) (*types.Transaction, error) {
	return _SubchainRegister.contract.Transact(opts, "sendToSubchain", subchainID, receiver, denom)
}

// SendToSubchain is a paid mutator transaction binding the contract method 0xd4c67dd4.
//
// Solidity: function sendToSubchain(uint256 subchainID, address receiver, string denom) payable returns()
func (_SubchainRegister *SubchainRegisterSession) SendToSubchain(subchainID *big.Int, receiver common.Address, denom string) (*types.Transaction, error) {
	return _SubchainRegister.Contract.SendToSubchain(&_SubchainRegister.TransactOpts, subchainID, receiver, denom)
}

// SendToSubchain is a paid mutator transaction binding the contract method 0xd4c67dd4.
//
// Solidity: function sendToSubchain(uint256 subchainID, address receiver, string denom) payable returns()
func (_SubchainRegister *SubchainRegisterTransactorSession) SendToSubchain(subchainID *big.Int, receiver common.Address, denom string) (*types.Transaction, error) {
	return _SubchainRegister.Contract.SendToSubchain(&_SubchainRegister.TransactOpts, subchainID, receiver, denom)
}

// UpdateMinCollateralAmount is a paid mutator transaction binding the contract method 0xf6fbe6f0.
//
// Solidity: function updateMinCollateralAmount(uint256 value) returns()
func (_SubchainRegister *SubchainRegisterTransactor) UpdateMinCollateralAmount(opts *bind.TransactOpts, value *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.contract.Transact(opts, "updateMinCollateralAmount", value)
}

// UpdateMinCollateralAmount is a paid mutator transaction binding the contract method 0xf6fbe6f0.
//
// Solidity: function updateMinCollateralAmount(uint256 value) returns()
func (_SubchainRegister *SubchainRegisterSession) UpdateMinCollateralAmount(value *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.Contract.UpdateMinCollateralAmount(&_SubchainRegister.TransactOpts, value)
}

// UpdateMinCollateralAmount is a paid mutator transaction binding the contract method 0xf6fbe6f0.
//
// Solidity: function updateMinCollateralAmount(uint256 value) returns()
func (_SubchainRegister *SubchainRegisterTransactorSession) UpdateMinCollateralAmount(value *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.Contract.UpdateMinCollateralAmount(&_SubchainRegister.TransactOpts, value)
}

// UpdateMinMinNumValidators is a paid mutator transaction binding the contract method 0x6c671b14.
//
// Solidity: function updateMinMinNumValidators(uint256 value) returns()
func (_SubchainRegister *SubchainRegisterTransactor) UpdateMinMinNumValidators(opts *bind.TransactOpts, value *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.contract.Transact(opts, "updateMinMinNumValidators", value)
}

// UpdateMinMinNumValidators is a paid mutator transaction binding the contract method 0x6c671b14.
//
// Solidity: function updateMinMinNumValidators(uint256 value) returns()
func (_SubchainRegister *SubchainRegisterSession) UpdateMinMinNumValidators(value *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.Contract.UpdateMinMinNumValidators(&_SubchainRegister.TransactOpts, value)
}

// UpdateMinMinNumValidators is a paid mutator transaction binding the contract method 0x6c671b14.
//
// Solidity: function updateMinMinNumValidators(uint256 value) returns()
func (_SubchainRegister *SubchainRegisterTransactorSession) UpdateMinMinNumValidators(value *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.Contract.UpdateMinMinNumValidators(&_SubchainRegister.TransactOpts, value)
}

// UpdateMinPersonalCollateralAmount is a paid mutator transaction binding the contract method 0x8289518d.
//
// Solidity: function updateMinPersonalCollateralAmount(uint256 value) returns()
func (_SubchainRegister *SubchainRegisterTransactor) UpdateMinPersonalCollateralAmount(opts *bind.TransactOpts, value *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.contract.Transact(opts, "updateMinPersonalCollateralAmount", value)
}

// UpdateMinPersonalCollateralAmount is a paid mutator transaction binding the contract method 0x8289518d.
//
// Solidity: function updateMinPersonalCollateralAmount(uint256 value) returns()
func (_SubchainRegister *SubchainRegisterSession) UpdateMinPersonalCollateralAmount(value *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.Contract.UpdateMinPersonalCollateralAmount(&_SubchainRegister.TransactOpts, value)
}

// UpdateMinPersonalCollateralAmount is a paid mutator transaction binding the contract method 0x8289518d.
//
// Solidity: function updateMinPersonalCollateralAmount(uint256 value) returns()
func (_SubchainRegister *SubchainRegisterTransactorSession) UpdateMinPersonalCollateralAmount(value *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.Contract.UpdateMinPersonalCollateralAmount(&_SubchainRegister.TransactOpts, value)
}

// WithdrawCollateral is a paid mutator transaction binding the contract method 0x3d3a066f.
//
// Solidity: function withdrawCollateral(address validatorCandidate, uint256 subchainID, uint256 withdrawalAmount) returns()
func (_SubchainRegister *SubchainRegisterTransactor) WithdrawCollateral(opts *bind.TransactOpts, validatorCandidate common.Address, subchainID *big.Int, withdrawalAmount *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.contract.Transact(opts, "withdrawCollateral", validatorCandidate, subchainID, withdrawalAmount)
}

// WithdrawCollateral is a paid mutator transaction binding the contract method 0x3d3a066f.
//
// Solidity: function withdrawCollateral(address validatorCandidate, uint256 subchainID, uint256 withdrawalAmount) returns()
func (_SubchainRegister *SubchainRegisterSession) WithdrawCollateral(validatorCandidate common.Address, subchainID *big.Int, withdrawalAmount *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.Contract.WithdrawCollateral(&_SubchainRegister.TransactOpts, validatorCandidate, subchainID, withdrawalAmount)
}

// WithdrawCollateral is a paid mutator transaction binding the contract method 0x3d3a066f.
//
// Solidity: function withdrawCollateral(address validatorCandidate, uint256 subchainID, uint256 withdrawalAmount) returns()
func (_SubchainRegister *SubchainRegisterTransactorSession) WithdrawCollateral(validatorCandidate common.Address, subchainID *big.Int, withdrawalAmount *big.Int) (*types.Transaction, error) {
	return _SubchainRegister.Contract.WithdrawCollateral(&_SubchainRegister.TransactOpts, validatorCandidate, subchainID, withdrawalAmount)
}

// SubchainRegisterSendToSubchainEventIterator is returned from FilterSendToSubchainEvent and is used to iterate over the raw logs and unpacked data for SendToSubchainEvent events raised by the SubchainRegister contract.
type SubchainRegisterSendToSubchainEventIterator struct {
	Event *SubchainRegisterSendToSubchainEvent // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *SubchainRegisterSendToSubchainEventIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(SubchainRegisterSendToSubchainEvent)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(SubchainRegisterSendToSubchainEvent)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *SubchainRegisterSendToSubchainEventIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *SubchainRegisterSendToSubchainEventIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// SubchainRegisterSendToSubchainEvent represents a SendToSubchainEvent event raised by the SubchainRegister contract.
type SubchainRegisterSendToSubchainEvent struct {
	SubchainID *big.Int
	Sender     common.Address
	Receiver   common.Address
	EventNonce *big.Int
	Denom      string
	Amount     *big.Int
	Raw        types.Log // Blockchain specific contextual infos
}

// FilterSendToSubchainEvent is a free log retrieval operation binding the contract event 0xb9aa48a9d7a3678cac80fe5ede423fdfda9a2ac4e18208c111349488bfa76cdc.
//
// Solidity: event SendToSubchainEvent(uint256 indexed subchainID, address indexed sender, address receiver, uint256 eventNonce, string denom, uint256 amount)
func (_SubchainRegister *SubchainRegisterFilterer) FilterSendToSubchainEvent(opts *bind.FilterOpts, subchainID []*big.Int, sender []common.Address) (*SubchainRegisterSendToSubchainEventIterator, error) {

	var subchainIDRule []interface{}
	for _, subchainIDItem := range subchainID {
		subchainIDRule = append(subchainIDRule, subchainIDItem)
	}
	var senderRule []interface{}
	for _, senderItem := range sender {
		senderRule = append(senderRule, senderItem)
	}

	logs, sub, err := _SubchainRegister.contract.FilterLogs(opts, "SendToSubchainEvent", subchainIDRule, senderRule)
	if err != nil {
		return nil, err
	}
	return &SubchainRegisterSendToSubchainEventIterator{contract: _SubchainRegister.contract, event: "SendToSubchainEvent", logs: logs, sub: sub}, nil
}

// WatchSendToSubchainEvent is a free log subscription operation binding the contract event 0xb9aa48a9d7a3678cac80fe5ede423fdfda9a2ac4e18208c111349488bfa76cdc.
//
// Solidity: event SendToSubchainEvent(uint256 indexed subchainID, address indexed sender, address receiver, uint256 eventNonce, string denom, uint256 amount)
func (_SubchainRegister *SubchainRegisterFilterer) WatchSendToSubchainEvent(opts *bind.WatchOpts, sink chan<- *SubchainRegisterSendToSubchainEvent, subchainID []*big.Int, sender []common.Address) (event.Subscription, error) {

	var subchainIDRule []interface{}
	for _, subchainIDItem := range subchainID {
		subchainIDRule = append(subchainIDRule, subchainIDItem)
	}
	var senderRule []interface{}
	for _, senderItem := range sender {
		senderRule = append(senderRule, senderItem)
	}

	logs, sub, err := _SubchainRegister.contract.WatchLogs(opts, "SendToSubchainEvent", subchainIDRule, senderRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(SubchainRegisterSendToSubchainEvent)
				if err := _SubchainRegister.contract.UnpackLog(event, "SendToSubchainEvent", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseSendToSubchainEvent is a log parse operation binding the contract event 0xb9aa48a9d7a3678cac80fe5ede423fdfda9a2ac4e18208c111349488bfa76cdc.
//
// Solidity: event SendToSubchainEvent(uint256 indexed subchainID, address indexed sender, address receiver, uint256 eventNonce, string denom, uint256 amount)
func (_SubchainRegister *SubchainRegisterFilterer) ParseSendToSubchainEvent(log types.Log) (*SubchainRegisterSendToSubchainEvent, error) {
	event := new(SubchainRegisterSendToSubchainEvent)
	if err := _SubchainRegister.contract.UnpackLog(event, "SendToSubchainEvent", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}